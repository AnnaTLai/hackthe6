{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar PaymentList;\nvar PaymentPage;\nvar PaymentInstance;\nvar PaymentContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the PaymentList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid -\n *          The SID of the Account that created the Payments resource.\n * @param {string} callSid - The SID of the Call the resource is associated with.\n */\n\n/* jshint ignore:end */\n\nPaymentList = function PaymentList(version, accountSid, callSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function payments\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.PaymentContext}\n   */\n\n  /* jshint ignore:end */\n  function PaymentListInstance(sid) {\n    return PaymentListInstance.get(sid);\n  }\n\n  PaymentListInstance._version = version; // Path Solution\n\n  PaymentListInstance._solution = {\n    accountSid: accountSid,\n    callSid: callSid\n  };\n  PaymentListInstance._uri = `/Accounts/${accountSid}/Calls/${callSid}/Payments.json`;\n  /* jshint ignore:start */\n\n  /**\n   * create a PaymentInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.idempotencyKey -\n   *          A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions.\n   * @param {string} opts.statusCallback -\n   *          Provide an absolute or relative URL to receive status updates regarding your Pay session..\n   * @param {payment.bank_account_type} [opts.bankAccountType] -\n   *          Type of bank account if payment source is ACH.\n   * @param {number} [opts.chargeAmount] -\n   *          A positive decimal value less than 1,000,000 to charge against the credit card or bank account.\n   * @param {string} [opts.currency] - The currency of the `charge_amount`.\n   * @param {string} [opts.description] -\n   *          The description can be used to provide more details regarding the transaction.\n   * @param {string} [opts.input] -\n   *          A list of inputs that should be accepted. Currently only `dtmf` is supported.\n   * @param {number} [opts.minPostalCodeLength] -\n   *          A positive integer that is used to validate the length of the `PostalCode` inputted by the user.\n   * @param {object} [opts.parameter] -\n   *          A single level JSON string that is required when accepting certain information specific only to ACH payments.\n   * @param {string} [opts.paymentConnector] -\n   *          This is the unique name corresponding to the Payment Gateway Connector installed in the Twilio Add-ons.\n   * @param {payment.payment_method} [opts.paymentMethod] -\n   *          Type of payment being captured.\n   * @param {boolean} [opts.postalCode] -\n   *          Indicates whether the credit card PostalCode (zip code) is a required piece of payment information that must be provided by the caller.\n   * @param {boolean} [opts.securityCode] -\n   *          Indicates whether the credit card security code is a required piece of payment information that must be provided by the caller.\n   * @param {number} [opts.timeout] -\n   *          The number of seconds that <Pay> should wait for the caller to press a digit between each subsequent digit, after the first one, before moving on to validate the digits captured.\n   * @param {payment.token_type} [opts.tokenType] -\n   *          Indicates whether the payment method should be tokenized as a `one-time` or `reusable` token.\n   * @param {string} [opts.validCardTypes] -\n   *          Credit card types separated by space that Pay should accept.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed PaymentInstance\n   */\n\n  /* jshint ignore:end */\n\n  PaymentListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.idempotencyKey)) {\n      throw new Error('Required parameter \"opts.idempotencyKey\" missing.');\n    }\n\n    if (_.isUndefined(opts.statusCallback)) {\n      throw new Error('Required parameter \"opts.statusCallback\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'IdempotencyKey': _.get(opts, 'idempotencyKey'),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'BankAccountType': _.get(opts, 'bankAccountType'),\n      'ChargeAmount': _.get(opts, 'chargeAmount'),\n      'Currency': _.get(opts, 'currency'),\n      'Description': _.get(opts, 'description'),\n      'Input': _.get(opts, 'input'),\n      'MinPostalCodeLength': _.get(opts, 'minPostalCodeLength'),\n      'Parameter': serialize.object(_.get(opts, 'parameter')),\n      'PaymentConnector': _.get(opts, 'paymentConnector'),\n      'PaymentMethod': _.get(opts, 'paymentMethod'),\n      'PostalCode': serialize.bool(_.get(opts, 'postalCode')),\n      'SecurityCode': serialize.bool(_.get(opts, 'securityCode')),\n      'Timeout': _.get(opts, 'timeout'),\n      'TokenType': _.get(opts, 'tokenType'),\n      'ValidCardTypes': _.get(opts, 'validCardTypes')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new PaymentInstance(this._version, payload, this._solution.accountSid, this._solution.callSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a payment\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentList#\n   *\n   * @param {string} sid - The SID of Payments session\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.PaymentContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  PaymentListInstance.get = function get(sid) {\n    return new PaymentContext(this._version, this._solution.accountSid, this._solution.callSid, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  PaymentListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  PaymentListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return PaymentListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the PaymentPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {PaymentSolution} solution - Path solution\n *\n * @returns PaymentPage\n */\n\n/* jshint ignore:end */\n\n\nPaymentPage = function PaymentPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(PaymentPage.prototype, Page.prototype);\n\nPaymentPage.prototype.constructor = PaymentPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of PaymentInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentPage#\n *\n * @param {PaymentPayload} payload - Payload response from the API\n *\n * @returns PaymentInstance\n */\n\n/* jshint ignore:end */\n\nPaymentPage.prototype.getInstance = function getInstance(payload) {\n  return new PaymentInstance(this._version, payload, this._solution.accountSid, this._solution.callSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nPaymentPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nPaymentPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the PaymentContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentInstance\n *\n * @property {string} accountSid -\n *          The SID of the Account that created the Payments resource.\n * @property {string} callSid -\n *          The SID of the Call the resource is associated with.\n * @property {string} sid - The SID of the Payments resource.\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n *\n * @param {V2010} version - Version of the resource\n * @param {PaymentPayload} payload - The instance payload\n * @param {sid} accountSid -\n *          The SID of the Account that created the Payments resource.\n * @param {sid} callSid - The SID of the Call the resource is associated with.\n * @param {sid} sid - The SID of Payments session\n */\n\n/* jshint ignore:end */\n\n\nPaymentInstance = function PaymentInstance(version, payload, accountSid, callSid, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.callSid = payload.call_sid; // jshint ignore:line\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n\n  this.uri = payload.uri; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    accountSid: accountSid,\n    callSid: callSid,\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(PaymentInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new PaymentContext(this._version, this._solution.accountSid, this._solution.callSid, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * update a PaymentInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentInstance#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.idempotencyKey -\n *          A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions.\n * @param {string} opts.statusCallback -\n *          Provide an absolute or relative URL to receive status updates regarding your Pay session.\n * @param {payment.capture} [opts.capture] -\n *          The piece of payment information that you wish the caller to enter.\n * @param {payment.status} [opts.status] -\n *          Indicates whether the current payment session should be cancelled or completed.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PaymentInstance\n */\n\n/* jshint ignore:end */\n\nPaymentInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nPaymentInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nPaymentInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the PaymentContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid - The SID of the Account that will update the resource\n * @param {sid} callSid - The SID of the call that will create the resource.\n * @param {sid} sid - The SID of Payments session\n */\n\n/* jshint ignore:end */\n\n\nPaymentContext = function PaymentContext(version, accountSid, callSid, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    accountSid: accountSid,\n    callSid: callSid,\n    sid: sid\n  };\n  this._uri = `/Accounts/${accountSid}/Calls/${callSid}/Payments/${sid}.json`;\n};\n/* jshint ignore:start */\n\n/**\n * update a PaymentInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentContext#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.idempotencyKey -\n *          A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions.\n * @param {string} opts.statusCallback -\n *          Provide an absolute or relative URL to receive status updates regarding your Pay session.\n * @param {payment.capture} [opts.capture] -\n *          The piece of payment information that you wish the caller to enter.\n * @param {payment.status} [opts.status] -\n *          Indicates whether the current payment session should be cancelled or completed.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PaymentInstance\n */\n\n/* jshint ignore:end */\n\n\nPaymentContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n\n  if (_.isUndefined(opts.idempotencyKey)) {\n    throw new Error('Required parameter \"opts.idempotencyKey\" missing.');\n  }\n\n  if (_.isUndefined(opts.statusCallback)) {\n    throw new Error('Required parameter \"opts.statusCallback\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'IdempotencyKey': _.get(opts, 'idempotencyKey'),\n    'StatusCallback': _.get(opts, 'statusCallback'),\n    'Capture': _.get(opts, 'capture'),\n    'Status': _.get(opts, 'status')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new PaymentInstance(this._version, payload, this._solution.accountSid, this._solution.callSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nPaymentContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nPaymentContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  PaymentList: PaymentList,\n  PaymentPage: PaymentPage,\n  PaymentInstance: PaymentInstance,\n  PaymentContext: PaymentContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/rest/api/v2010/account/call/payment.js"],"names":["Q","require","_","util","Page","deserialize","serialize","values","PaymentList","PaymentPage","PaymentInstance","PaymentContext","version","accountSid","callSid","PaymentListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","idempotencyKey","statusCallback","deferred","defer","data","of","object","bool","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","account_sid","call_sid","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","_context","undefined","Object","defineProperty","update","_proxy","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar PaymentList;\nvar PaymentPage;\nvar PaymentInstance;\nvar PaymentContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the PaymentList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid -\n *          The SID of the Account that created the Payments resource.\n * @param {string} callSid - The SID of the Call the resource is associated with.\n */\n/* jshint ignore:end */\nPaymentList = function PaymentList(version, accountSid, callSid) {\n  /* jshint ignore:start */\n  /**\n   * @function payments\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.PaymentContext}\n   */\n  /* jshint ignore:end */\n  function PaymentListInstance(sid) {\n    return PaymentListInstance.get(sid);\n  }\n\n  PaymentListInstance._version = version;\n  // Path Solution\n  PaymentListInstance._solution = {accountSid: accountSid, callSid: callSid};\n  PaymentListInstance._uri = `/Accounts/${accountSid}/Calls/${callSid}/Payments.json`;\n  /* jshint ignore:start */\n  /**\n   * create a PaymentInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.idempotencyKey -\n   *          A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions.\n   * @param {string} opts.statusCallback -\n   *          Provide an absolute or relative URL to receive status updates regarding your Pay session..\n   * @param {payment.bank_account_type} [opts.bankAccountType] -\n   *          Type of bank account if payment source is ACH.\n   * @param {number} [opts.chargeAmount] -\n   *          A positive decimal value less than 1,000,000 to charge against the credit card or bank account.\n   * @param {string} [opts.currency] - The currency of the `charge_amount`.\n   * @param {string} [opts.description] -\n   *          The description can be used to provide more details regarding the transaction.\n   * @param {string} [opts.input] -\n   *          A list of inputs that should be accepted. Currently only `dtmf` is supported.\n   * @param {number} [opts.minPostalCodeLength] -\n   *          A positive integer that is used to validate the length of the `PostalCode` inputted by the user.\n   * @param {object} [opts.parameter] -\n   *          A single level JSON string that is required when accepting certain information specific only to ACH payments.\n   * @param {string} [opts.paymentConnector] -\n   *          This is the unique name corresponding to the Payment Gateway Connector installed in the Twilio Add-ons.\n   * @param {payment.payment_method} [opts.paymentMethod] -\n   *          Type of payment being captured.\n   * @param {boolean} [opts.postalCode] -\n   *          Indicates whether the credit card PostalCode (zip code) is a required piece of payment information that must be provided by the caller.\n   * @param {boolean} [opts.securityCode] -\n   *          Indicates whether the credit card security code is a required piece of payment information that must be provided by the caller.\n   * @param {number} [opts.timeout] -\n   *          The number of seconds that <Pay> should wait for the caller to press a digit between each subsequent digit, after the first one, before moving on to validate the digits captured.\n   * @param {payment.token_type} [opts.tokenType] -\n   *          Indicates whether the payment method should be tokenized as a `one-time` or `reusable` token.\n   * @param {string} [opts.validCardTypes] -\n   *          Credit card types separated by space that Pay should accept.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed PaymentInstance\n   */\n  /* jshint ignore:end */\n  PaymentListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.idempotencyKey)) {\n      throw new Error('Required parameter \"opts.idempotencyKey\" missing.');\n    }\n    if (_.isUndefined(opts.statusCallback)) {\n      throw new Error('Required parameter \"opts.statusCallback\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'IdempotencyKey': _.get(opts, 'idempotencyKey'),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'BankAccountType': _.get(opts, 'bankAccountType'),\n      'ChargeAmount': _.get(opts, 'chargeAmount'),\n      'Currency': _.get(opts, 'currency'),\n      'Description': _.get(opts, 'description'),\n      'Input': _.get(opts, 'input'),\n      'MinPostalCodeLength': _.get(opts, 'minPostalCodeLength'),\n      'Parameter': serialize.object(_.get(opts, 'parameter')),\n      'PaymentConnector': _.get(opts, 'paymentConnector'),\n      'PaymentMethod': _.get(opts, 'paymentMethod'),\n      'PostalCode': serialize.bool(_.get(opts, 'postalCode')),\n      'SecurityCode': serialize.bool(_.get(opts, 'securityCode')),\n      'Timeout': _.get(opts, 'timeout'),\n      'TokenType': _.get(opts, 'tokenType'),\n      'ValidCardTypes': _.get(opts, 'validCardTypes')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new PaymentInstance(\n        this._version,\n        payload,\n        this._solution.accountSid,\n        this._solution.callSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a payment\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentList#\n   *\n   * @param {string} sid - The SID of Payments session\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.PaymentContext}\n   */\n  /* jshint ignore:end */\n  PaymentListInstance.get = function get(sid) {\n    return new PaymentContext(this._version, this._solution.accountSid, this._solution.callSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  PaymentListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  PaymentListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return PaymentListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the PaymentPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {PaymentSolution} solution - Path solution\n *\n * @returns PaymentPage\n */\n/* jshint ignore:end */\nPaymentPage = function PaymentPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(PaymentPage.prototype, Page.prototype);\nPaymentPage.prototype.constructor = PaymentPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of PaymentInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentPage#\n *\n * @param {PaymentPayload} payload - Payload response from the API\n *\n * @returns PaymentInstance\n */\n/* jshint ignore:end */\nPaymentPage.prototype.getInstance = function getInstance(payload) {\n  return new PaymentInstance(\n    this._version,\n    payload,\n    this._solution.accountSid,\n    this._solution.callSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nPaymentPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nPaymentPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the PaymentContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentInstance\n *\n * @property {string} accountSid -\n *          The SID of the Account that created the Payments resource.\n * @property {string} callSid -\n *          The SID of the Call the resource is associated with.\n * @property {string} sid - The SID of the Payments resource.\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n *\n * @param {V2010} version - Version of the resource\n * @param {PaymentPayload} payload - The instance payload\n * @param {sid} accountSid -\n *          The SID of the Account that created the Payments resource.\n * @param {sid} callSid - The SID of the Call the resource is associated with.\n * @param {sid} sid - The SID of Payments session\n */\n/* jshint ignore:end */\nPaymentInstance = function PaymentInstance(version, payload, accountSid,\n                                            callSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.callSid = payload.call_sid; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.uri = payload.uri; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {accountSid: accountSid, callSid: callSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(PaymentInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new PaymentContext(\n          this._version,\n          this._solution.accountSid,\n          this._solution.callSid,\n          this._solution.sid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * update a PaymentInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentInstance#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.idempotencyKey -\n *          A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions.\n * @param {string} opts.statusCallback -\n *          Provide an absolute or relative URL to receive status updates regarding your Pay session.\n * @param {payment.capture} [opts.capture] -\n *          The piece of payment information that you wish the caller to enter.\n * @param {payment.status} [opts.status] -\n *          Indicates whether the current payment session should be cancelled or completed.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PaymentInstance\n */\n/* jshint ignore:end */\nPaymentInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nPaymentInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nPaymentInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the PaymentContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid - The SID of the Account that will update the resource\n * @param {sid} callSid - The SID of the call that will create the resource.\n * @param {sid} sid - The SID of Payments session\n */\n/* jshint ignore:end */\nPaymentContext = function PaymentContext(version, accountSid, callSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {accountSid: accountSid, callSid: callSid, sid: sid, };\n  this._uri = `/Accounts/${accountSid}/Calls/${callSid}/Payments/${sid}.json`;\n};\n\n/* jshint ignore:start */\n/**\n * update a PaymentInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentContext#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.idempotencyKey -\n *          A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions.\n * @param {string} opts.statusCallback -\n *          Provide an absolute or relative URL to receive status updates regarding your Pay session.\n * @param {payment.capture} [opts.capture] -\n *          The piece of payment information that you wish the caller to enter.\n * @param {payment.status} [opts.status] -\n *          Indicates whether the current payment session should be cancelled or completed.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PaymentInstance\n */\n/* jshint ignore:end */\nPaymentContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n  if (_.isUndefined(opts.idempotencyKey)) {\n    throw new Error('Required parameter \"opts.idempotencyKey\" missing.');\n  }\n  if (_.isUndefined(opts.statusCallback)) {\n    throw new Error('Required parameter \"opts.statusCallback\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'IdempotencyKey': _.get(opts, 'idempotencyKey'),\n    'StatusCallback': _.get(opts, 'statusCallback'),\n    'Capture': _.get(opts, 'capture'),\n    'Status': _.get(opts, 'status')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new PaymentInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.callSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nPaymentContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nPaymentContext.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  PaymentList: PaymentList,\n  PaymentPage: PaymentPage,\n  PaymentInstance: PaymentInstance,\n  PaymentContext: PaymentContext\n};\n"]},"metadata":{},"sourceType":"module"}