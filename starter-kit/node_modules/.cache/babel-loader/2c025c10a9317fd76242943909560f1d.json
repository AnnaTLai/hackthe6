{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar PhoneNumberList;\nvar PhoneNumberPage;\nvar PhoneNumberInstance;\nvar PhoneNumberContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the PhoneNumberList\n *\n * @constructor Twilio.Lookups.V1.PhoneNumberList\n *\n * @param {Twilio.Lookups.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nPhoneNumberList = function PhoneNumberList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function phoneNumbers\n   * @memberof Twilio.Lookups.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Lookups.V1.PhoneNumberContext}\n   */\n\n  /* jshint ignore:end */\n  function PhoneNumberListInstance(sid) {\n    return PhoneNumberListInstance.get(sid);\n  }\n\n  PhoneNumberListInstance._version = version; // Path Solution\n\n  PhoneNumberListInstance._solution = {};\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a phone_number\n   *\n   * @function get\n   * @memberof Twilio.Lookups.V1.PhoneNumberList#\n   *\n   * @param {string} phoneNumber - The phone number to fetch in E.164 format\n   *\n   * @returns {Twilio.Lookups.V1.PhoneNumberContext}\n   */\n\n  /* jshint ignore:end */\n\n  PhoneNumberListInstance.get = function get(phoneNumber) {\n    return new PhoneNumberContext(this._version, phoneNumber);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Lookups.V1.PhoneNumberList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  PhoneNumberListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  PhoneNumberListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return PhoneNumberListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the PhoneNumberPage\n *\n * @constructor Twilio.Lookups.V1.PhoneNumberPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {PhoneNumberSolution} solution - Path solution\n *\n * @returns PhoneNumberPage\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberPage = function PhoneNumberPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(PhoneNumberPage.prototype, Page.prototype);\n\nPhoneNumberPage.prototype.constructor = PhoneNumberPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of PhoneNumberInstance\n *\n * @function getInstance\n * @memberof Twilio.Lookups.V1.PhoneNumberPage#\n *\n * @param {PhoneNumberPayload} payload - Payload response from the API\n *\n * @returns PhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\nPhoneNumberPage.prototype.getInstance = function getInstance(payload) {\n  return new PhoneNumberInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Lookups.V1.PhoneNumberPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nPhoneNumberPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the PhoneNumberContext\n *\n * @constructor Twilio.Lookups.V1.PhoneNumberInstance\n *\n * @property {object} callerName - The name of the phone number's owner\n * @property {string} countryCode - The ISO country code for the phone number\n * @property {string} phoneNumber - The phone number in E.164 format\n * @property {string} nationalFormat - The phone number, in national format\n * @property {object} carrier - The telecom company that provides the phone number\n * @property {object} addOns -\n *          A JSON string with the results of the Add-ons you specified\n * @property {string} url - The absolute URL of the resource\n *\n * @param {V1} version - Version of the resource\n * @param {PhoneNumberPayload} payload - The instance payload\n * @param {phone_number} phoneNumber - The phone number to fetch in E.164 format\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberInstance = function PhoneNumberInstance(version, payload, phoneNumber) {\n  this._version = version; // Marshaled Properties\n\n  this.callerName = payload.caller_name; // jshint ignore:line\n\n  this.countryCode = payload.country_code; // jshint ignore:line\n\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n\n  this.nationalFormat = payload.national_format; // jshint ignore:line\n\n  this.carrier = payload.carrier; // jshint ignore:line\n\n  this.addOns = payload.add_ons; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    phoneNumber: phoneNumber || this.phoneNumber\n  };\n};\n\nObject.defineProperty(PhoneNumberInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new PhoneNumberContext(this._version, this._solution.phoneNumber);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a PhoneNumberInstance\n *\n * @function fetch\n * @memberof Twilio.Lookups.V1.PhoneNumberInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.countryCode] - The ISO country code of the phone number\n * @param {string|list} [opts.type] - The type of information to return\n * @param {string|list} [opts.addOns] -\n *          The unique_name of an Add-on you would like to invoke\n * @param {object} [opts.addOnsData] -\n *          Data specific to the add-on you would like to invoke\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\nPhoneNumberInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Lookups.V1.PhoneNumberInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nPhoneNumberInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the PhoneNumberContext\n *\n * @constructor Twilio.Lookups.V1.PhoneNumberContext\n *\n * @param {V1} version - Version of the resource\n * @param {phone_number} phoneNumber - The phone number to fetch in E.164 format\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberContext = function PhoneNumberContext(version, phoneNumber) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    phoneNumber: phoneNumber\n  };\n  this._uri = `/PhoneNumbers/${phoneNumber}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a PhoneNumberInstance\n *\n * @function fetch\n * @memberof Twilio.Lookups.V1.PhoneNumberContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.countryCode] - The ISO country code of the phone number\n * @param {string|list} [opts.type] - The type of information to return\n * @param {string|list} [opts.addOns] -\n *          The unique_name of an Add-on you would like to invoke\n * @param {object} [opts.addOnsData] -\n *          Data specific to the add-on you would like to invoke\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'CountryCode': _.get(opts, 'countryCode'),\n    'Type': serialize.map(_.get(opts, 'type'), function (e) {\n      return e;\n    }),\n    'AddOns': serialize.map(_.get(opts, 'addOns'), function (e) {\n      return e;\n    })\n  });\n\n  _.extend(data, serialize.prefixedCollapsibleMap(opts.addOnsData, 'AddOns'));\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new PhoneNumberInstance(this._version, payload, this._solution.phoneNumber));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Lookups.V1.PhoneNumberContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nPhoneNumberContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  PhoneNumberList: PhoneNumberList,\n  PhoneNumberPage: PhoneNumberPage,\n  PhoneNumberInstance: PhoneNumberInstance,\n  PhoneNumberContext: PhoneNumberContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/lookups/v1/phoneNumber.js"],"names":["Q","require","_","util","Page","serialize","values","PhoneNumberList","PhoneNumberPage","PhoneNumberInstance","PhoneNumberContext","version","PhoneNumberListInstance","sid","get","_version","_solution","phoneNumber","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","callerName","caller_name","countryCode","country_code","phone_number","nationalFormat","national_format","carrier","addOns","add_ons","url","_context","undefined","Object","defineProperty","fetch","opts","callback","_proxy","_uri","deferred","defer","data","of","map","e","prefixedCollapsibleMap","addOnsData","promise","uri","method","params","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar PhoneNumberList;\nvar PhoneNumberPage;\nvar PhoneNumberInstance;\nvar PhoneNumberContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the PhoneNumberList\n *\n * @constructor Twilio.Lookups.V1.PhoneNumberList\n *\n * @param {Twilio.Lookups.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nPhoneNumberList = function PhoneNumberList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function phoneNumbers\n   * @memberof Twilio.Lookups.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Lookups.V1.PhoneNumberContext}\n   */\n  /* jshint ignore:end */\n  function PhoneNumberListInstance(sid) {\n    return PhoneNumberListInstance.get(sid);\n  }\n\n  PhoneNumberListInstance._version = version;\n  // Path Solution\n  PhoneNumberListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a phone_number\n   *\n   * @function get\n   * @memberof Twilio.Lookups.V1.PhoneNumberList#\n   *\n   * @param {string} phoneNumber - The phone number to fetch in E.164 format\n   *\n   * @returns {Twilio.Lookups.V1.PhoneNumberContext}\n   */\n  /* jshint ignore:end */\n  PhoneNumberListInstance.get = function get(phoneNumber) {\n    return new PhoneNumberContext(this._version, phoneNumber);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Lookups.V1.PhoneNumberList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  PhoneNumberListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  PhoneNumberListInstance[util.inspect.custom] = function inspect(depth, options)\n      {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return PhoneNumberListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the PhoneNumberPage\n *\n * @constructor Twilio.Lookups.V1.PhoneNumberPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {PhoneNumberSolution} solution - Path solution\n *\n * @returns PhoneNumberPage\n */\n/* jshint ignore:end */\nPhoneNumberPage = function PhoneNumberPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(PhoneNumberPage.prototype, Page.prototype);\nPhoneNumberPage.prototype.constructor = PhoneNumberPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of PhoneNumberInstance\n *\n * @function getInstance\n * @memberof Twilio.Lookups.V1.PhoneNumberPage#\n *\n * @param {PhoneNumberPayload} payload - Payload response from the API\n *\n * @returns PhoneNumberInstance\n */\n/* jshint ignore:end */\nPhoneNumberPage.prototype.getInstance = function getInstance(payload) {\n  return new PhoneNumberInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Lookups.V1.PhoneNumberPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nPhoneNumberPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nPhoneNumberPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the PhoneNumberContext\n *\n * @constructor Twilio.Lookups.V1.PhoneNumberInstance\n *\n * @property {object} callerName - The name of the phone number's owner\n * @property {string} countryCode - The ISO country code for the phone number\n * @property {string} phoneNumber - The phone number in E.164 format\n * @property {string} nationalFormat - The phone number, in national format\n * @property {object} carrier - The telecom company that provides the phone number\n * @property {object} addOns -\n *          A JSON string with the results of the Add-ons you specified\n * @property {string} url - The absolute URL of the resource\n *\n * @param {V1} version - Version of the resource\n * @param {PhoneNumberPayload} payload - The instance payload\n * @param {phone_number} phoneNumber - The phone number to fetch in E.164 format\n */\n/* jshint ignore:end */\nPhoneNumberInstance = function PhoneNumberInstance(version, payload,\n                                                    phoneNumber) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.callerName = payload.caller_name; // jshint ignore:line\n  this.countryCode = payload.country_code; // jshint ignore:line\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n  this.nationalFormat = payload.national_format; // jshint ignore:line\n  this.carrier = payload.carrier; // jshint ignore:line\n  this.addOns = payload.add_ons; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {phoneNumber: phoneNumber || this.phoneNumber, };\n};\n\nObject.defineProperty(PhoneNumberInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new PhoneNumberContext(this._version, this._solution.phoneNumber);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a PhoneNumberInstance\n *\n * @function fetch\n * @memberof Twilio.Lookups.V1.PhoneNumberInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.countryCode] - The ISO country code of the phone number\n * @param {string|list} [opts.type] - The type of information to return\n * @param {string|list} [opts.addOns] -\n *          The unique_name of an Add-on you would like to invoke\n * @param {object} [opts.addOnsData] -\n *          Data specific to the add-on you would like to invoke\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PhoneNumberInstance\n */\n/* jshint ignore:end */\nPhoneNumberInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Lookups.V1.PhoneNumberInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nPhoneNumberInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nPhoneNumberInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the PhoneNumberContext\n *\n * @constructor Twilio.Lookups.V1.PhoneNumberContext\n *\n * @param {V1} version - Version of the resource\n * @param {phone_number} phoneNumber - The phone number to fetch in E.164 format\n */\n/* jshint ignore:end */\nPhoneNumberContext = function PhoneNumberContext(version, phoneNumber) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {phoneNumber: phoneNumber, };\n  this._uri = `/PhoneNumbers/${phoneNumber}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a PhoneNumberInstance\n *\n * @function fetch\n * @memberof Twilio.Lookups.V1.PhoneNumberContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.countryCode] - The ISO country code of the phone number\n * @param {string|list} [opts.type] - The type of information to return\n * @param {string|list} [opts.addOns] -\n *          The unique_name of an Add-on you would like to invoke\n * @param {object} [opts.addOnsData] -\n *          Data specific to the add-on you would like to invoke\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PhoneNumberInstance\n */\n/* jshint ignore:end */\nPhoneNumberContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'CountryCode': _.get(opts, 'countryCode'),\n    'Type': serialize.map(_.get(opts, 'type'), function(e) { return e; }),\n    'AddOns': serialize.map(_.get(opts, 'addOns'), function(e) { return e; })\n  });\n  _.extend(data, serialize.prefixedCollapsibleMap(opts.addOnsData, 'AddOns'));\n\n  var promise = this._version.fetch({uri: this._uri, method: 'GET', params: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new PhoneNumberInstance(this._version, payload, this._solution.phoneNumber));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Lookups.V1.PhoneNumberContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nPhoneNumberContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nPhoneNumberContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  PhoneNumberList: PhoneNumberList,\n  PhoneNumberPage: PhoneNumberPage,\n  PhoneNumberInstance: PhoneNumberInstance,\n  PhoneNumberContext: PhoneNumberContext\n};\n"]},"metadata":{},"sourceType":"script"}