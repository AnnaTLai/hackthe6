{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\n\nvar axios = require('axios');\n\nvar fs = require('fs');\n\nvar HttpsProxyAgent = require('https-proxy-agent');\n\nvar Q = require('q');\n\nvar qs = require('qs');\n\nvar Response = require('../http/response');\n\nvar Request = require('../http/request');\n\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n\nvar RequestClient = function () {};\n/**\n * Make http request\n * @param {object} opts - The options argument\n * @param {string} opts.method - The http method\n * @param {string} opts.uri - The request uri\n * @param {string} [opts.username] - The username used for auth\n * @param {string} [opts.password] - The password used for auth\n * @param {object} [opts.headers] - The request headers\n * @param {object} [opts.params] - The request params\n * @param {object} [opts.data] - The request data\n * @param {int} [opts.timeout=30000] - The request timeout in milliseconds\n * @param {boolean} [opts.allowRedirects] - Should the client follow redirects\n * @param {boolean} [opts.forever] - Set to true to use the forever-agent\n * @param {string} [opts.logLevel] - Show debug logs\n */\n\n\n_c = RequestClient;\n\nRequestClient.prototype.request = function (opts) {\n  opts = opts || {};\n\n  if (!opts.method) {\n    throw new Error('http method is required');\n  }\n\n  if (!opts.uri) {\n    throw new Error('uri is required');\n  }\n\n  var deferred = Q.defer();\n  var headers = opts.headers || {};\n\n  if (!headers.Connection && !headers.connection && opts.forever) {\n    headers.Connection = 'keep-alive';\n  } else if (!headers.Connection && !headers.connection) {\n    headers.Connection = 'close';\n  }\n\n  if (opts.username && opts.password) {\n    var b64Auth = Buffer.from(opts.username + ':' + opts.password).toString('base64');\n    headers.Authorization = 'Basic ' + b64Auth;\n  }\n\n  var options = {\n    timeout: opts.timeout || 30000,\n    maxRedirects: opts.allowRedirects ? 10 : 0,\n    // Same number of allowed redirects as request module default\n    url: opts.uri,\n    method: opts.method,\n    headers: opts.headers,\n    httpsAgent: process.env.HTTP_PROXY ? new HttpsProxyAgent(process.env.HTTP_PROXY) : undefined,\n    proxy: false,\n    validateStatus: status => status >= 100 && status < 600\n  };\n\n  if (process.env.TWILIO_CA_BUNDLE !== undefined) {\n    if (this.ca === undefined) {\n      this.ca = fs.readFileSync(process.env.TWILIO_CA_BUNDLE);\n    }\n\n    options.ca = this.ca;\n  }\n\n  if (!_.isNull(opts.data)) {\n    options.data = qs.stringify(opts.data, {\n      arrayFormat: 'repeat'\n    });\n  }\n\n  if (!_.isNull(opts.params)) {\n    options.params = opts.params;\n\n    options.paramsSerializer = params => {\n      return qs.stringify(params, {\n        arrayFormat: 'repeat'\n      });\n    };\n  }\n\n  var optionsRequest = {\n    method: options.method,\n    url: options.url,\n    auth: b64Auth || null,\n    params: options.params,\n    data: opts.data,\n    headers: options.headers,\n    ca: options.ca\n  };\n\n  if (opts.logLevel === 'debug') {\n    this.logRequest(options);\n  }\n\n  var _this = this;\n\n  this.lastResponse = undefined;\n  this.lastRequest = new Request(optionsRequest);\n  axios(options).then(response => {\n    if (opts.logLevel === 'debug') {\n      console.log(`response.statusCode: ${response.status}`);\n      console.log(`response.headers: ${JSON.stringify(response.headers)}`);\n    }\n\n    _this.lastResponse = new Response(response.status, response.data, response.headers);\n    deferred.resolve({\n      statusCode: response.status,\n      body: response.data\n    });\n  }).catch(error => {\n    _this.lastResponse = undefined;\n    deferred.reject(error);\n  });\n  return deferred.promise;\n};\n\nRequestClient.prototype.filterLoggingHeaders = function (headers) {\n  return Object.keys(headers).filter(header => {\n    return !'authorization'.includes(header.toLowerCase());\n  });\n};\n\nRequestClient.prototype.logRequest = function (options) {\n  console.log('-- BEGIN Twilio API Request --');\n  console.log(`${options.method} ${options.url}`);\n\n  if (options.params) {\n    console.log('Querystring:');\n    console.log(options.params);\n  }\n\n  if (options.headers) {\n    console.log('Headers:');\n    const filteredHeaderKeys = this.filterLoggingHeaders(options.headers);\n    filteredHeaderKeys.forEach(header => console.log(`${header}: ${options.headers[header]}`));\n  }\n\n  console.log('-- END Twilio API Request --');\n};\n\nmodule.exports = RequestClient;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestClient\");","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/base/RequestClient.js"],"names":["_","require","axios","fs","HttpsProxyAgent","Q","qs","Response","Request","defaults","headers","post","RequestClient","prototype","request","opts","method","Error","uri","deferred","defer","Connection","connection","forever","username","password","b64Auth","Buffer","from","toString","Authorization","options","timeout","maxRedirects","allowRedirects","url","httpsAgent","process","env","HTTP_PROXY","undefined","proxy","validateStatus","status","TWILIO_CA_BUNDLE","ca","readFileSync","isNull","data","stringify","arrayFormat","params","paramsSerializer","optionsRequest","auth","logLevel","logRequest","_this","lastResponse","lastRequest","then","response","console","log","JSON","resolve","statusCode","body","catch","error","reject","promise","filterLoggingHeaders","Object","keys","filter","header","includes","toLowerCase","filteredHeaderKeys","forEach","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _ = require('lodash');\nvar axios = require('axios');\nvar fs = require('fs');\nvar HttpsProxyAgent = require('https-proxy-agent');\nvar Q = require('q');\nvar qs = require('qs');\nvar Response = require('../http/response');\nvar Request = require('../http/request');\n\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n\nvar RequestClient = function () { };\n\n/**\n * Make http request\n * @param {object} opts - The options argument\n * @param {string} opts.method - The http method\n * @param {string} opts.uri - The request uri\n * @param {string} [opts.username] - The username used for auth\n * @param {string} [opts.password] - The password used for auth\n * @param {object} [opts.headers] - The request headers\n * @param {object} [opts.params] - The request params\n * @param {object} [opts.data] - The request data\n * @param {int} [opts.timeout=30000] - The request timeout in milliseconds\n * @param {boolean} [opts.allowRedirects] - Should the client follow redirects\n * @param {boolean} [opts.forever] - Set to true to use the forever-agent\n * @param {string} [opts.logLevel] - Show debug logs\n */\nRequestClient.prototype.request = function (opts) {\n  opts = opts || {};\n  if (!opts.method) {\n    throw new Error('http method is required');\n  }\n\n  if (!opts.uri) {\n    throw new Error('uri is required');\n  }\n\n  var deferred = Q.defer();\n  var headers = opts.headers || {};\n\n  if (!headers.Connection && !headers.connection && opts.forever) {\n    headers.Connection = 'keep-alive';\n  } else if (!headers.Connection && !headers.connection) {\n    headers.Connection = 'close';\n  }\n\n  if (opts.username && opts.password) {\n    var b64Auth = Buffer.from(opts.username + ':' + opts.password).toString('base64');\n    headers.Authorization = 'Basic ' + b64Auth;\n  }\n\n  var options = {\n    timeout: opts.timeout || 30000,\n    maxRedirects: opts.allowRedirects ? 10 : 0, // Same number of allowed redirects as request module default\n    url: opts.uri,\n    method: opts.method,\n    headers: opts.headers,\n    httpsAgent: process.env.HTTP_PROXY ? new HttpsProxyAgent(process.env.HTTP_PROXY) : undefined,\n    proxy: false,\n    validateStatus: status => status >= 100 && status < 600,\n  };\n\n  if (process.env.TWILIO_CA_BUNDLE !== undefined) {\n    if (this.ca === undefined) {\n      this.ca = fs.readFileSync(process.env.TWILIO_CA_BUNDLE);\n    }\n    options.ca = this.ca;\n  }\n\n  if (!_.isNull(opts.data)) {\n    options.data = qs.stringify(opts.data, { arrayFormat: 'repeat' });\n  }\n\n  if (!_.isNull(opts.params)) {\n    options.params = opts.params;\n    options.paramsSerializer = (params) => {\n      return qs.stringify(params, { arrayFormat: 'repeat' });\n    };\n  }\n\n  var optionsRequest = {\n    method: options.method,\n    url: options.url,\n    auth: b64Auth || null,\n    params: options.params,\n    data: opts.data,\n    headers: options.headers,\n    ca: options.ca\n  };\n\n  if (opts.logLevel === 'debug') {\n    this.logRequest(options)\n  }\n\n  var _this = this;\n  this.lastResponse = undefined;\n  this.lastRequest = new Request(optionsRequest);\n\n  axios(options).then((response) => {\n    if (opts.logLevel === 'debug') {\n      console.log(`response.statusCode: ${response.status}`)\n      console.log(`response.headers: ${JSON.stringify(response.headers)}`)\n    }\n    _this.lastResponse = new Response(response.status, response.data, response.headers);\n    deferred.resolve({\n      statusCode: response.status,\n      body: response.data,\n    });\n  }).catch((error) => {\n    _this.lastResponse = undefined;\n    deferred.reject(error);\n  });\n\n  return deferred.promise;\n};\n\nRequestClient.prototype.filterLoggingHeaders = function (headers){\n  return Object.keys(headers).filter((header) => {\n    return !'authorization'.includes(header.toLowerCase());\n  });\n}\n\nRequestClient.prototype.logRequest = function (options){\n  console.log('-- BEGIN Twilio API Request --');\n  console.log(`${options.method} ${options.url}`);\n\n  if (options.params) {\n    console.log('Querystring:');\n    console.log(options.params);\n  }\n\n  if (options.headers) {\n    console.log('Headers:');\n    const filteredHeaderKeys = this.filterLoggingHeaders(options.headers);\n    filteredHeaderKeys.forEach((header) => console.log(`${header}: ${options.headers[header]}`));\n  }\n\n  console.log('-- END Twilio API Request --');\n}\n\nmodule.exports = RequestClient;\n"]},"metadata":{},"sourceType":"module"}