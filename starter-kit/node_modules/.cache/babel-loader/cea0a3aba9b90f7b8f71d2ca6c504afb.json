{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar RatePlanList;\nvar RatePlanPage;\nvar RatePlanInstance;\nvar RatePlanContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the RatePlanList\n *\n * @constructor Twilio.Wireless.V1.RatePlanList\n *\n * @param {Twilio.Wireless.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nRatePlanList = function RatePlanList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function ratePlans\n   * @memberof Twilio.Wireless.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Wireless.V1.RatePlanContext}\n   */\n\n  /* jshint ignore:end */\n  function RatePlanListInstance(sid) {\n    return RatePlanListInstance.get(sid);\n  }\n\n  RatePlanListInstance._version = version; // Path Solution\n\n  RatePlanListInstance._solution = {};\n  RatePlanListInstance._uri = `/RatePlans`;\n  /* jshint ignore:start */\n\n  /**\n   * Streams RatePlanInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Wireless.V1.RatePlanList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n  RatePlanListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists RatePlanInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Wireless.V1.RatePlanList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  RatePlanListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of RatePlanInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Wireless.V1.RatePlanList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  RatePlanListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new RatePlanPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of RatePlanInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Wireless.V1.RatePlanList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  RatePlanListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new RatePlanPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * create a RatePlanInstance\n   *\n   * @function create\n   * @memberof Twilio.Wireless.V1.RatePlanList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.uniqueName] -\n   *          An application-defined string that uniquely identifies the resource\n   * @param {string} [opts.friendlyName] - A string to describe the resource\n   * @param {boolean} [opts.dataEnabled] -\n   *          Whether SIMs can use GPRS/3G/4G/LTE data connectivity\n   * @param {number} [opts.dataLimit] -\n   *          The total data usage in Megabytes that the Network allows during one month on the home network\n   * @param {string} [opts.dataMetering] - The model used to meter data usage\n   * @param {boolean} [opts.messagingEnabled] -\n   *          Whether SIMs can make, send, and receive SMS using Commands\n   * @param {boolean} [opts.voiceEnabled] -\n   *          Whether SIMs can make and receive voice calls\n   * @param {boolean} [opts.nationalRoamingEnabled] -\n   *          Whether SIMs can roam on networks other than the home network in the United States\n   * @param {string|list} [opts.internationalRoaming] -\n   *          The services that SIMs capable of using GPRS/3G/4G/LTE data connectivity can use outside of the United States\n   * @param {number} [opts.nationalRoamingDataLimit] -\n   *          The total data usage in Megabytes that the Network allows during one month on non-home networks in the United States\n   * @param {number} [opts.internationalRoamingDataLimit] -\n   *          The total data usage (download and upload combined) in Megabytes that the Network allows during one month when roaming outside the United States\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed RatePlanInstance\n   */\n\n  /* jshint ignore:end */\n\n\n  RatePlanListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'DataEnabled': serialize.bool(_.get(opts, 'dataEnabled')),\n      'DataLimit': _.get(opts, 'dataLimit'),\n      'DataMetering': _.get(opts, 'dataMetering'),\n      'MessagingEnabled': serialize.bool(_.get(opts, 'messagingEnabled')),\n      'VoiceEnabled': serialize.bool(_.get(opts, 'voiceEnabled')),\n      'NationalRoamingEnabled': serialize.bool(_.get(opts, 'nationalRoamingEnabled')),\n      'InternationalRoaming': serialize.map(_.get(opts, 'internationalRoaming'), function (e) {\n        return e;\n      }),\n      'NationalRoamingDataLimit': _.get(opts, 'nationalRoamingDataLimit'),\n      'InternationalRoamingDataLimit': _.get(opts, 'internationalRoamingDataLimit')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new RatePlanInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a rate_plan\n   *\n   * @function get\n   * @memberof Twilio.Wireless.V1.RatePlanList#\n   *\n   * @param {string} sid - The SID that identifies the resource to fetch\n   *\n   * @returns {Twilio.Wireless.V1.RatePlanContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  RatePlanListInstance.get = function get(sid) {\n    return new RatePlanContext(this._version, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Wireless.V1.RatePlanList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  RatePlanListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  RatePlanListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return RatePlanListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the RatePlanPage\n *\n * @constructor Twilio.Wireless.V1.RatePlanPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {RatePlanSolution} solution - Path solution\n *\n * @returns RatePlanPage\n */\n\n/* jshint ignore:end */\n\n\nRatePlanPage = function RatePlanPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(RatePlanPage.prototype, Page.prototype);\n\nRatePlanPage.prototype.constructor = RatePlanPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of RatePlanInstance\n *\n * @function getInstance\n * @memberof Twilio.Wireless.V1.RatePlanPage#\n *\n * @param {RatePlanPayload} payload - Payload response from the API\n *\n * @returns RatePlanInstance\n */\n\n/* jshint ignore:end */\n\nRatePlanPage.prototype.getInstance = function getInstance(payload) {\n  return new RatePlanInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.RatePlanPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nRatePlanPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nRatePlanPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the RatePlanContext\n *\n * @constructor Twilio.Wireless.V1.RatePlanInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} uniqueName -\n *          An application-defined string that uniquely identifies the resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {boolean} dataEnabled -\n *          Whether SIMs can use GPRS/3G/4G/LTE data connectivity\n * @property {string} dataMetering - The model used to meter data usage\n * @property {number} dataLimit -\n *          The total data usage in Megabytes that the Network allows during one month on the home network\n * @property {boolean} messagingEnabled -\n *          Whether SIMs can make, send, and receive SMS using Commands\n * @property {boolean} voiceEnabled - Whether SIMs can make and receive voice calls\n * @property {boolean} nationalRoamingEnabled -\n *          Whether SIMs can roam on networks other than the home network in the United States\n * @property {number} nationalRoamingDataLimit -\n *          The total data usage in Megabytes that the Network allows during one month on non-home networks in the United States\n * @property {string} internationalRoaming -\n *          The services that SIMs capable of using GPRS/3G/4G/LTE data connectivity can use outside of the United States\n * @property {number} internationalRoamingDataLimit -\n *          The total data usage (download and upload combined) in Megabytes that the Network allows during one month when roaming outside the United States\n * @property {Date} dateCreated -\n *          The date when the resource was created, given as GMT in ISO 8601 format\n * @property {Date} dateUpdated -\n *          The date when the resource was last updated, given as GMT in ISO 8601 format\n * @property {string} url - The absolute URL of the resource\n *\n * @param {V1} version - Version of the resource\n * @param {RatePlanPayload} payload - The instance payload\n * @param {sid_like} sid - The SID that identifies the resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nRatePlanInstance = function RatePlanInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.dataEnabled = payload.data_enabled; // jshint ignore:line\n\n  this.dataMetering = payload.data_metering; // jshint ignore:line\n\n  this.dataLimit = deserialize.integer(payload.data_limit); // jshint ignore:line\n\n  this.messagingEnabled = payload.messaging_enabled; // jshint ignore:line\n\n  this.voiceEnabled = payload.voice_enabled; // jshint ignore:line\n\n  this.nationalRoamingEnabled = payload.national_roaming_enabled; // jshint ignore:line\n\n  this.nationalRoamingDataLimit = deserialize.integer(payload.national_roaming_data_limit); // jshint ignore:line\n\n  this.internationalRoaming = payload.international_roaming; // jshint ignore:line\n\n  this.internationalRoamingDataLimit = deserialize.integer(payload.international_roaming_data_limit); // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(RatePlanInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new RatePlanContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a RatePlanInstance\n *\n * @function fetch\n * @memberof Twilio.Wireless.V1.RatePlanInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n\n/* jshint ignore:end */\n\nRatePlanInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a RatePlanInstance\n *\n * @function update\n * @memberof Twilio.Wireless.V1.RatePlanInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uniqueName] -\n *          An application-defined string that uniquely identifies the resource\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n\n/* jshint ignore:end */\n\n\nRatePlanInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a RatePlanInstance\n *\n * @function remove\n * @memberof Twilio.Wireless.V1.RatePlanInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n\n/* jshint ignore:end */\n\n\nRatePlanInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.RatePlanInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nRatePlanInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nRatePlanInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the RatePlanContext\n *\n * @constructor Twilio.Wireless.V1.RatePlanContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid_like} sid - The SID that identifies the resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nRatePlanContext = function RatePlanContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/RatePlans/${sid}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a RatePlanInstance\n *\n * @function fetch\n * @memberof Twilio.Wireless.V1.RatePlanContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n\n/* jshint ignore:end */\n\n\nRatePlanContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new RatePlanInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a RatePlanInstance\n *\n * @function update\n * @memberof Twilio.Wireless.V1.RatePlanContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uniqueName] -\n *          An application-defined string that uniquely identifies the resource\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n\n/* jshint ignore:end */\n\n\nRatePlanContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'UniqueName': _.get(opts, 'uniqueName'),\n    'FriendlyName': _.get(opts, 'friendlyName')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new RatePlanInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a RatePlanInstance\n *\n * @function remove\n * @memberof Twilio.Wireless.V1.RatePlanContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n\n/* jshint ignore:end */\n\n\nRatePlanContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.RatePlanContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nRatePlanContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nRatePlanContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  RatePlanList: RatePlanList,\n  RatePlanPage: RatePlanPage,\n  RatePlanInstance: RatePlanInstance,\n  RatePlanContext: RatePlanContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/rest/wireless/v1/ratePlan.js"],"names":["Q","require","_","util","Page","deserialize","serialize","values","RatePlanList","RatePlanPage","RatePlanInstance","RatePlanContext","version","RatePlanListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","create","bool","map","e","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","uniqueName","unique_name","accountSid","account_sid","friendlyName","friendly_name","dataEnabled","data_enabled","dataMetering","data_metering","dataLimit","integer","data_limit","messagingEnabled","messaging_enabled","voiceEnabled","voice_enabled","nationalRoamingEnabled","national_roaming_enabled","nationalRoamingDataLimit","national_roaming_data_limit","internationalRoaming","international_roaming","internationalRoamingDataLimit","international_roaming_data_limit","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","_context","undefined","Object","defineProperty","fetch","_proxy","update","remove","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar RatePlanList;\nvar RatePlanPage;\nvar RatePlanInstance;\nvar RatePlanContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the RatePlanList\n *\n * @constructor Twilio.Wireless.V1.RatePlanList\n *\n * @param {Twilio.Wireless.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nRatePlanList = function RatePlanList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function ratePlans\n   * @memberof Twilio.Wireless.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Wireless.V1.RatePlanContext}\n   */\n  /* jshint ignore:end */\n  function RatePlanListInstance(sid) {\n    return RatePlanListInstance.get(sid);\n  }\n\n  RatePlanListInstance._version = version;\n  // Path Solution\n  RatePlanListInstance._solution = {};\n  RatePlanListInstance._uri = `/RatePlans`;\n  /* jshint ignore:start */\n  /**\n   * Streams RatePlanInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Wireless.V1.RatePlanList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists RatePlanInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Wireless.V1.RatePlanList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of RatePlanInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Wireless.V1.RatePlanList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new RatePlanPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of RatePlanInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Wireless.V1.RatePlanList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new RatePlanPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a RatePlanInstance\n   *\n   * @function create\n   * @memberof Twilio.Wireless.V1.RatePlanList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.uniqueName] -\n   *          An application-defined string that uniquely identifies the resource\n   * @param {string} [opts.friendlyName] - A string to describe the resource\n   * @param {boolean} [opts.dataEnabled] -\n   *          Whether SIMs can use GPRS/3G/4G/LTE data connectivity\n   * @param {number} [opts.dataLimit] -\n   *          The total data usage in Megabytes that the Network allows during one month on the home network\n   * @param {string} [opts.dataMetering] - The model used to meter data usage\n   * @param {boolean} [opts.messagingEnabled] -\n   *          Whether SIMs can make, send, and receive SMS using Commands\n   * @param {boolean} [opts.voiceEnabled] -\n   *          Whether SIMs can make and receive voice calls\n   * @param {boolean} [opts.nationalRoamingEnabled] -\n   *          Whether SIMs can roam on networks other than the home network in the United States\n   * @param {string|list} [opts.internationalRoaming] -\n   *          The services that SIMs capable of using GPRS/3G/4G/LTE data connectivity can use outside of the United States\n   * @param {number} [opts.nationalRoamingDataLimit] -\n   *          The total data usage in Megabytes that the Network allows during one month on non-home networks in the United States\n   * @param {number} [opts.internationalRoamingDataLimit] -\n   *          The total data usage (download and upload combined) in Megabytes that the Network allows during one month when roaming outside the United States\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed RatePlanInstance\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'DataEnabled': serialize.bool(_.get(opts, 'dataEnabled')),\n      'DataLimit': _.get(opts, 'dataLimit'),\n      'DataMetering': _.get(opts, 'dataMetering'),\n      'MessagingEnabled': serialize.bool(_.get(opts, 'messagingEnabled')),\n      'VoiceEnabled': serialize.bool(_.get(opts, 'voiceEnabled')),\n      'NationalRoamingEnabled': serialize.bool(_.get(opts, 'nationalRoamingEnabled')),\n      'InternationalRoaming': serialize.map(_.get(opts, 'internationalRoaming'), function(e) { return e; }),\n      'NationalRoamingDataLimit': _.get(opts, 'nationalRoamingDataLimit'),\n      'InternationalRoamingDataLimit': _.get(opts, 'internationalRoamingDataLimit')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new RatePlanInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a rate_plan\n   *\n   * @function get\n   * @memberof Twilio.Wireless.V1.RatePlanList#\n   *\n   * @param {string} sid - The SID that identifies the resource to fetch\n   *\n   * @returns {Twilio.Wireless.V1.RatePlanContext}\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.get = function get(sid) {\n    return new RatePlanContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Wireless.V1.RatePlanList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  RatePlanListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return RatePlanListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the RatePlanPage\n *\n * @constructor Twilio.Wireless.V1.RatePlanPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {RatePlanSolution} solution - Path solution\n *\n * @returns RatePlanPage\n */\n/* jshint ignore:end */\nRatePlanPage = function RatePlanPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(RatePlanPage.prototype, Page.prototype);\nRatePlanPage.prototype.constructor = RatePlanPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of RatePlanInstance\n *\n * @function getInstance\n * @memberof Twilio.Wireless.V1.RatePlanPage#\n *\n * @param {RatePlanPayload} payload - Payload response from the API\n *\n * @returns RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanPage.prototype.getInstance = function getInstance(payload) {\n  return new RatePlanInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.RatePlanPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRatePlanPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nRatePlanPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the RatePlanContext\n *\n * @constructor Twilio.Wireless.V1.RatePlanInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} uniqueName -\n *          An application-defined string that uniquely identifies the resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {boolean} dataEnabled -\n *          Whether SIMs can use GPRS/3G/4G/LTE data connectivity\n * @property {string} dataMetering - The model used to meter data usage\n * @property {number} dataLimit -\n *          The total data usage in Megabytes that the Network allows during one month on the home network\n * @property {boolean} messagingEnabled -\n *          Whether SIMs can make, send, and receive SMS using Commands\n * @property {boolean} voiceEnabled - Whether SIMs can make and receive voice calls\n * @property {boolean} nationalRoamingEnabled -\n *          Whether SIMs can roam on networks other than the home network in the United States\n * @property {number} nationalRoamingDataLimit -\n *          The total data usage in Megabytes that the Network allows during one month on non-home networks in the United States\n * @property {string} internationalRoaming -\n *          The services that SIMs capable of using GPRS/3G/4G/LTE data connectivity can use outside of the United States\n * @property {number} internationalRoamingDataLimit -\n *          The total data usage (download and upload combined) in Megabytes that the Network allows during one month when roaming outside the United States\n * @property {Date} dateCreated -\n *          The date when the resource was created, given as GMT in ISO 8601 format\n * @property {Date} dateUpdated -\n *          The date when the resource was last updated, given as GMT in ISO 8601 format\n * @property {string} url - The absolute URL of the resource\n *\n * @param {V1} version - Version of the resource\n * @param {RatePlanPayload} payload - The instance payload\n * @param {sid_like} sid - The SID that identifies the resource to fetch\n */\n/* jshint ignore:end */\nRatePlanInstance = function RatePlanInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.dataEnabled = payload.data_enabled; // jshint ignore:line\n  this.dataMetering = payload.data_metering; // jshint ignore:line\n  this.dataLimit = deserialize.integer(payload.data_limit); // jshint ignore:line\n  this.messagingEnabled = payload.messaging_enabled; // jshint ignore:line\n  this.voiceEnabled = payload.voice_enabled; // jshint ignore:line\n  this.nationalRoamingEnabled = payload.national_roaming_enabled; // jshint ignore:line\n  this.nationalRoamingDataLimit = deserialize.integer(payload.national_roaming_data_limit); // jshint ignore:line\n  this.internationalRoaming = payload.international_roaming; // jshint ignore:line\n  this.internationalRoamingDataLimit = deserialize.integer(payload.international_roaming_data_limit); // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(RatePlanInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new RatePlanContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a RatePlanInstance\n *\n * @function fetch\n * @memberof Twilio.Wireless.V1.RatePlanInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a RatePlanInstance\n *\n * @function update\n * @memberof Twilio.Wireless.V1.RatePlanInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uniqueName] -\n *          An application-defined string that uniquely identifies the resource\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a RatePlanInstance\n *\n * @function remove\n * @memberof Twilio.Wireless.V1.RatePlanInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.RatePlanInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRatePlanInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nRatePlanInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the RatePlanContext\n *\n * @constructor Twilio.Wireless.V1.RatePlanContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid_like} sid - The SID that identifies the resource to fetch\n */\n/* jshint ignore:end */\nRatePlanContext = function RatePlanContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/RatePlans/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a RatePlanInstance\n *\n * @function fetch\n * @memberof Twilio.Wireless.V1.RatePlanContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new RatePlanInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a RatePlanInstance\n *\n * @function update\n * @memberof Twilio.Wireless.V1.RatePlanContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uniqueName] -\n *          An application-defined string that uniquely identifies the resource\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'UniqueName': _.get(opts, 'uniqueName'),\n    'FriendlyName': _.get(opts, 'friendlyName')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new RatePlanInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a RatePlanInstance\n *\n * @function remove\n * @memberof Twilio.Wireless.V1.RatePlanContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.RatePlanContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRatePlanContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nRatePlanContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  RatePlanList: RatePlanList,\n  RatePlanPage: RatePlanPage,\n  RatePlanInstance: RatePlanInstance,\n  RatePlanContext: RatePlanContext\n};\n"]},"metadata":{},"sourceType":"module"}