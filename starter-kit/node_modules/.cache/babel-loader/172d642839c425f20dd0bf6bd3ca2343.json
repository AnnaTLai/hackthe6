{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar WorkflowRealTimeStatisticsList;\nvar WorkflowRealTimeStatisticsPage;\nvar WorkflowRealTimeStatisticsInstance;\nvar WorkflowRealTimeStatisticsContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkflowRealTimeStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid -\n *          The SID of the Workspace that contains the Workflow.\n * @param {string} workflowSid -\n *          Returns the list of Tasks that are being controlled by the Workflow with the specified SID value\n */\n\n/* jshint ignore:end */\n\nWorkflowRealTimeStatisticsList = function WorkflowRealTimeStatisticsList(version, workspaceSid, workflowSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function realTimeStatistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsContext}\n   */\n\n  /* jshint ignore:end */\n  function WorkflowRealTimeStatisticsListInstance(sid) {\n    return WorkflowRealTimeStatisticsListInstance.get(sid);\n  }\n\n  WorkflowRealTimeStatisticsListInstance._version = version; // Path Solution\n\n  WorkflowRealTimeStatisticsListInstance._solution = {\n    workspaceSid: workspaceSid,\n    workflowSid: workflowSid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a workflow_real_time_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsContext}\n   */\n\n  /* jshint ignore:end */\n\n  WorkflowRealTimeStatisticsListInstance.get = function get() {\n    return new WorkflowRealTimeStatisticsContext(this._version, this._solution.workspaceSid, this._solution.workflowSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  WorkflowRealTimeStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WorkflowRealTimeStatisticsListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WorkflowRealTimeStatisticsListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkflowRealTimeStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkflowRealTimeStatisticsSolution} solution - Path solution\n *\n * @returns WorkflowRealTimeStatisticsPage\n */\n\n/* jshint ignore:end */\n\n\nWorkflowRealTimeStatisticsPage = function WorkflowRealTimeStatisticsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WorkflowRealTimeStatisticsPage.prototype, Page.prototype);\n\nWorkflowRealTimeStatisticsPage.prototype.constructor = WorkflowRealTimeStatisticsPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of WorkflowRealTimeStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsPage#\n *\n * @param {WorkflowRealTimeStatisticsPayload} payload -\n *          Payload response from the API\n *\n * @returns WorkflowRealTimeStatisticsInstance\n */\n\n/* jshint ignore:end */\n\nWorkflowRealTimeStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new WorkflowRealTimeStatisticsInstance(this._version, payload, this._solution.workspaceSid, this._solution.workflowSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkflowRealTimeStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nWorkflowRealTimeStatisticsPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkflowRealTimeStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {number} longestTaskWaitingAge - The age of the longest waiting Task\n * @property {string} longestTaskWaitingSid - The SID of the longest waiting Task\n * @property {object} tasksByPriority - The number of Tasks by priority\n * @property {object} tasksByStatus - The number of Tasks by their current status\n * @property {number} totalTasks - The total number of Tasks\n * @property {string} workflowSid -\n *          Returns the list of Tasks that are being controlled by the Workflow with the specified SID value\n * @property {string} workspaceSid -\n *          The SID of the Workspace that contains the Workflow.\n * @property {string} url - The absolute URL of the Workflow statistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {WorkflowRealTimeStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The SID of the Workspace that contains the Workflow.\n * @param {sid} workflowSid -\n *          Returns the list of Tasks that are being controlled by the Workflow with the specified SID value\n */\n\n/* jshint ignore:end */\n\n\nWorkflowRealTimeStatisticsInstance = function WorkflowRealTimeStatisticsInstance(version, payload, workspaceSid, workflowSid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.longestTaskWaitingAge = deserialize.integer(payload.longest_task_waiting_age); // jshint ignore:line\n\n  this.longestTaskWaitingSid = payload.longest_task_waiting_sid; // jshint ignore:line\n\n  this.tasksByPriority = payload.tasks_by_priority; // jshint ignore:line\n\n  this.tasksByStatus = payload.tasks_by_status; // jshint ignore:line\n\n  this.totalTasks = deserialize.integer(payload.total_tasks); // jshint ignore:line\n\n  this.workflowSid = payload.workflow_sid; // jshint ignore:line\n\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    workspaceSid: workspaceSid,\n    workflowSid: workflowSid\n  };\n};\n\nObject.defineProperty(WorkflowRealTimeStatisticsInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new WorkflowRealTimeStatisticsContext(this._version, this._solution.workspaceSid, this._solution.workflowSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a WorkflowRealTimeStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.taskChannel] -\n *          Only calculate real-time statistics on this TaskChannel\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowRealTimeStatisticsInstance\n */\n\n/* jshint ignore:end */\n\nWorkflowRealTimeStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkflowRealTimeStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nWorkflowRealTimeStatisticsInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkflowRealTimeStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The SID of the Workspace with the Workflow to fetch\n * @param {sid} workflowSid -\n *          Returns the list of Tasks that are being controlled by the Workflow with the specified SID value\n */\n\n/* jshint ignore:end */\n\n\nWorkflowRealTimeStatisticsContext = function WorkflowRealTimeStatisticsContext(version, workspaceSid, workflowSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    workspaceSid: workspaceSid,\n    workflowSid: workflowSid\n  };\n  this._uri = `/Workspaces/${workspaceSid}/Workflows/${workflowSid}/RealTimeStatistics`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a WorkflowRealTimeStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.taskChannel] -\n *          Only calculate real-time statistics on this TaskChannel\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowRealTimeStatisticsInstance\n */\n\n/* jshint ignore:end */\n\n\nWorkflowRealTimeStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'TaskChannel': _.get(opts, 'taskChannel')\n  });\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new WorkflowRealTimeStatisticsInstance(this._version, payload, this._solution.workspaceSid, this._solution.workflowSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkflowRealTimeStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWorkflowRealTimeStatisticsContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WorkflowRealTimeStatisticsList: WorkflowRealTimeStatisticsList,\n  WorkflowRealTimeStatisticsPage: WorkflowRealTimeStatisticsPage,\n  WorkflowRealTimeStatisticsInstance: WorkflowRealTimeStatisticsInstance,\n  WorkflowRealTimeStatisticsContext: WorkflowRealTimeStatisticsContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/rest/taskrouter/v1/workspace/workflow/workflowRealTimeStatistics.js"],"names":["Q","require","_","util","Page","deserialize","values","WorkflowRealTimeStatisticsList","WorkflowRealTimeStatisticsPage","WorkflowRealTimeStatisticsInstance","WorkflowRealTimeStatisticsContext","version","workspaceSid","workflowSid","WorkflowRealTimeStatisticsListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","longestTaskWaitingAge","integer","longest_task_waiting_age","longestTaskWaitingSid","longest_task_waiting_sid","tasksByPriority","tasks_by_priority","tasksByStatus","tasks_by_status","totalTasks","total_tasks","workflow_sid","workspace_sid","url","_context","undefined","Object","defineProperty","fetch","opts","callback","_proxy","_uri","deferred","defer","data","of","promise","uri","method","params","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar WorkflowRealTimeStatisticsList;\nvar WorkflowRealTimeStatisticsPage;\nvar WorkflowRealTimeStatisticsInstance;\nvar WorkflowRealTimeStatisticsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkflowRealTimeStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid -\n *          The SID of the Workspace that contains the Workflow.\n * @param {string} workflowSid -\n *          Returns the list of Tasks that are being controlled by the Workflow with the specified SID value\n */\n/* jshint ignore:end */\nWorkflowRealTimeStatisticsList = function\n    WorkflowRealTimeStatisticsList(version, workspaceSid, workflowSid) {\n  /* jshint ignore:start */\n  /**\n   * @function realTimeStatistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsContext}\n   */\n  /* jshint ignore:end */\n  function WorkflowRealTimeStatisticsListInstance(sid) {\n    return WorkflowRealTimeStatisticsListInstance.get(sid);\n  }\n\n  WorkflowRealTimeStatisticsListInstance._version = version;\n  // Path Solution\n  WorkflowRealTimeStatisticsListInstance._solution = {\n    workspaceSid: workspaceSid,\n    workflowSid: workflowSid\n  };\n  /* jshint ignore:start */\n  /**\n   * Constructs a workflow_real_time_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsContext}\n   */\n  /* jshint ignore:end */\n  WorkflowRealTimeStatisticsListInstance.get = function get() {\n    return new WorkflowRealTimeStatisticsContext(\n      this._version,\n      this._solution.workspaceSid,\n      this._solution.workflowSid\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  WorkflowRealTimeStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WorkflowRealTimeStatisticsListInstance[util.inspect.custom] = function\n      inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WorkflowRealTimeStatisticsListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkflowRealTimeStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkflowRealTimeStatisticsSolution} solution - Path solution\n *\n * @returns WorkflowRealTimeStatisticsPage\n */\n/* jshint ignore:end */\nWorkflowRealTimeStatisticsPage = function\n    WorkflowRealTimeStatisticsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WorkflowRealTimeStatisticsPage.prototype, Page.prototype);\nWorkflowRealTimeStatisticsPage.prototype.constructor = WorkflowRealTimeStatisticsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of WorkflowRealTimeStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsPage#\n *\n * @param {WorkflowRealTimeStatisticsPayload} payload -\n *          Payload response from the API\n *\n * @returns WorkflowRealTimeStatisticsInstance\n */\n/* jshint ignore:end */\nWorkflowRealTimeStatisticsPage.prototype.getInstance = function\n    getInstance(payload) {\n  return new WorkflowRealTimeStatisticsInstance(\n    this._version,\n    payload,\n    this._solution.workspaceSid,\n    this._solution.workflowSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkflowRealTimeStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkflowRealTimeStatisticsPage.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkflowRealTimeStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {number} longestTaskWaitingAge - The age of the longest waiting Task\n * @property {string} longestTaskWaitingSid - The SID of the longest waiting Task\n * @property {object} tasksByPriority - The number of Tasks by priority\n * @property {object} tasksByStatus - The number of Tasks by their current status\n * @property {number} totalTasks - The total number of Tasks\n * @property {string} workflowSid -\n *          Returns the list of Tasks that are being controlled by the Workflow with the specified SID value\n * @property {string} workspaceSid -\n *          The SID of the Workspace that contains the Workflow.\n * @property {string} url - The absolute URL of the Workflow statistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {WorkflowRealTimeStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The SID of the Workspace that contains the Workflow.\n * @param {sid} workflowSid -\n *          Returns the list of Tasks that are being controlled by the Workflow with the specified SID value\n */\n/* jshint ignore:end */\nWorkflowRealTimeStatisticsInstance = function\n    WorkflowRealTimeStatisticsInstance(version, payload, workspaceSid,\n    workflowSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.longestTaskWaitingAge = deserialize.integer(payload.longest_task_waiting_age); // jshint ignore:line\n  this.longestTaskWaitingSid = payload.longest_task_waiting_sid; // jshint ignore:line\n  this.tasksByPriority = payload.tasks_by_priority; // jshint ignore:line\n  this.tasksByStatus = payload.tasks_by_status; // jshint ignore:line\n  this.totalTasks = deserialize.integer(payload.total_tasks); // jshint ignore:line\n  this.workflowSid = payload.workflow_sid; // jshint ignore:line\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {workspaceSid: workspaceSid, workflowSid: workflowSid, };\n};\n\nObject.defineProperty(WorkflowRealTimeStatisticsInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new WorkflowRealTimeStatisticsContext(\n          this._version,\n          this._solution.workspaceSid,\n          this._solution.workflowSid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a WorkflowRealTimeStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.taskChannel] -\n *          Only calculate real-time statistics on this TaskChannel\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowRealTimeStatisticsInstance\n */\n/* jshint ignore:end */\nWorkflowRealTimeStatisticsInstance.prototype.fetch = function fetch(opts,\n    callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkflowRealTimeStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkflowRealTimeStatisticsInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkflowRealTimeStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The SID of the Workspace with the Workflow to fetch\n * @param {sid} workflowSid -\n *          Returns the list of Tasks that are being controlled by the Workflow with the specified SID value\n */\n/* jshint ignore:end */\nWorkflowRealTimeStatisticsContext = function\n    WorkflowRealTimeStatisticsContext(version, workspaceSid, workflowSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {workspaceSid: workspaceSid, workflowSid: workflowSid, };\n  this._uri = `/Workspaces/${workspaceSid}/Workflows/${workflowSid}/RealTimeStatistics`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a WorkflowRealTimeStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.taskChannel] -\n *          Only calculate real-time statistics on this TaskChannel\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowRealTimeStatisticsInstance\n */\n/* jshint ignore:end */\nWorkflowRealTimeStatisticsContext.prototype.fetch = function fetch(opts,\n    callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({'TaskChannel': _.get(opts, 'taskChannel')});\n\n  var promise = this._version.fetch({uri: this._uri, method: 'GET', params: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new WorkflowRealTimeStatisticsInstance(\n      this._version,\n      payload,\n      this._solution.workspaceSid,\n      this._solution.workflowSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkflowRealTimeStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWorkflowRealTimeStatisticsContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WorkflowRealTimeStatisticsList: WorkflowRealTimeStatisticsList,\n  WorkflowRealTimeStatisticsPage: WorkflowRealTimeStatisticsPage,\n  WorkflowRealTimeStatisticsInstance: WorkflowRealTimeStatisticsInstance,\n  WorkflowRealTimeStatisticsContext: WorkflowRealTimeStatisticsContext\n};\n"]},"metadata":{},"sourceType":"module"}