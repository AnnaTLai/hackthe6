{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar StyleSheetList;\nvar StyleSheetPage;\nvar StyleSheetInstance;\nvar StyleSheetContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the StyleSheetList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.StyleSheetList\n *\n * @param {Twilio.Preview.Understand} version - Version of the resource\n * @param {string} assistantSid - The unique ID of the Assistant\n */\n\n/* jshint ignore:end */\n\nStyleSheetList = function StyleSheetList(version, assistantSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function styleSheet\n   * @memberof Twilio.Preview.Understand.AssistantContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext.StyleSheetContext}\n   */\n\n  /* jshint ignore:end */\n  function StyleSheetListInstance(sid) {\n    return StyleSheetListInstance.get(sid);\n  }\n\n  StyleSheetListInstance._version = version; // Path Solution\n\n  StyleSheetListInstance._solution = {\n    assistantSid: assistantSid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a style_sheet\n   *\n   * @function get\n   * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetList#\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext.StyleSheetContext}\n   */\n\n  /* jshint ignore:end */\n\n  StyleSheetListInstance.get = function get() {\n    return new StyleSheetContext(this._version, this._solution.assistantSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  StyleSheetListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  StyleSheetListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return StyleSheetListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the StyleSheetPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.StyleSheetPage\n *\n * @param {Understand} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {StyleSheetSolution} solution - Path solution\n *\n * @returns StyleSheetPage\n */\n\n/* jshint ignore:end */\n\n\nStyleSheetPage = function StyleSheetPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(StyleSheetPage.prototype, Page.prototype);\n\nStyleSheetPage.prototype.constructor = StyleSheetPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of StyleSheetInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetPage#\n *\n * @param {StyleSheetPayload} payload - Payload response from the API\n *\n * @returns StyleSheetInstance\n */\n\n/* jshint ignore:end */\n\nStyleSheetPage.prototype.getInstance = function getInstance(payload) {\n  return new StyleSheetInstance(this._version, payload, this._solution.assistantSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nStyleSheetPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nStyleSheetPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the StyleSheetContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.StyleSheetInstance\n *\n * @property {string} accountSid -\n *          The unique ID of the Account that created this Assistant\n * @property {string} assistantSid - The unique ID of the Assistant\n * @property {string} url - The url\n * @property {object} data - The JSON style sheet object\n *\n * @param {Understand} version - Version of the resource\n * @param {StyleSheetPayload} payload - The instance payload\n * @param {sid} assistantSid - The unique ID of the Assistant\n */\n\n/* jshint ignore:end */\n\n\nStyleSheetInstance = function StyleSheetInstance(version, payload, assistantSid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.assistantSid = payload.assistant_sid; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.data = payload.data; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    assistantSid: assistantSid\n  };\n};\n\nObject.defineProperty(StyleSheetInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new StyleSheetContext(this._version, this._solution.assistantSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a StyleSheetInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed StyleSheetInstance\n */\n\n/* jshint ignore:end */\n\nStyleSheetInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a StyleSheetInstance\n *\n * @function update\n * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {object} [opts.styleSheet] - The JSON Style sheet string\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed StyleSheetInstance\n */\n\n/* jshint ignore:end */\n\n\nStyleSheetInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nStyleSheetInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nStyleSheetInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the StyleSheetContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.StyleSheetContext\n *\n * @param {Understand} version - Version of the resource\n * @param {sid_like} assistantSid - The unique ID of the Assistant\n */\n\n/* jshint ignore:end */\n\n\nStyleSheetContext = function StyleSheetContext(version, assistantSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    assistantSid: assistantSid\n  };\n  this._uri = `/Assistants/${assistantSid}/StyleSheet`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a StyleSheetInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed StyleSheetInstance\n */\n\n/* jshint ignore:end */\n\n\nStyleSheetContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new StyleSheetInstance(this._version, payload, this._solution.assistantSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a StyleSheetInstance\n *\n * @function update\n * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetContext#\n *\n * @param {object} [opts] - Options for request\n * @param {object} [opts.styleSheet] - The JSON Style sheet string\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed StyleSheetInstance\n */\n\n/* jshint ignore:end */\n\n\nStyleSheetContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'StyleSheet': serialize.object(_.get(opts, 'styleSheet'))\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new StyleSheetInstance(this._version, payload, this._solution.assistantSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nStyleSheetContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nStyleSheetContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  StyleSheetList: StyleSheetList,\n  StyleSheetPage: StyleSheetPage,\n  StyleSheetInstance: StyleSheetInstance,\n  StyleSheetContext: StyleSheetContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/rest/preview/understand/assistant/styleSheet.js"],"names":["Q","require","_","util","Page","serialize","values","StyleSheetList","StyleSheetPage","StyleSheetInstance","StyleSheetContext","version","assistantSid","StyleSheetListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","assistant_sid","url","data","_context","undefined","Object","defineProperty","fetch","callback","_proxy","update","opts","_uri","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","of","object","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar StyleSheetList;\nvar StyleSheetPage;\nvar StyleSheetInstance;\nvar StyleSheetContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the StyleSheetList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.StyleSheetList\n *\n * @param {Twilio.Preview.Understand} version - Version of the resource\n * @param {string} assistantSid - The unique ID of the Assistant\n */\n/* jshint ignore:end */\nStyleSheetList = function StyleSheetList(version, assistantSid) {\n  /* jshint ignore:start */\n  /**\n   * @function styleSheet\n   * @memberof Twilio.Preview.Understand.AssistantContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext.StyleSheetContext}\n   */\n  /* jshint ignore:end */\n  function StyleSheetListInstance(sid) {\n    return StyleSheetListInstance.get(sid);\n  }\n\n  StyleSheetListInstance._version = version;\n  // Path Solution\n  StyleSheetListInstance._solution = {assistantSid: assistantSid};\n  /* jshint ignore:start */\n  /**\n   * Constructs a style_sheet\n   *\n   * @function get\n   * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetList#\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext.StyleSheetContext}\n   */\n  /* jshint ignore:end */\n  StyleSheetListInstance.get = function get() {\n    return new StyleSheetContext(this._version, this._solution.assistantSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  StyleSheetListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  StyleSheetListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return StyleSheetListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the StyleSheetPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.StyleSheetPage\n *\n * @param {Understand} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {StyleSheetSolution} solution - Path solution\n *\n * @returns StyleSheetPage\n */\n/* jshint ignore:end */\nStyleSheetPage = function StyleSheetPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(StyleSheetPage.prototype, Page.prototype);\nStyleSheetPage.prototype.constructor = StyleSheetPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of StyleSheetInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetPage#\n *\n * @param {StyleSheetPayload} payload - Payload response from the API\n *\n * @returns StyleSheetInstance\n */\n/* jshint ignore:end */\nStyleSheetPage.prototype.getInstance = function getInstance(payload) {\n  return new StyleSheetInstance(this._version, payload, this._solution.assistantSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nStyleSheetPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nStyleSheetPage.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the StyleSheetContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.StyleSheetInstance\n *\n * @property {string} accountSid -\n *          The unique ID of the Account that created this Assistant\n * @property {string} assistantSid - The unique ID of the Assistant\n * @property {string} url - The url\n * @property {object} data - The JSON style sheet object\n *\n * @param {Understand} version - Version of the resource\n * @param {StyleSheetPayload} payload - The instance payload\n * @param {sid} assistantSid - The unique ID of the Assistant\n */\n/* jshint ignore:end */\nStyleSheetInstance = function StyleSheetInstance(version, payload, assistantSid)\n                                                  {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.assistantSid = payload.assistant_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.data = payload.data; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {assistantSid: assistantSid, };\n};\n\nObject.defineProperty(StyleSheetInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new StyleSheetContext(this._version, this._solution.assistantSid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a StyleSheetInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed StyleSheetInstance\n */\n/* jshint ignore:end */\nStyleSheetInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a StyleSheetInstance\n *\n * @function update\n * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {object} [opts.styleSheet] - The JSON Style sheet string\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed StyleSheetInstance\n */\n/* jshint ignore:end */\nStyleSheetInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nStyleSheetInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nStyleSheetInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the StyleSheetContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.StyleSheetContext\n *\n * @param {Understand} version - Version of the resource\n * @param {sid_like} assistantSid - The unique ID of the Assistant\n */\n/* jshint ignore:end */\nStyleSheetContext = function StyleSheetContext(version, assistantSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {assistantSid: assistantSid, };\n  this._uri = `/Assistants/${assistantSid}/StyleSheet`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a StyleSheetInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed StyleSheetInstance\n */\n/* jshint ignore:end */\nStyleSheetContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new StyleSheetInstance(this._version, payload, this._solution.assistantSid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a StyleSheetInstance\n *\n * @function update\n * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetContext#\n *\n * @param {object} [opts] - Options for request\n * @param {object} [opts.styleSheet] - The JSON Style sheet string\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed StyleSheetInstance\n */\n/* jshint ignore:end */\nStyleSheetContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({'StyleSheet': serialize.object(_.get(opts, 'styleSheet'))});\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new StyleSheetInstance(this._version, payload, this._solution.assistantSid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.StyleSheetContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nStyleSheetContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nStyleSheetContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  StyleSheetList: StyleSheetList,\n  StyleSheetPage: StyleSheetPage,\n  StyleSheetInstance: StyleSheetInstance,\n  StyleSheetContext: StyleSheetContext\n};\n"]},"metadata":{},"sourceType":"module"}