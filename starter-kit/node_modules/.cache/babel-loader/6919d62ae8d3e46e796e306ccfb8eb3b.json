{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar TokenList;\nvar TokenPage;\nvar TokenInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the TokenList\n *\n * @constructor Twilio.Api.V2010.AccountContext.TokenList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n */\n\n/* jshint ignore:end */\n\nTokenList = function TokenList(version, accountSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function tokens\n   * @memberof Twilio.Api.V2010.AccountContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.TokenContext}\n   */\n\n  /* jshint ignore:end */\n  function TokenListInstance(sid) {\n    return TokenListInstance.get(sid);\n  }\n\n  TokenListInstance._version = version; // Path Solution\n\n  TokenListInstance._solution = {\n    accountSid: accountSid\n  };\n  TokenListInstance._uri = `/Accounts/${accountSid}/Tokens.json`;\n  /* jshint ignore:start */\n\n  /**\n   * create a TokenInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.TokenList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.ttl] - The duration in seconds the credentials are valid\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed TokenInstance\n   */\n\n  /* jshint ignore:end */\n\n  TokenListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Ttl': _.get(opts, 'ttl')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new TokenInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.TokenList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  TokenListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TokenListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TokenListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TokenPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.TokenPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TokenSolution} solution - Path solution\n *\n * @returns TokenPage\n */\n\n/* jshint ignore:end */\n\n\nTokenPage = function TokenPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TokenPage.prototype, Page.prototype);\n\nTokenPage.prototype.constructor = TokenPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of TokenInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.TokenPage#\n *\n * @param {TokenPayload} payload - Payload response from the API\n *\n * @returns TokenInstance\n */\n\n/* jshint ignore:end */\n\nTokenPage.prototype.getInstance = function getInstance(payload) {\n  return new TokenInstance(this._version, payload, this._solution.accountSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.TokenPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTokenPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nTokenPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TokenContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.TokenInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} iceServers - An array representing the ephemeral credentials\n * @property {string} password - The temporary password used for authenticating\n * @property {string} ttl - The duration in seconds the credentials are valid\n * @property {string} username -\n *          The temporary username that uniquely identifies a Token\n *\n * @param {V2010} version - Version of the resource\n * @param {TokenPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created the resource\n */\n\n/* jshint ignore:end */\n\n\nTokenInstance = function TokenInstance(version, payload, accountSid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n\n  this.iceServers = payload.ice_servers; // jshint ignore:line\n\n  this.password = payload.password; // jshint ignore:line\n\n  this.ttl = payload.ttl; // jshint ignore:line\n\n  this.username = payload.username; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    accountSid: accountSid\n  };\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.TokenInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTokenInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nTokenInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TokenList: TokenList,\n  TokenPage: TokenPage,\n  TokenInstance: TokenInstance\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/api/v2010/account/token.js"],"names":["Q","require","_","util","Page","deserialize","values","TokenList","TokenPage","TokenInstance","version","accountSid","TokenListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isFunction","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","account_sid","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","iceServers","ice_servers","password","ttl","username","_context","undefined","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar TokenList;\nvar TokenPage;\nvar TokenInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the TokenList\n *\n * @constructor Twilio.Api.V2010.AccountContext.TokenList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n */\n/* jshint ignore:end */\nTokenList = function TokenList(version, accountSid) {\n  /* jshint ignore:start */\n  /**\n   * @function tokens\n   * @memberof Twilio.Api.V2010.AccountContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.TokenContext}\n   */\n  /* jshint ignore:end */\n  function TokenListInstance(sid) {\n    return TokenListInstance.get(sid);\n  }\n\n  TokenListInstance._version = version;\n  // Path Solution\n  TokenListInstance._solution = {accountSid: accountSid};\n  TokenListInstance._uri = `/Accounts/${accountSid}/Tokens.json`;\n  /* jshint ignore:start */\n  /**\n   * create a TokenInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.TokenList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.ttl] - The duration in seconds the credentials are valid\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed TokenInstance\n   */\n  /* jshint ignore:end */\n  TokenListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({'Ttl': _.get(opts, 'ttl')});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new TokenInstance(this._version, payload));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.TokenList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  TokenListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TokenListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TokenListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TokenPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.TokenPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TokenSolution} solution - Path solution\n *\n * @returns TokenPage\n */\n/* jshint ignore:end */\nTokenPage = function TokenPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TokenPage.prototype, Page.prototype);\nTokenPage.prototype.constructor = TokenPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of TokenInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.TokenPage#\n *\n * @param {TokenPayload} payload - Payload response from the API\n *\n * @returns TokenInstance\n */\n/* jshint ignore:end */\nTokenPage.prototype.getInstance = function getInstance(payload) {\n  return new TokenInstance(this._version, payload, this._solution.accountSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.TokenPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTokenPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTokenPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TokenContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.TokenInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} iceServers - An array representing the ephemeral credentials\n * @property {string} password - The temporary password used for authenticating\n * @property {string} ttl - The duration in seconds the credentials are valid\n * @property {string} username -\n *          The temporary username that uniquely identifies a Token\n *\n * @param {V2010} version - Version of the resource\n * @param {TokenPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created the resource\n */\n/* jshint ignore:end */\nTokenInstance = function TokenInstance(version, payload, accountSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.iceServers = payload.ice_servers; // jshint ignore:line\n  this.password = payload.password; // jshint ignore:line\n  this.ttl = payload.ttl; // jshint ignore:line\n  this.username = payload.username; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {accountSid: accountSid, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.TokenInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTokenInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTokenInstance.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TokenList: TokenList,\n  TokenPage: TokenPage,\n  TokenInstance: TokenInstance\n};\n"]},"metadata":{},"sourceType":"script"}