{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar RecordingList;\nvar RecordingPage;\nvar RecordingInstance;\nvar RecordingContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the RecordingList\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.RecordingList\n *\n * @param {Twilio.Trunking.V1} version - Version of the resource\n * @param {string} trunkSid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\nRecordingList = function RecordingList(version, trunkSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function recordings\n   * @memberof Twilio.Trunking.V1.TrunkContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.RecordingContext}\n   */\n\n  /* jshint ignore:end */\n  function RecordingListInstance(sid) {\n    return RecordingListInstance.get(sid);\n  }\n\n  RecordingListInstance._version = version; // Path Solution\n\n  RecordingListInstance._solution = {\n    trunkSid: trunkSid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a recording\n   *\n   * @function get\n   * @memberof Twilio.Trunking.V1.TrunkContext.RecordingList#\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.RecordingContext}\n   */\n\n  /* jshint ignore:end */\n\n  RecordingListInstance.get = function get() {\n    return new RecordingContext(this._version, this._solution.trunkSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trunking.V1.TrunkContext.RecordingList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  RecordingListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  RecordingListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return RecordingListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the RecordingPage\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.RecordingPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {RecordingSolution} solution - Path solution\n *\n * @returns RecordingPage\n */\n\n/* jshint ignore:end */\n\n\nRecordingPage = function RecordingPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(RecordingPage.prototype, Page.prototype);\n\nRecordingPage.prototype.constructor = RecordingPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of RecordingInstance\n *\n * @function getInstance\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingPage#\n *\n * @param {RecordingPayload} payload - Payload response from the API\n *\n * @returns RecordingInstance\n */\n\n/* jshint ignore:end */\n\nRecordingPage.prototype.getInstance = function getInstance(payload) {\n  return new RecordingInstance(this._version, payload, this._solution.trunkSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nRecordingPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nRecordingPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the RecordingContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.RecordingInstance\n *\n * @property {recording.recording_mode} mode - The recording mode for the trunk.\n * @property {recording.recording_trim} trim -\n *          The recording trim setting for the trunk.\n *\n * @param {V1} version - Version of the resource\n * @param {RecordingPayload} payload - The instance payload\n * @param {sid} trunkSid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nRecordingInstance = function RecordingInstance(version, payload, trunkSid) {\n  this._version = version; // Marshaled Properties\n\n  this.mode = payload.mode; // jshint ignore:line\n\n  this.trim = payload.trim; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    trunkSid: trunkSid\n  };\n};\n\nObject.defineProperty(RecordingInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new RecordingContext(this._version, this._solution.trunkSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a RecordingInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingInstance\n */\n\n/* jshint ignore:end */\n\nRecordingInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a RecordingInstance\n *\n * @function update\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {recording.recording_mode} [opts.mode] -\n *          The recording mode for the trunk.\n * @param {recording.recording_trim} [opts.trim] -\n *          The recording trim setting for the trunk.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingInstance\n */\n\n/* jshint ignore:end */\n\n\nRecordingInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nRecordingInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nRecordingInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the RecordingContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.RecordingContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} trunkSid -\n *          The SID of the Trunk from which to fetch the recording settings.\n */\n\n/* jshint ignore:end */\n\n\nRecordingContext = function RecordingContext(version, trunkSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    trunkSid: trunkSid\n  };\n  this._uri = `/Trunks/${trunkSid}/Recording`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a RecordingInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingInstance\n */\n\n/* jshint ignore:end */\n\n\nRecordingContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new RecordingInstance(this._version, payload, this._solution.trunkSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a RecordingInstance\n *\n * @function update\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingContext#\n *\n * @param {object} [opts] - Options for request\n * @param {recording.recording_mode} [opts.mode] -\n *          The recording mode for the trunk.\n * @param {recording.recording_trim} [opts.trim] -\n *          The recording trim setting for the trunk.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingInstance\n */\n\n/* jshint ignore:end */\n\n\nRecordingContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Mode': _.get(opts, 'mode'),\n    'Trim': _.get(opts, 'trim')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new RecordingInstance(this._version, payload, this._solution.trunkSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nRecordingContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nRecordingContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  RecordingList: RecordingList,\n  RecordingPage: RecordingPage,\n  RecordingInstance: RecordingInstance,\n  RecordingContext: RecordingContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/rest/trunking/v1/trunk/recording.js"],"names":["Q","require","_","util","Page","values","RecordingList","RecordingPage","RecordingInstance","RecordingContext","version","trunkSid","RecordingListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","mode","trim","_context","undefined","Object","defineProperty","fetch","callback","_proxy","update","opts","_uri","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","data","of","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar RecordingList;\nvar RecordingPage;\nvar RecordingInstance;\nvar RecordingContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the RecordingList\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.RecordingList\n *\n * @param {Twilio.Trunking.V1} version - Version of the resource\n * @param {string} trunkSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nRecordingList = function RecordingList(version, trunkSid) {\n  /* jshint ignore:start */\n  /**\n   * @function recordings\n   * @memberof Twilio.Trunking.V1.TrunkContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.RecordingContext}\n   */\n  /* jshint ignore:end */\n  function RecordingListInstance(sid) {\n    return RecordingListInstance.get(sid);\n  }\n\n  RecordingListInstance._version = version;\n  // Path Solution\n  RecordingListInstance._solution = {trunkSid: trunkSid};\n  /* jshint ignore:start */\n  /**\n   * Constructs a recording\n   *\n   * @function get\n   * @memberof Twilio.Trunking.V1.TrunkContext.RecordingList#\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.RecordingContext}\n   */\n  /* jshint ignore:end */\n  RecordingListInstance.get = function get() {\n    return new RecordingContext(this._version, this._solution.trunkSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trunking.V1.TrunkContext.RecordingList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  RecordingListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  RecordingListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return RecordingListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the RecordingPage\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.RecordingPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {RecordingSolution} solution - Path solution\n *\n * @returns RecordingPage\n */\n/* jshint ignore:end */\nRecordingPage = function RecordingPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(RecordingPage.prototype, Page.prototype);\nRecordingPage.prototype.constructor = RecordingPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of RecordingInstance\n *\n * @function getInstance\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingPage#\n *\n * @param {RecordingPayload} payload - Payload response from the API\n *\n * @returns RecordingInstance\n */\n/* jshint ignore:end */\nRecordingPage.prototype.getInstance = function getInstance(payload) {\n  return new RecordingInstance(this._version, payload, this._solution.trunkSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRecordingPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nRecordingPage.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the RecordingContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.RecordingInstance\n *\n * @property {recording.recording_mode} mode - The recording mode for the trunk.\n * @property {recording.recording_trim} trim -\n *          The recording trim setting for the trunk.\n *\n * @param {V1} version - Version of the resource\n * @param {RecordingPayload} payload - The instance payload\n * @param {sid} trunkSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nRecordingInstance = function RecordingInstance(version, payload, trunkSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.mode = payload.mode; // jshint ignore:line\n  this.trim = payload.trim; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {trunkSid: trunkSid, };\n};\n\nObject.defineProperty(RecordingInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new RecordingContext(this._version, this._solution.trunkSid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a RecordingInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingInstance\n */\n/* jshint ignore:end */\nRecordingInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a RecordingInstance\n *\n * @function update\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {recording.recording_mode} [opts.mode] -\n *          The recording mode for the trunk.\n * @param {recording.recording_trim} [opts.trim] -\n *          The recording trim setting for the trunk.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingInstance\n */\n/* jshint ignore:end */\nRecordingInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRecordingInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nRecordingInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the RecordingContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.RecordingContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} trunkSid -\n *          The SID of the Trunk from which to fetch the recording settings.\n */\n/* jshint ignore:end */\nRecordingContext = function RecordingContext(version, trunkSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {trunkSid: trunkSid, };\n  this._uri = `/Trunks/${trunkSid}/Recording`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a RecordingInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingInstance\n */\n/* jshint ignore:end */\nRecordingContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new RecordingInstance(this._version, payload, this._solution.trunkSid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a RecordingInstance\n *\n * @function update\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingContext#\n *\n * @param {object} [opts] - Options for request\n * @param {recording.recording_mode} [opts.mode] -\n *          The recording mode for the trunk.\n * @param {recording.recording_trim} [opts.trim] -\n *          The recording trim setting for the trunk.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingInstance\n */\n/* jshint ignore:end */\nRecordingContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({'Mode': _.get(opts, 'mode'), 'Trim': _.get(opts, 'trim')});\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new RecordingInstance(this._version, payload, this._solution.trunkSid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRecordingContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nRecordingContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  RecordingList: RecordingList,\n  RecordingPage: RecordingPage,\n  RecordingInstance: RecordingInstance,\n  RecordingContext: RecordingContext\n};\n"]},"metadata":{},"sourceType":"module"}