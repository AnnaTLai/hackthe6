{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar AuthorizedConnectAppList;\nvar AuthorizedConnectAppPage;\nvar AuthorizedConnectAppInstance;\nvar AuthorizedConnectAppContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the AuthorizedConnectAppList\n *\n * @constructor Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n */\n\n/* jshint ignore:end */\n\nAuthorizedConnectAppList = function AuthorizedConnectAppList(version, accountSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function authorizedConnectApps\n   * @memberof Twilio.Api.V2010.AccountContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.AuthorizedConnectAppContext}\n   */\n\n  /* jshint ignore:end */\n  function AuthorizedConnectAppListInstance(sid) {\n    return AuthorizedConnectAppListInstance.get(sid);\n  }\n\n  AuthorizedConnectAppListInstance._version = version; // Path Solution\n\n  AuthorizedConnectAppListInstance._solution = {\n    accountSid: accountSid\n  };\n  AuthorizedConnectAppListInstance._uri = `/Accounts/${accountSid}/AuthorizedConnectApps.json`;\n  /* jshint ignore:start */\n\n  /**\n   * Streams AuthorizedConnectAppInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n  AuthorizedConnectAppListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists AuthorizedConnectAppInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  AuthorizedConnectAppListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of AuthorizedConnectAppInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  AuthorizedConnectAppListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new AuthorizedConnectAppPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of AuthorizedConnectAppInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  AuthorizedConnectAppListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new AuthorizedConnectAppPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a authorized_connect_app\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList#\n   *\n   * @param {string} connectAppSid - The SID of the Connect App to fetch\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.AuthorizedConnectAppContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  AuthorizedConnectAppListInstance.get = function get(connectAppSid) {\n    return new AuthorizedConnectAppContext(this._version, this._solution.accountSid, connectAppSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  AuthorizedConnectAppListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  AuthorizedConnectAppListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return AuthorizedConnectAppListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the AuthorizedConnectAppPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.AuthorizedConnectAppPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {AuthorizedConnectAppSolution} solution - Path solution\n *\n * @returns AuthorizedConnectAppPage\n */\n\n/* jshint ignore:end */\n\n\nAuthorizedConnectAppPage = function AuthorizedConnectAppPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(AuthorizedConnectAppPage.prototype, Page.prototype);\n\nAuthorizedConnectAppPage.prototype.constructor = AuthorizedConnectAppPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of AuthorizedConnectAppInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppPage#\n *\n * @param {AuthorizedConnectAppPayload} payload - Payload response from the API\n *\n * @returns AuthorizedConnectAppInstance\n */\n\n/* jshint ignore:end */\n\nAuthorizedConnectAppPage.prototype.getInstance = function getInstance(payload) {\n  return new AuthorizedConnectAppInstance(this._version, payload, this._solution.accountSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nAuthorizedConnectAppPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nAuthorizedConnectAppPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the AuthorizedConnectAppContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.AuthorizedConnectAppInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} connectAppCompanyName -\n *          The company name set for the Connect App\n * @property {string} connectAppDescription - A detailed description of the app\n * @property {string} connectAppFriendlyName - The name of the Connect App\n * @property {string} connectAppHomepageUrl - The public URL for the Connect App\n * @property {string} connectAppSid - The SID that we assigned to the Connect App\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {authorized_connect_app.permission} permissions -\n *          Permissions authorized to the app\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n *\n * @param {V2010} version - Version of the resource\n * @param {AuthorizedConnectAppPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created the resource\n * @param {sid} connectAppSid - The SID of the Connect App to fetch\n */\n\n/* jshint ignore:end */\n\n\nAuthorizedConnectAppInstance = function AuthorizedConnectAppInstance(version, payload, accountSid, connectAppSid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.connectAppCompanyName = payload.connect_app_company_name; // jshint ignore:line\n\n  this.connectAppDescription = payload.connect_app_description; // jshint ignore:line\n\n  this.connectAppFriendlyName = payload.connect_app_friendly_name; // jshint ignore:line\n\n  this.connectAppHomepageUrl = payload.connect_app_homepage_url; // jshint ignore:line\n\n  this.connectAppSid = payload.connect_app_sid; // jshint ignore:line\n\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n\n  this.permissions = payload.permissions; // jshint ignore:line\n\n  this.uri = payload.uri; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    accountSid: accountSid,\n    connectAppSid: connectAppSid || this.connectAppSid\n  };\n};\n\nObject.defineProperty(AuthorizedConnectAppInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new AuthorizedConnectAppContext(this._version, this._solution.accountSid, this._solution.connectAppSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a AuthorizedConnectAppInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizedConnectAppInstance\n */\n\n/* jshint ignore:end */\n\nAuthorizedConnectAppInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nAuthorizedConnectAppInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nAuthorizedConnectAppInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the AuthorizedConnectAppContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.AuthorizedConnectAppContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid -\n *          The SID of the Account that created the resource to fetch\n * @param {sid} connectAppSid - The SID of the Connect App to fetch\n */\n\n/* jshint ignore:end */\n\n\nAuthorizedConnectAppContext = function AuthorizedConnectAppContext(version, accountSid, connectAppSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    accountSid: accountSid,\n    connectAppSid: connectAppSid\n  };\n  this._uri = `/Accounts/${accountSid}/AuthorizedConnectApps/${connectAppSid}.json`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a AuthorizedConnectAppInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizedConnectAppInstance\n */\n\n/* jshint ignore:end */\n\n\nAuthorizedConnectAppContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new AuthorizedConnectAppInstance(this._version, payload, this._solution.accountSid, this._solution.connectAppSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nAuthorizedConnectAppContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nAuthorizedConnectAppContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  AuthorizedConnectAppList: AuthorizedConnectAppList,\n  AuthorizedConnectAppPage: AuthorizedConnectAppPage,\n  AuthorizedConnectAppInstance: AuthorizedConnectAppInstance,\n  AuthorizedConnectAppContext: AuthorizedConnectAppContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/rest/api/v2010/account/authorizedConnectApp.js"],"names":["Q","require","_","util","Page","deserialize","values","AuthorizedConnectAppList","AuthorizedConnectAppPage","AuthorizedConnectAppInstance","AuthorizedConnectAppContext","version","accountSid","AuthorizedConnectAppListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","connectAppSid","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","account_sid","connectAppCompanyName","connect_app_company_name","connectAppDescription","connect_app_description","connectAppFriendlyName","connect_app_friendly_name","connectAppHomepageUrl","connect_app_homepage_url","connect_app_sid","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","permissions","_context","undefined","Object","defineProperty","fetch","_proxy","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar AuthorizedConnectAppList;\nvar AuthorizedConnectAppPage;\nvar AuthorizedConnectAppInstance;\nvar AuthorizedConnectAppContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the AuthorizedConnectAppList\n *\n * @constructor Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n */\n/* jshint ignore:end */\nAuthorizedConnectAppList = function AuthorizedConnectAppList(version,\n    accountSid) {\n  /* jshint ignore:start */\n  /**\n   * @function authorizedConnectApps\n   * @memberof Twilio.Api.V2010.AccountContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.AuthorizedConnectAppContext}\n   */\n  /* jshint ignore:end */\n  function AuthorizedConnectAppListInstance(sid) {\n    return AuthorizedConnectAppListInstance.get(sid);\n  }\n\n  AuthorizedConnectAppListInstance._version = version;\n  // Path Solution\n  AuthorizedConnectAppListInstance._solution = {accountSid: accountSid};\n  AuthorizedConnectAppListInstance._uri = `/Accounts/${accountSid}/AuthorizedConnectApps.json`;\n  /* jshint ignore:start */\n  /**\n   * Streams AuthorizedConnectAppInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  AuthorizedConnectAppListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists AuthorizedConnectAppInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AuthorizedConnectAppListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of AuthorizedConnectAppInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AuthorizedConnectAppListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new AuthorizedConnectAppPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of AuthorizedConnectAppInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AuthorizedConnectAppListInstance.getPage = function getPage(targetUrl, callback)\n                                                               {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new AuthorizedConnectAppPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a authorized_connect_app\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList#\n   *\n   * @param {string} connectAppSid - The SID of the Connect App to fetch\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.AuthorizedConnectAppContext}\n   */\n  /* jshint ignore:end */\n  AuthorizedConnectAppListInstance.get = function get(connectAppSid) {\n    return new AuthorizedConnectAppContext(this._version, this._solution.accountSid, connectAppSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  AuthorizedConnectAppListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  AuthorizedConnectAppListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return AuthorizedConnectAppListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AuthorizedConnectAppPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.AuthorizedConnectAppPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {AuthorizedConnectAppSolution} solution - Path solution\n *\n * @returns AuthorizedConnectAppPage\n */\n/* jshint ignore:end */\nAuthorizedConnectAppPage = function AuthorizedConnectAppPage(version, response,\n    solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(AuthorizedConnectAppPage.prototype, Page.prototype);\nAuthorizedConnectAppPage.prototype.constructor = AuthorizedConnectAppPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of AuthorizedConnectAppInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppPage#\n *\n * @param {AuthorizedConnectAppPayload} payload - Payload response from the API\n *\n * @returns AuthorizedConnectAppInstance\n */\n/* jshint ignore:end */\nAuthorizedConnectAppPage.prototype.getInstance = function getInstance(payload) {\n  return new AuthorizedConnectAppInstance(this._version, payload, this._solution.accountSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAuthorizedConnectAppPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nAuthorizedConnectAppPage.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AuthorizedConnectAppContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.AuthorizedConnectAppInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} connectAppCompanyName -\n *          The company name set for the Connect App\n * @property {string} connectAppDescription - A detailed description of the app\n * @property {string} connectAppFriendlyName - The name of the Connect App\n * @property {string} connectAppHomepageUrl - The public URL for the Connect App\n * @property {string} connectAppSid - The SID that we assigned to the Connect App\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {authorized_connect_app.permission} permissions -\n *          Permissions authorized to the app\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n *\n * @param {V2010} version - Version of the resource\n * @param {AuthorizedConnectAppPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created the resource\n * @param {sid} connectAppSid - The SID of the Connect App to fetch\n */\n/* jshint ignore:end */\nAuthorizedConnectAppInstance = function AuthorizedConnectAppInstance(version,\n    payload, accountSid, connectAppSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.connectAppCompanyName = payload.connect_app_company_name; // jshint ignore:line\n  this.connectAppDescription = payload.connect_app_description; // jshint ignore:line\n  this.connectAppFriendlyName = payload.connect_app_friendly_name; // jshint ignore:line\n  this.connectAppHomepageUrl = payload.connect_app_homepage_url; // jshint ignore:line\n  this.connectAppSid = payload.connect_app_sid; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.permissions = payload.permissions; // jshint ignore:line\n  this.uri = payload.uri; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {accountSid: accountSid, connectAppSid: connectAppSid || this.connectAppSid, };\n};\n\nObject.defineProperty(AuthorizedConnectAppInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new AuthorizedConnectAppContext(\n          this._version,\n          this._solution.accountSid,\n          this._solution.connectAppSid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a AuthorizedConnectAppInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizedConnectAppInstance\n */\n/* jshint ignore:end */\nAuthorizedConnectAppInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAuthorizedConnectAppInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nAuthorizedConnectAppInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AuthorizedConnectAppContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.AuthorizedConnectAppContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid -\n *          The SID of the Account that created the resource to fetch\n * @param {sid} connectAppSid - The SID of the Connect App to fetch\n */\n/* jshint ignore:end */\nAuthorizedConnectAppContext = function AuthorizedConnectAppContext(version,\n    accountSid, connectAppSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {accountSid: accountSid, connectAppSid: connectAppSid, };\n  this._uri = `/Accounts/${accountSid}/AuthorizedConnectApps/${connectAppSid}.json`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a AuthorizedConnectAppInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizedConnectAppInstance\n */\n/* jshint ignore:end */\nAuthorizedConnectAppContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new AuthorizedConnectAppInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.connectAppSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.AuthorizedConnectAppContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAuthorizedConnectAppContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nAuthorizedConnectAppContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  AuthorizedConnectAppList: AuthorizedConnectAppList,\n  AuthorizedConnectAppPage: AuthorizedConnectAppPage,\n  AuthorizedConnectAppInstance: AuthorizedConnectAppInstance,\n  AuthorizedConnectAppContext: AuthorizedConnectAppContext\n};\n"]},"metadata":{},"sourceType":"module"}