{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar WorkersRealTimeStatisticsList;\nvar WorkersRealTimeStatisticsPage;\nvar WorkersRealTimeStatisticsInstance;\nvar WorkersRealTimeStatisticsContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkersRealTimeStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid -\n *          The SID of the Workspace that contains the Workers\n */\n\n/* jshint ignore:end */\n\nWorkersRealTimeStatisticsList = function WorkersRealTimeStatisticsList(version, workspaceSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function realTimeStatistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsContext}\n   */\n\n  /* jshint ignore:end */\n  function WorkersRealTimeStatisticsListInstance(sid) {\n    return WorkersRealTimeStatisticsListInstance.get(sid);\n  }\n\n  WorkersRealTimeStatisticsListInstance._version = version; // Path Solution\n\n  WorkersRealTimeStatisticsListInstance._solution = {\n    workspaceSid: workspaceSid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a workers_real_time_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsContext}\n   */\n\n  /* jshint ignore:end */\n\n  WorkersRealTimeStatisticsListInstance.get = function get() {\n    return new WorkersRealTimeStatisticsContext(this._version, this._solution.workspaceSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  WorkersRealTimeStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WorkersRealTimeStatisticsListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WorkersRealTimeStatisticsListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkersRealTimeStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkersRealTimeStatisticsSolution} solution - Path solution\n *\n * @returns WorkersRealTimeStatisticsPage\n */\n\n/* jshint ignore:end */\n\n\nWorkersRealTimeStatisticsPage = function WorkersRealTimeStatisticsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WorkersRealTimeStatisticsPage.prototype, Page.prototype);\n\nWorkersRealTimeStatisticsPage.prototype.constructor = WorkersRealTimeStatisticsPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of WorkersRealTimeStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsPage#\n *\n * @param {WorkersRealTimeStatisticsPayload} payload -\n *          Payload response from the API\n *\n * @returns WorkersRealTimeStatisticsInstance\n */\n\n/* jshint ignore:end */\n\nWorkersRealTimeStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new WorkersRealTimeStatisticsInstance(this._version, payload, this._solution.workspaceSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkersRealTimeStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nWorkersRealTimeStatisticsPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkersRealTimeStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {object} activityStatistics -\n *          The number of current Workers by Activity\n * @property {number} totalWorkers - The total number of Workers\n * @property {string} workspaceSid -\n *          The SID of the Workspace that contains the Workers\n * @property {string} url - The absolute URL of the Workers statistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {WorkersRealTimeStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The SID of the Workspace that contains the Workers\n */\n\n/* jshint ignore:end */\n\n\nWorkersRealTimeStatisticsInstance = function WorkersRealTimeStatisticsInstance(version, payload, workspaceSid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.activityStatistics = payload.activity_statistics; // jshint ignore:line\n\n  this.totalWorkers = deserialize.integer(payload.total_workers); // jshint ignore:line\n\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    workspaceSid: workspaceSid\n  };\n};\n\nObject.defineProperty(WorkersRealTimeStatisticsInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new WorkersRealTimeStatisticsContext(this._version, this._solution.workspaceSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a WorkersRealTimeStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.taskChannel] -\n *          Only calculate real-time statistics on this TaskChannel\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkersRealTimeStatisticsInstance\n */\n\n/* jshint ignore:end */\n\nWorkersRealTimeStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkersRealTimeStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nWorkersRealTimeStatisticsInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkersRealTimeStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The SID of the Workspace with the resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nWorkersRealTimeStatisticsContext = function WorkersRealTimeStatisticsContext(version, workspaceSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    workspaceSid: workspaceSid\n  };\n  this._uri = `/Workspaces/${workspaceSid}/Workers/RealTimeStatistics`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a WorkersRealTimeStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.taskChannel] -\n *          Only calculate real-time statistics on this TaskChannel\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkersRealTimeStatisticsInstance\n */\n\n/* jshint ignore:end */\n\n\nWorkersRealTimeStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'TaskChannel': _.get(opts, 'taskChannel')\n  });\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new WorkersRealTimeStatisticsInstance(this._version, payload, this._solution.workspaceSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkersRealTimeStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWorkersRealTimeStatisticsContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WorkersRealTimeStatisticsList: WorkersRealTimeStatisticsList,\n  WorkersRealTimeStatisticsPage: WorkersRealTimeStatisticsPage,\n  WorkersRealTimeStatisticsInstance: WorkersRealTimeStatisticsInstance,\n  WorkersRealTimeStatisticsContext: WorkersRealTimeStatisticsContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/rest/taskrouter/v1/workspace/worker/workersRealTimeStatistics.js"],"names":["Q","require","_","util","Page","deserialize","values","WorkersRealTimeStatisticsList","WorkersRealTimeStatisticsPage","WorkersRealTimeStatisticsInstance","WorkersRealTimeStatisticsContext","version","workspaceSid","WorkersRealTimeStatisticsListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","activityStatistics","activity_statistics","totalWorkers","integer","total_workers","workspace_sid","url","_context","undefined","Object","defineProperty","fetch","opts","callback","_proxy","_uri","deferred","defer","data","of","promise","uri","method","params","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar WorkersRealTimeStatisticsList;\nvar WorkersRealTimeStatisticsPage;\nvar WorkersRealTimeStatisticsInstance;\nvar WorkersRealTimeStatisticsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkersRealTimeStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid -\n *          The SID of the Workspace that contains the Workers\n */\n/* jshint ignore:end */\nWorkersRealTimeStatisticsList = function WorkersRealTimeStatisticsList(version,\n    workspaceSid) {\n  /* jshint ignore:start */\n  /**\n   * @function realTimeStatistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsContext}\n   */\n  /* jshint ignore:end */\n  function WorkersRealTimeStatisticsListInstance(sid) {\n    return WorkersRealTimeStatisticsListInstance.get(sid);\n  }\n\n  WorkersRealTimeStatisticsListInstance._version = version;\n  // Path Solution\n  WorkersRealTimeStatisticsListInstance._solution = {workspaceSid: workspaceSid};\n  /* jshint ignore:start */\n  /**\n   * Constructs a workers_real_time_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsContext}\n   */\n  /* jshint ignore:end */\n  WorkersRealTimeStatisticsListInstance.get = function get() {\n    return new WorkersRealTimeStatisticsContext(this._version, this._solution.workspaceSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  WorkersRealTimeStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WorkersRealTimeStatisticsListInstance[util.inspect.custom] = function\n      inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WorkersRealTimeStatisticsListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkersRealTimeStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkersRealTimeStatisticsSolution} solution - Path solution\n *\n * @returns WorkersRealTimeStatisticsPage\n */\n/* jshint ignore:end */\nWorkersRealTimeStatisticsPage = function WorkersRealTimeStatisticsPage(version,\n    response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WorkersRealTimeStatisticsPage.prototype, Page.prototype);\nWorkersRealTimeStatisticsPage.prototype.constructor = WorkersRealTimeStatisticsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of WorkersRealTimeStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsPage#\n *\n * @param {WorkersRealTimeStatisticsPayload} payload -\n *          Payload response from the API\n *\n * @returns WorkersRealTimeStatisticsInstance\n */\n/* jshint ignore:end */\nWorkersRealTimeStatisticsPage.prototype.getInstance = function\n    getInstance(payload) {\n  return new WorkersRealTimeStatisticsInstance(this._version, payload, this._solution.workspaceSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkersRealTimeStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkersRealTimeStatisticsPage.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkersRealTimeStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {object} activityStatistics -\n *          The number of current Workers by Activity\n * @property {number} totalWorkers - The total number of Workers\n * @property {string} workspaceSid -\n *          The SID of the Workspace that contains the Workers\n * @property {string} url - The absolute URL of the Workers statistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {WorkersRealTimeStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The SID of the Workspace that contains the Workers\n */\n/* jshint ignore:end */\nWorkersRealTimeStatisticsInstance = function\n    WorkersRealTimeStatisticsInstance(version, payload, workspaceSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.activityStatistics = payload.activity_statistics; // jshint ignore:line\n  this.totalWorkers = deserialize.integer(payload.total_workers); // jshint ignore:line\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {workspaceSid: workspaceSid, };\n};\n\nObject.defineProperty(WorkersRealTimeStatisticsInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new WorkersRealTimeStatisticsContext(this._version, this._solution.workspaceSid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a WorkersRealTimeStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.taskChannel] -\n *          Only calculate real-time statistics on this TaskChannel\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkersRealTimeStatisticsInstance\n */\n/* jshint ignore:end */\nWorkersRealTimeStatisticsInstance.prototype.fetch = function fetch(opts,\n    callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkersRealTimeStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkersRealTimeStatisticsInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkersRealTimeStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The SID of the Workspace with the resource to fetch\n */\n/* jshint ignore:end */\nWorkersRealTimeStatisticsContext = function\n    WorkersRealTimeStatisticsContext(version, workspaceSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {workspaceSid: workspaceSid, };\n  this._uri = `/Workspaces/${workspaceSid}/Workers/RealTimeStatistics`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a WorkersRealTimeStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.taskChannel] -\n *          Only calculate real-time statistics on this TaskChannel\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkersRealTimeStatisticsInstance\n */\n/* jshint ignore:end */\nWorkersRealTimeStatisticsContext.prototype.fetch = function fetch(opts,\n    callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({'TaskChannel': _.get(opts, 'taskChannel')});\n\n  var promise = this._version.fetch({uri: this._uri, method: 'GET', params: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new WorkersRealTimeStatisticsInstance(\n      this._version,\n      payload,\n      this._solution.workspaceSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkersRealTimeStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWorkersRealTimeStatisticsContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WorkersRealTimeStatisticsList: WorkersRealTimeStatisticsList,\n  WorkersRealTimeStatisticsPage: WorkersRealTimeStatisticsPage,\n  WorkersRealTimeStatisticsInstance: WorkersRealTimeStatisticsInstance,\n  WorkersRealTimeStatisticsContext: WorkersRealTimeStatisticsContext\n};\n"]},"metadata":{},"sourceType":"module"}