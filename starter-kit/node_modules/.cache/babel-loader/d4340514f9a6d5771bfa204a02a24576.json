{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar EvaluationList;\nvar EvaluationPage;\nvar EvaluationInstance;\nvar EvaluationContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the EvaluationList\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList\n *\n * @param {Twilio.Numbers.V2} version - Version of the resource\n * @param {string} bundleSid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\nEvaluationList = function EvaluationList(version, bundleSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function evaluations\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext}\n   */\n\n  /* jshint ignore:end */\n  function EvaluationListInstance(sid) {\n    return EvaluationListInstance.get(sid);\n  }\n\n  EvaluationListInstance._version = version; // Path Solution\n\n  EvaluationListInstance._solution = {\n    bundleSid: bundleSid\n  };\n  EvaluationListInstance._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/Evaluations`;\n  /* jshint ignore:start */\n\n  /**\n   * create a EvaluationInstance\n   *\n   * @function create\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed EvaluationInstance\n   */\n\n  /* jshint ignore:end */\n\n  EvaluationListInstance.create = function create(callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST'\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new EvaluationInstance(this._version, payload, this._solution.bundleSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams EvaluationInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  EvaluationListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists EvaluationInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  EvaluationListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of EvaluationInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  EvaluationListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new EvaluationPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of EvaluationInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  EvaluationListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new EvaluationPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a evaluation\n   *\n   * @function get\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {string} sid - The unique string that identifies the Evaluation resource\n   *\n   * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  EvaluationListInstance.get = function get(sid) {\n    return new EvaluationContext(this._version, this._solution.bundleSid, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  EvaluationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  EvaluationListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return EvaluationListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the EvaluationPage\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {EvaluationSolution} solution - Path solution\n *\n * @returns EvaluationPage\n */\n\n/* jshint ignore:end */\n\n\nEvaluationPage = function EvaluationPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(EvaluationPage.prototype, Page.prototype);\n\nEvaluationPage.prototype.constructor = EvaluationPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of EvaluationInstance\n *\n * @function getInstance\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationPage#\n *\n * @param {EvaluationPayload} payload - Payload response from the API\n *\n * @returns EvaluationInstance\n */\n\n/* jshint ignore:end */\n\nEvaluationPage.prototype.getInstance = function getInstance(payload) {\n  return new EvaluationInstance(this._version, payload, this._solution.bundleSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nEvaluationPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nEvaluationPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the EvaluationContext\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationInstance\n *\n * @property {string} sid -\n *          The unique string that identifies the Evaluation resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} regulationSid - The unique string of a regulation\n * @property {string} bundleSid - The unique string that identifies the resource\n * @property {evaluation.status} status -\n *          The compliance status of the Evaluation resource\n * @property {object} results - The results of the Evaluation resource\n * @property {Date} dateCreated - The date_created\n * @property {string} url - The url\n *\n * @param {V2} version - Version of the resource\n * @param {EvaluationPayload} payload - The instance payload\n * @param {sid} bundleSid - The unique string that identifies the resource\n * @param {sid} sid - The unique string that identifies the Evaluation resource\n */\n\n/* jshint ignore:end */\n\n\nEvaluationInstance = function EvaluationInstance(version, payload, bundleSid, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.regulationSid = payload.regulation_sid; // jshint ignore:line\n\n  this.bundleSid = payload.bundle_sid; // jshint ignore:line\n\n  this.status = payload.status; // jshint ignore:line\n\n  this.results = payload.results; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    bundleSid: bundleSid,\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(EvaluationInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new EvaluationContext(this._version, this._solution.bundleSid, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a EvaluationInstance\n *\n * @function fetch\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed EvaluationInstance\n */\n\n/* jshint ignore:end */\n\nEvaluationInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nEvaluationInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nEvaluationInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the EvaluationContext\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext\n *\n * @param {V2} version - Version of the resource\n * @param {sid} bundleSid - The unique string that identifies the resource\n * @param {sid} sid - The unique string that identifies the Evaluation resource\n */\n\n/* jshint ignore:end */\n\n\nEvaluationContext = function EvaluationContext(version, bundleSid, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    bundleSid: bundleSid,\n    sid: sid\n  };\n  this._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/Evaluations/${sid}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a EvaluationInstance\n *\n * @function fetch\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed EvaluationInstance\n */\n\n/* jshint ignore:end */\n\n\nEvaluationContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new EvaluationInstance(this._version, payload, this._solution.bundleSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nEvaluationContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nEvaluationContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  EvaluationList: EvaluationList,\n  EvaluationPage: EvaluationPage,\n  EvaluationInstance: EvaluationInstance,\n  EvaluationContext: EvaluationContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/bundle/evaluation.js"],"names":["Q","require","_","util","Page","deserialize","values","EvaluationList","EvaluationPage","EvaluationInstance","EvaluationContext","version","bundleSid","EvaluationListInstance","sid","get","_version","_solution","_uri","create","callback","deferred","defer","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","opts","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","data","of","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","regulationSid","regulation_sid","bundle_sid","status","results","dateCreated","iso8601DateTime","date_created","url","_context","undefined","Object","defineProperty","fetch","_proxy","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar EvaluationList;\nvar EvaluationPage;\nvar EvaluationInstance;\nvar EvaluationContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the EvaluationList\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList\n *\n * @param {Twilio.Numbers.V2} version - Version of the resource\n * @param {string} bundleSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nEvaluationList = function EvaluationList(version, bundleSid) {\n  /* jshint ignore:start */\n  /**\n   * @function evaluations\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext}\n   */\n  /* jshint ignore:end */\n  function EvaluationListInstance(sid) {\n    return EvaluationListInstance.get(sid);\n  }\n\n  EvaluationListInstance._version = version;\n  // Path Solution\n  EvaluationListInstance._solution = {bundleSid: bundleSid};\n  EvaluationListInstance._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/Evaluations`;\n  /* jshint ignore:start */\n  /**\n   * create a EvaluationInstance\n   *\n   * @function create\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed EvaluationInstance\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.create = function create(callback) {\n    var deferred = Q.defer();\n    var promise = this._version.create({uri: this._uri, method: 'POST'});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new EvaluationInstance(\n        this._version,\n        payload,\n        this._solution.bundleSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams EvaluationInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists EvaluationInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of EvaluationInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new EvaluationPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of EvaluationInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new EvaluationPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a evaluation\n   *\n   * @function get\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {string} sid - The unique string that identifies the Evaluation resource\n   *\n   * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext}\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.get = function get(sid) {\n    return new EvaluationContext(this._version, this._solution.bundleSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  EvaluationListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return EvaluationListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the EvaluationPage\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {EvaluationSolution} solution - Path solution\n *\n * @returns EvaluationPage\n */\n/* jshint ignore:end */\nEvaluationPage = function EvaluationPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(EvaluationPage.prototype, Page.prototype);\nEvaluationPage.prototype.constructor = EvaluationPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of EvaluationInstance\n *\n * @function getInstance\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationPage#\n *\n * @param {EvaluationPayload} payload - Payload response from the API\n *\n * @returns EvaluationInstance\n */\n/* jshint ignore:end */\nEvaluationPage.prototype.getInstance = function getInstance(payload) {\n  return new EvaluationInstance(this._version, payload, this._solution.bundleSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nEvaluationPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nEvaluationPage.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the EvaluationContext\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationInstance\n *\n * @property {string} sid -\n *          The unique string that identifies the Evaluation resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} regulationSid - The unique string of a regulation\n * @property {string} bundleSid - The unique string that identifies the resource\n * @property {evaluation.status} status -\n *          The compliance status of the Evaluation resource\n * @property {object} results - The results of the Evaluation resource\n * @property {Date} dateCreated - The date_created\n * @property {string} url - The url\n *\n * @param {V2} version - Version of the resource\n * @param {EvaluationPayload} payload - The instance payload\n * @param {sid} bundleSid - The unique string that identifies the resource\n * @param {sid} sid - The unique string that identifies the Evaluation resource\n */\n/* jshint ignore:end */\nEvaluationInstance = function EvaluationInstance(version, payload, bundleSid,\n                                                  sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.regulationSid = payload.regulation_sid; // jshint ignore:line\n  this.bundleSid = payload.bundle_sid; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.results = payload.results; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {bundleSid: bundleSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(EvaluationInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new EvaluationContext(this._version, this._solution.bundleSid, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a EvaluationInstance\n *\n * @function fetch\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed EvaluationInstance\n */\n/* jshint ignore:end */\nEvaluationInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nEvaluationInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nEvaluationInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the EvaluationContext\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext\n *\n * @param {V2} version - Version of the resource\n * @param {sid} bundleSid - The unique string that identifies the resource\n * @param {sid} sid - The unique string that identifies the Evaluation resource\n */\n/* jshint ignore:end */\nEvaluationContext = function EvaluationContext(version, bundleSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {bundleSid: bundleSid, sid: sid, };\n  this._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/Evaluations/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a EvaluationInstance\n *\n * @function fetch\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed EvaluationInstance\n */\n/* jshint ignore:end */\nEvaluationContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new EvaluationInstance(\n      this._version,\n      payload,\n      this._solution.bundleSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nEvaluationContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nEvaluationContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  EvaluationList: EvaluationList,\n  EvaluationPage: EvaluationPage,\n  EvaluationInstance: EvaluationInstance,\n  EvaluationContext: EvaluationContext\n};\n"]},"metadata":{},"sourceType":"script"}