{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar TrustProductsChannelEndpointAssignmentList;\nvar TrustProductsChannelEndpointAssignmentPage;\nvar TrustProductsChannelEndpointAssignmentInstance;\nvar TrustProductsChannelEndpointAssignmentContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the TrustProductsChannelEndpointAssignmentList\n *\n * @constructor Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentList\n *\n * @param {Twilio.Trusthub.V1} version - Version of the resource\n * @param {string} trustProductSid -\n *          The unique string that identifies the CustomerProfile resource.\n */\n\n/* jshint ignore:end */\n\nTrustProductsChannelEndpointAssignmentList = function TrustProductsChannelEndpointAssignmentList(version, trustProductSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function trustProductsChannelEndpointAssignment\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentContext}\n   */\n\n  /* jshint ignore:end */\n  function TrustProductsChannelEndpointAssignmentListInstance(sid) {\n    return TrustProductsChannelEndpointAssignmentListInstance.get(sid);\n  }\n\n  TrustProductsChannelEndpointAssignmentListInstance._version = version; // Path Solution\n\n  TrustProductsChannelEndpointAssignmentListInstance._solution = {\n    trustProductSid: trustProductSid\n  };\n  TrustProductsChannelEndpointAssignmentListInstance._uri = `/TrustProducts/${trustProductSid}/ChannelEndpointAssignments`;\n  /* jshint ignore:start */\n\n  /**\n   * create a TrustProductsChannelEndpointAssignmentInstance\n   *\n   * @function create\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.channelEndpointType - The type of channel endpoint\n   * @param {string} opts.channelEndpointSid - The sid of an channel endpoint\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed TrustProductsChannelEndpointAssignmentInstance\n   */\n\n  /* jshint ignore:end */\n\n  TrustProductsChannelEndpointAssignmentListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.channelEndpointType)) {\n      throw new Error('Required parameter \"opts.channelEndpointType\" missing.');\n    }\n\n    if (_.isUndefined(opts.channelEndpointSid)) {\n      throw new Error('Required parameter \"opts.channelEndpointSid\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'ChannelEndpointType': _.get(opts, 'channelEndpointType'),\n      'ChannelEndpointSid': _.get(opts, 'channelEndpointSid')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new TrustProductsChannelEndpointAssignmentInstance(this._version, payload, this._solution.trustProductSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams TrustProductsChannelEndpointAssignmentInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.channelEndpointSid] - The sid of an channel endpoint\n   * @param {string} [opts.channelEndpointSids] -\n   *          comma separated list of channel endpoint sids\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  TrustProductsChannelEndpointAssignmentListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists TrustProductsChannelEndpointAssignmentInstance records from the API as a\n   * list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.channelEndpointSid] - The sid of an channel endpoint\n   * @param {string} [opts.channelEndpointSids] -\n   *          comma separated list of channel endpoint sids\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  TrustProductsChannelEndpointAssignmentListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of TrustProductsChannelEndpointAssignmentInstance records\n   * from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.channelEndpointSid] - The sid of an channel endpoint\n   * @param {string} [opts.channelEndpointSids] -\n   *          comma separated list of channel endpoint sids\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  TrustProductsChannelEndpointAssignmentListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'ChannelEndpointSid': _.get(opts, 'channelEndpointSid'),\n      'ChannelEndpointSids': _.get(opts, 'channelEndpointSids'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new TrustProductsChannelEndpointAssignmentPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of TrustProductsChannelEndpointAssignmentInstance\n   * records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  TrustProductsChannelEndpointAssignmentListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new TrustProductsChannelEndpointAssignmentPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a trust_products_channel_endpoint_assignment\n   *\n   * @function get\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  TrustProductsChannelEndpointAssignmentListInstance.get = function get(sid) {\n    return new TrustProductsChannelEndpointAssignmentContext(this._version, this._solution.trustProductSid, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  TrustProductsChannelEndpointAssignmentListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TrustProductsChannelEndpointAssignmentListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TrustProductsChannelEndpointAssignmentListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TrustProductsChannelEndpointAssignmentPage\n *\n * @constructor Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TrustProductsChannelEndpointAssignmentSolution} solution - Path solution\n *\n * @returns TrustProductsChannelEndpointAssignmentPage\n */\n\n/* jshint ignore:end */\n\n\nTrustProductsChannelEndpointAssignmentPage = function TrustProductsChannelEndpointAssignmentPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TrustProductsChannelEndpointAssignmentPage.prototype, Page.prototype);\n\nTrustProductsChannelEndpointAssignmentPage.prototype.constructor = TrustProductsChannelEndpointAssignmentPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of TrustProductsChannelEndpointAssignmentInstance\n *\n * @function getInstance\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentPage#\n *\n * @param {TrustProductsChannelEndpointAssignmentPayload} payload -\n *          Payload response from the API\n *\n * @returns TrustProductsChannelEndpointAssignmentInstance\n */\n\n/* jshint ignore:end */\n\nTrustProductsChannelEndpointAssignmentPage.prototype.getInstance = function getInstance(payload) {\n  return new TrustProductsChannelEndpointAssignmentInstance(this._version, payload, this._solution.trustProductSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTrustProductsChannelEndpointAssignmentPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nTrustProductsChannelEndpointAssignmentPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TrustProductsChannelEndpointAssignmentContext\n *\n * @constructor Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} trustProductSid -\n *          The unique string that identifies the CustomerProfile resource.\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} channelEndpointType - The type of channel endpoint\n * @property {string} channelEndpointSid - The sid of an channel endpoint\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {string} url - The absolute URL of the Identity resource\n *\n * @param {V1} version - Version of the resource\n * @param {TrustProductsChannelEndpointAssignmentPayload} payload -\n *          The instance payload\n * @param {sid} trustProductSid -\n *          The unique string that identifies the CustomerProfile resource.\n * @param {sid} sid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nTrustProductsChannelEndpointAssignmentInstance = function TrustProductsChannelEndpointAssignmentInstance(version, payload, trustProductSid, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.trustProductSid = payload.trust_product_sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.channelEndpointType = payload.channel_endpoint_type; // jshint ignore:line\n\n  this.channelEndpointSid = payload.channel_endpoint_sid; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    trustProductSid: trustProductSid,\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(TrustProductsChannelEndpointAssignmentInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new TrustProductsChannelEndpointAssignmentContext(this._version, this._solution.trustProductSid, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a TrustProductsChannelEndpointAssignmentInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrustProductsChannelEndpointAssignmentInstance\n */\n\n/* jshint ignore:end */\n\nTrustProductsChannelEndpointAssignmentInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a TrustProductsChannelEndpointAssignmentInstance\n *\n * @function remove\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrustProductsChannelEndpointAssignmentInstance\n */\n\n/* jshint ignore:end */\n\n\nTrustProductsChannelEndpointAssignmentInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTrustProductsChannelEndpointAssignmentInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nTrustProductsChannelEndpointAssignmentInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TrustProductsChannelEndpointAssignmentContext\n *\n * @constructor Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} trustProductSid - The unique string that identifies the resource.\n * @param {sid} sid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nTrustProductsChannelEndpointAssignmentContext = function TrustProductsChannelEndpointAssignmentContext(version, trustProductSid, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    trustProductSid: trustProductSid,\n    sid: sid\n  };\n  this._uri = `/TrustProducts/${trustProductSid}/ChannelEndpointAssignments/${sid}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a TrustProductsChannelEndpointAssignmentInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrustProductsChannelEndpointAssignmentInstance\n */\n\n/* jshint ignore:end */\n\n\nTrustProductsChannelEndpointAssignmentContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new TrustProductsChannelEndpointAssignmentInstance(this._version, payload, this._solution.trustProductSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a TrustProductsChannelEndpointAssignmentInstance\n *\n * @function remove\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrustProductsChannelEndpointAssignmentInstance\n */\n\n/* jshint ignore:end */\n\n\nTrustProductsChannelEndpointAssignmentContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTrustProductsChannelEndpointAssignmentContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nTrustProductsChannelEndpointAssignmentContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TrustProductsChannelEndpointAssignmentList: TrustProductsChannelEndpointAssignmentList,\n  TrustProductsChannelEndpointAssignmentPage: TrustProductsChannelEndpointAssignmentPage,\n  TrustProductsChannelEndpointAssignmentInstance: TrustProductsChannelEndpointAssignmentInstance,\n  TrustProductsChannelEndpointAssignmentContext: TrustProductsChannelEndpointAssignmentContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/rest/trusthub/v1/trustProducts/trustProductsChannelEndpointAssignment.js"],"names":["Q","require","_","util","Page","deserialize","values","TrustProductsChannelEndpointAssignmentList","TrustProductsChannelEndpointAssignmentPage","TrustProductsChannelEndpointAssignmentInstance","TrustProductsChannelEndpointAssignmentContext","version","trustProductSid","TrustProductsChannelEndpointAssignmentListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","channelEndpointType","channelEndpointSid","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","trust_product_sid","accountSid","account_sid","channel_endpoint_type","channel_endpoint_sid","dateCreated","iso8601DateTime","date_created","url","_context","undefined","Object","defineProperty","fetch","_proxy","remove","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar TrustProductsChannelEndpointAssignmentList;\nvar TrustProductsChannelEndpointAssignmentPage;\nvar TrustProductsChannelEndpointAssignmentInstance;\nvar TrustProductsChannelEndpointAssignmentContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the TrustProductsChannelEndpointAssignmentList\n *\n * @constructor Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentList\n *\n * @param {Twilio.Trusthub.V1} version - Version of the resource\n * @param {string} trustProductSid -\n *          The unique string that identifies the CustomerProfile resource.\n */\n/* jshint ignore:end */\nTrustProductsChannelEndpointAssignmentList = function\n    TrustProductsChannelEndpointAssignmentList(version, trustProductSid) {\n  /* jshint ignore:start */\n  /**\n   * @function trustProductsChannelEndpointAssignment\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentContext}\n   */\n  /* jshint ignore:end */\n  function TrustProductsChannelEndpointAssignmentListInstance(sid) {\n    return TrustProductsChannelEndpointAssignmentListInstance.get(sid);\n  }\n\n  TrustProductsChannelEndpointAssignmentListInstance._version = version;\n  // Path Solution\n  TrustProductsChannelEndpointAssignmentListInstance._solution = {trustProductSid: trustProductSid};\n  TrustProductsChannelEndpointAssignmentListInstance._uri = `/TrustProducts/${trustProductSid}/ChannelEndpointAssignments`;\n  /* jshint ignore:start */\n  /**\n   * create a TrustProductsChannelEndpointAssignmentInstance\n   *\n   * @function create\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.channelEndpointType - The type of channel endpoint\n   * @param {string} opts.channelEndpointSid - The sid of an channel endpoint\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed TrustProductsChannelEndpointAssignmentInstance\n   */\n  /* jshint ignore:end */\n  TrustProductsChannelEndpointAssignmentListInstance.create = function\n      create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.channelEndpointType)) {\n      throw new Error('Required parameter \"opts.channelEndpointType\" missing.');\n    }\n    if (_.isUndefined(opts.channelEndpointSid)) {\n      throw new Error('Required parameter \"opts.channelEndpointSid\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'ChannelEndpointType': _.get(opts, 'channelEndpointType'),\n      'ChannelEndpointSid': _.get(opts, 'channelEndpointSid')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new TrustProductsChannelEndpointAssignmentInstance(\n        this._version,\n        payload,\n        this._solution.trustProductSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams TrustProductsChannelEndpointAssignmentInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.channelEndpointSid] - The sid of an channel endpoint\n   * @param {string} [opts.channelEndpointSids] -\n   *          comma separated list of channel endpoint sids\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  TrustProductsChannelEndpointAssignmentListInstance.each = function each(opts,\n      callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists TrustProductsChannelEndpointAssignmentInstance records from the API as a\n   * list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.channelEndpointSid] - The sid of an channel endpoint\n   * @param {string} [opts.channelEndpointSids] -\n   *          comma separated list of channel endpoint sids\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  TrustProductsChannelEndpointAssignmentListInstance.list = function list(opts,\n      callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of TrustProductsChannelEndpointAssignmentInstance records\n   * from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.channelEndpointSid] - The sid of an channel endpoint\n   * @param {string} [opts.channelEndpointSids] -\n   *          comma separated list of channel endpoint sids\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  TrustProductsChannelEndpointAssignmentListInstance.page = function page(opts,\n      callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'ChannelEndpointSid': _.get(opts, 'channelEndpointSid'),\n      'ChannelEndpointSids': _.get(opts, 'channelEndpointSids'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new TrustProductsChannelEndpointAssignmentPage(\n        this._version,\n        payload,\n        this._solution\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of TrustProductsChannelEndpointAssignmentInstance\n   * records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  TrustProductsChannelEndpointAssignmentListInstance.getPage = function\n      getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new TrustProductsChannelEndpointAssignmentPage(\n        this._version,\n        payload,\n        this._solution\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a trust_products_channel_endpoint_assignment\n   *\n   * @function get\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentContext}\n   */\n  /* jshint ignore:end */\n  TrustProductsChannelEndpointAssignmentListInstance.get = function get(sid) {\n    return new TrustProductsChannelEndpointAssignmentContext(\n      this._version,\n      this._solution.trustProductSid,\n      sid\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  TrustProductsChannelEndpointAssignmentListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TrustProductsChannelEndpointAssignmentListInstance[util.inspect.custom] =\n      function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TrustProductsChannelEndpointAssignmentListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TrustProductsChannelEndpointAssignmentPage\n *\n * @constructor Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TrustProductsChannelEndpointAssignmentSolution} solution - Path solution\n *\n * @returns TrustProductsChannelEndpointAssignmentPage\n */\n/* jshint ignore:end */\nTrustProductsChannelEndpointAssignmentPage = function\n    TrustProductsChannelEndpointAssignmentPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TrustProductsChannelEndpointAssignmentPage.prototype, Page.prototype);\nTrustProductsChannelEndpointAssignmentPage.prototype.constructor = TrustProductsChannelEndpointAssignmentPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of TrustProductsChannelEndpointAssignmentInstance\n *\n * @function getInstance\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentPage#\n *\n * @param {TrustProductsChannelEndpointAssignmentPayload} payload -\n *          Payload response from the API\n *\n * @returns TrustProductsChannelEndpointAssignmentInstance\n */\n/* jshint ignore:end */\nTrustProductsChannelEndpointAssignmentPage.prototype.getInstance = function\n    getInstance(payload) {\n  return new TrustProductsChannelEndpointAssignmentInstance(\n    this._version,\n    payload,\n    this._solution.trustProductSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTrustProductsChannelEndpointAssignmentPage.prototype.toJSON = function toJSON()\n    {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTrustProductsChannelEndpointAssignmentPage.prototype[util.inspect.custom] =\n    function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TrustProductsChannelEndpointAssignmentContext\n *\n * @constructor Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} trustProductSid -\n *          The unique string that identifies the CustomerProfile resource.\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} channelEndpointType - The type of channel endpoint\n * @property {string} channelEndpointSid - The sid of an channel endpoint\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {string} url - The absolute URL of the Identity resource\n *\n * @param {V1} version - Version of the resource\n * @param {TrustProductsChannelEndpointAssignmentPayload} payload -\n *          The instance payload\n * @param {sid} trustProductSid -\n *          The unique string that identifies the CustomerProfile resource.\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nTrustProductsChannelEndpointAssignmentInstance = function\n    TrustProductsChannelEndpointAssignmentInstance(version, payload,\n    trustProductSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.trustProductSid = payload.trust_product_sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.channelEndpointType = payload.channel_endpoint_type; // jshint ignore:line\n  this.channelEndpointSid = payload.channel_endpoint_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {trustProductSid: trustProductSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(TrustProductsChannelEndpointAssignmentInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new TrustProductsChannelEndpointAssignmentContext(\n          this._version,\n          this._solution.trustProductSid,\n          this._solution.sid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a TrustProductsChannelEndpointAssignmentInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrustProductsChannelEndpointAssignmentInstance\n */\n/* jshint ignore:end */\nTrustProductsChannelEndpointAssignmentInstance.prototype.fetch = function\n    fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a TrustProductsChannelEndpointAssignmentInstance\n *\n * @function remove\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrustProductsChannelEndpointAssignmentInstance\n */\n/* jshint ignore:end */\nTrustProductsChannelEndpointAssignmentInstance.prototype.remove = function\n    remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTrustProductsChannelEndpointAssignmentInstance.prototype.toJSON = function\n    toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTrustProductsChannelEndpointAssignmentInstance.prototype[util.inspect.custom] =\n    function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TrustProductsChannelEndpointAssignmentContext\n *\n * @constructor Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} trustProductSid - The unique string that identifies the resource.\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nTrustProductsChannelEndpointAssignmentContext = function\n    TrustProductsChannelEndpointAssignmentContext(version, trustProductSid, sid)\n    {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {trustProductSid: trustProductSid, sid: sid, };\n  this._uri = `/TrustProducts/${trustProductSid}/ChannelEndpointAssignments/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a TrustProductsChannelEndpointAssignmentInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrustProductsChannelEndpointAssignmentInstance\n */\n/* jshint ignore:end */\nTrustProductsChannelEndpointAssignmentContext.prototype.fetch = function\n    fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new TrustProductsChannelEndpointAssignmentInstance(\n      this._version,\n      payload,\n      this._solution.trustProductSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a TrustProductsChannelEndpointAssignmentInstance\n *\n * @function remove\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrustProductsChannelEndpointAssignmentInstance\n */\n/* jshint ignore:end */\nTrustProductsChannelEndpointAssignmentContext.prototype.remove = function\n    remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsChannelEndpointAssignmentContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTrustProductsChannelEndpointAssignmentContext.prototype.toJSON = function\n    toJSON() {\n  return this._solution;\n};\n\nTrustProductsChannelEndpointAssignmentContext.prototype[util.inspect.custom] =\n    function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TrustProductsChannelEndpointAssignmentList: TrustProductsChannelEndpointAssignmentList,\n  TrustProductsChannelEndpointAssignmentPage: TrustProductsChannelEndpointAssignmentPage,\n  TrustProductsChannelEndpointAssignmentInstance: TrustProductsChannelEndpointAssignmentInstance,\n  TrustProductsChannelEndpointAssignmentContext: TrustProductsChannelEndpointAssignmentContext\n};\n"]},"metadata":{},"sourceType":"module"}