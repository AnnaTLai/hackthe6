{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar HostedNumberOrderList;\nvar HostedNumberOrderPage;\nvar HostedNumberOrderInstance;\nvar HostedNumberOrderContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the HostedNumberOrderList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderList\n *\n * @param {Twilio.Preview.HostedNumbers} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nHostedNumberOrderList = function HostedNumberOrderList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function hostedNumberOrders\n   * @memberof Twilio.Preview.HostedNumbers#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.HostedNumbers.HostedNumberOrderContext}\n   */\n\n  /* jshint ignore:end */\n  function HostedNumberOrderListInstance(sid) {\n    return HostedNumberOrderListInstance.get(sid);\n  }\n\n  HostedNumberOrderListInstance._version = version; // Path Solution\n\n  HostedNumberOrderListInstance._solution = {};\n  HostedNumberOrderListInstance._uri = `/HostedNumberOrders`;\n  /* jshint ignore:start */\n\n  /**\n   * Streams HostedNumberOrderInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {hosted_number_order.status} [opts.status] -\n   *          The Status of this HostedNumberOrder.\n   * @param {string} [opts.phoneNumber] - An E164 formatted phone number.\n   * @param {string} [opts.incomingPhoneNumberSid] - IncomingPhoneNumber sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n  HostedNumberOrderListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists HostedNumberOrderInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {hosted_number_order.status} [opts.status] -\n   *          The Status of this HostedNumberOrder.\n   * @param {string} [opts.phoneNumber] - An E164 formatted phone number.\n   * @param {string} [opts.incomingPhoneNumberSid] - IncomingPhoneNumber sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  HostedNumberOrderListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of HostedNumberOrderInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {hosted_number_order.status} [opts.status] -\n   *          The Status of this HostedNumberOrder.\n   * @param {string} [opts.phoneNumber] - An E164 formatted phone number.\n   * @param {string} [opts.incomingPhoneNumberSid] - IncomingPhoneNumber sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  HostedNumberOrderListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Status': _.get(opts, 'status'),\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'IncomingPhoneNumberSid': _.get(opts, 'incomingPhoneNumberSid'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new HostedNumberOrderPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of HostedNumberOrderInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  HostedNumberOrderListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new HostedNumberOrderPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * create a HostedNumberOrderInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.phoneNumber - An E164 formatted phone number.\n   * @param {boolean} opts.smsCapability - Specify SMS capability to host.\n   * @param {string} [opts.accountSid] - Account Sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {string|list} [opts.ccEmails] - A list of emails.\n   * @param {string} [opts.smsUrl] - SMS URL.\n   * @param {string} [opts.smsMethod] - SMS Method.\n   * @param {string} [opts.smsFallbackUrl] - SMS Fallback URL.\n   * @param {string} [opts.smsFallbackMethod] - SMS Fallback Method.\n   * @param {string} [opts.statusCallbackUrl] - Status Callback URL.\n   * @param {string} [opts.statusCallbackMethod] - Status Callback Method.\n   * @param {string} [opts.smsApplicationSid] - SMS Application Sid.\n   * @param {string} [opts.addressSid] - Address sid.\n   * @param {string} [opts.email] - Email.\n   * @param {hosted_number_order.verification_type} [opts.verificationType] -\n   *          Verification Type.\n   * @param {string} [opts.verificationDocumentSid] - Verification Document Sid\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n   */\n\n  /* jshint ignore:end */\n\n\n  HostedNumberOrderListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.phoneNumber)) {\n      throw new Error('Required parameter \"opts.phoneNumber\" missing.');\n    }\n\n    if (_.isUndefined(opts.smsCapability)) {\n      throw new Error('Required parameter \"opts.smsCapability\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'SmsCapability': serialize.bool(_.get(opts, 'smsCapability')),\n      'AccountSid': _.get(opts, 'accountSid'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'CcEmails': serialize.map(_.get(opts, 'ccEmails'), function (e) {\n        return e;\n      }),\n      'SmsUrl': _.get(opts, 'smsUrl'),\n      'SmsMethod': _.get(opts, 'smsMethod'),\n      'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n      'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n      'StatusCallbackUrl': _.get(opts, 'statusCallbackUrl'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n      'SmsApplicationSid': _.get(opts, 'smsApplicationSid'),\n      'AddressSid': _.get(opts, 'addressSid'),\n      'Email': _.get(opts, 'email'),\n      'VerificationType': _.get(opts, 'verificationType'),\n      'VerificationDocumentSid': _.get(opts, 'verificationDocumentSid')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new HostedNumberOrderInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a hosted_number_order\n   *\n   * @function get\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {string} sid - HostedNumberOrder sid.\n   *\n   * @returns {Twilio.Preview.HostedNumbers.HostedNumberOrderContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  HostedNumberOrderListInstance.get = function get(sid) {\n    return new HostedNumberOrderContext(this._version, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  HostedNumberOrderListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  HostedNumberOrderListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return HostedNumberOrderListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the HostedNumberOrderPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderPage\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {HostedNumberOrderSolution} solution - Path solution\n *\n * @returns HostedNumberOrderPage\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderPage = function HostedNumberOrderPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(HostedNumberOrderPage.prototype, Page.prototype);\n\nHostedNumberOrderPage.prototype.constructor = HostedNumberOrderPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of HostedNumberOrderInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderPage#\n *\n * @param {HostedNumberOrderPayload} payload - Payload response from the API\n *\n * @returns HostedNumberOrderInstance\n */\n\n/* jshint ignore:end */\n\nHostedNumberOrderPage.prototype.getInstance = function getInstance(payload) {\n  return new HostedNumberOrderInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nHostedNumberOrderPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the HostedNumberOrderContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderInstance\n *\n * @property {string} sid - HostedNumberOrder sid.\n * @property {string} accountSid - Account Sid.\n * @property {string} incomingPhoneNumberSid - IncomingPhoneNumber sid.\n * @property {string} addressSid - Address sid.\n * @property {string} signingDocumentSid - LOA document sid.\n * @property {string} phoneNumber - An E164 formatted phone number.\n * @property {PhoneNumberCapabilities} capabilities -\n *          A mapping of phone number capabilities.\n * @property {string} friendlyName - A human readable description of this resource.\n * @property {string} uniqueName -\n *          A unique, developer assigned name of this HostedNumberOrder.\n * @property {hosted_number_order.status} status -\n *          The Status of this HostedNumberOrder.\n * @property {string} failureReason -\n *          Why a hosted_number_order reached status \"action-required\"\n * @property {Date} dateCreated - The date this HostedNumberOrder was created.\n * @property {Date} dateUpdated - The date this HostedNumberOrder was updated.\n * @property {number} verificationAttempts -\n *          The number of attempts made to verify ownership of the phone number.\n * @property {string} email - Email.\n * @property {string} ccEmails - A list of emails.\n * @property {string} url - The URL of this HostedNumberOrder.\n * @property {hosted_number_order.verification_type} verificationType -\n *          The method used for verifying ownership of the number to be hosted.\n * @property {string} verificationDocumentSid - Verification Document Sid.\n * @property {string} extension -\n *          Phone extension to use for ownership verification call.\n * @property {number} callDelay -\n *          Seconds (0-30) to delay ownership verification call by.\n * @property {string} verificationCode -\n *          The digits passed during the ownership verification call.\n * @property {string} verificationCallSids -\n *          List of IDs for ownership verification calls.\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {HostedNumberOrderPayload} payload - The instance payload\n * @param {sid} sid - HostedNumberOrder sid.\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderInstance = function HostedNumberOrderInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.incomingPhoneNumberSid = payload.incoming_phone_number_sid; // jshint ignore:line\n\n  this.addressSid = payload.address_sid; // jshint ignore:line\n\n  this.signingDocumentSid = payload.signing_document_sid; // jshint ignore:line\n\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n\n  this.capabilities = payload.capabilities; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n\n  this.status = payload.status; // jshint ignore:line\n\n  this.failureReason = payload.failure_reason; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.verificationAttempts = deserialize.integer(payload.verification_attempts); // jshint ignore:line\n\n  this.email = payload.email; // jshint ignore:line\n\n  this.ccEmails = payload.cc_emails; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.verificationType = payload.verification_type; // jshint ignore:line\n\n  this.verificationDocumentSid = payload.verification_document_sid; // jshint ignore:line\n\n  this.extension = payload.extension; // jshint ignore:line\n\n  this.callDelay = deserialize.integer(payload.call_delay); // jshint ignore:line\n\n  this.verificationCode = payload.verification_code; // jshint ignore:line\n\n  this.verificationCallSids = payload.verification_call_sids; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(HostedNumberOrderInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new HostedNumberOrderContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a HostedNumberOrderInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n\n/* jshint ignore:end */\n\nHostedNumberOrderInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a HostedNumberOrderInstance\n *\n * @function remove\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a HostedNumberOrderInstance\n *\n * @function update\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          A human readable description of this resource.\n * @param {string} [opts.uniqueName] -\n *          A unique, developer assigned name of this HostedNumberOrder.\n * @param {string} [opts.email] - Email.\n * @param {string|list} [opts.ccEmails] - A list of emails.\n * @param {hosted_number_order.status} [opts.status] -\n *          The Status of this HostedNumberOrder.\n * @param {string} [opts.verificationCode] - A verification code.\n * @param {hosted_number_order.verification_type} [opts.verificationType] -\n *          Verification Type.\n * @param {string} [opts.verificationDocumentSid] - Verification Document Sid\n * @param {string} [opts.extension] -\n *          Digits to dial after connecting the verification call.\n * @param {number} [opts.callDelay] -\n *          The number of seconds, between 0 and 60, to delay before initiating the verification call.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nHostedNumberOrderInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the HostedNumberOrderContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderContext\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {sid} sid - HostedNumberOrder sid.\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderContext = function HostedNumberOrderContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/HostedNumberOrders/${sid}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a HostedNumberOrderInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new HostedNumberOrderInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a HostedNumberOrderInstance\n *\n * @function remove\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a HostedNumberOrderInstance\n *\n * @function update\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          A human readable description of this resource.\n * @param {string} [opts.uniqueName] -\n *          A unique, developer assigned name of this HostedNumberOrder.\n * @param {string} [opts.email] - Email.\n * @param {string|list} [opts.ccEmails] - A list of emails.\n * @param {hosted_number_order.status} [opts.status] -\n *          The Status of this HostedNumberOrder.\n * @param {string} [opts.verificationCode] - A verification code.\n * @param {hosted_number_order.verification_type} [opts.verificationType] -\n *          Verification Type.\n * @param {string} [opts.verificationDocumentSid] - Verification Document Sid\n * @param {string} [opts.extension] -\n *          Digits to dial after connecting the verification call.\n * @param {number} [opts.callDelay] -\n *          The number of seconds, between 0 and 60, to delay before initiating the verification call.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'UniqueName': _.get(opts, 'uniqueName'),\n    'Email': _.get(opts, 'email'),\n    'CcEmails': serialize.map(_.get(opts, 'ccEmails'), function (e) {\n      return e;\n    }),\n    'Status': _.get(opts, 'status'),\n    'VerificationCode': _.get(opts, 'verificationCode'),\n    'VerificationType': _.get(opts, 'verificationType'),\n    'VerificationDocumentSid': _.get(opts, 'verificationDocumentSid'),\n    'Extension': _.get(opts, 'extension'),\n    'CallDelay': _.get(opts, 'callDelay')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new HostedNumberOrderInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nHostedNumberOrderContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  HostedNumberOrderList: HostedNumberOrderList,\n  HostedNumberOrderPage: HostedNumberOrderPage,\n  HostedNumberOrderInstance: HostedNumberOrderInstance,\n  HostedNumberOrderContext: HostedNumberOrderContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/rest/preview/hosted_numbers/hostedNumberOrder.js"],"names":["Q","require","_","util","Page","deserialize","serialize","values","HostedNumberOrderList","HostedNumberOrderPage","HostedNumberOrderInstance","HostedNumberOrderContext","version","HostedNumberOrderListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","create","phoneNumber","smsCapability","bool","map","e","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","incomingPhoneNumberSid","incoming_phone_number_sid","addressSid","address_sid","signingDocumentSid","signing_document_sid","phone_number","capabilities","friendlyName","friendly_name","uniqueName","unique_name","status","failureReason","failure_reason","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","verificationAttempts","integer","verification_attempts","email","ccEmails","cc_emails","url","verificationType","verification_type","verificationDocumentSid","verification_document_sid","extension","callDelay","call_delay","verificationCode","verification_code","verificationCallSids","verification_call_sids","_context","undefined","Object","defineProperty","fetch","_proxy","remove","update","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar HostedNumberOrderList;\nvar HostedNumberOrderPage;\nvar HostedNumberOrderInstance;\nvar HostedNumberOrderContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the HostedNumberOrderList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderList\n *\n * @param {Twilio.Preview.HostedNumbers} version - Version of the resource\n */\n/* jshint ignore:end */\nHostedNumberOrderList = function HostedNumberOrderList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function hostedNumberOrders\n   * @memberof Twilio.Preview.HostedNumbers#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.HostedNumbers.HostedNumberOrderContext}\n   */\n  /* jshint ignore:end */\n  function HostedNumberOrderListInstance(sid) {\n    return HostedNumberOrderListInstance.get(sid);\n  }\n\n  HostedNumberOrderListInstance._version = version;\n  // Path Solution\n  HostedNumberOrderListInstance._solution = {};\n  HostedNumberOrderListInstance._uri = `/HostedNumberOrders`;\n  /* jshint ignore:start */\n  /**\n   * Streams HostedNumberOrderInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {hosted_number_order.status} [opts.status] -\n   *          The Status of this HostedNumberOrder.\n   * @param {string} [opts.phoneNumber] - An E164 formatted phone number.\n   * @param {string} [opts.incomingPhoneNumberSid] - IncomingPhoneNumber sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists HostedNumberOrderInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {hosted_number_order.status} [opts.status] -\n   *          The Status of this HostedNumberOrder.\n   * @param {string} [opts.phoneNumber] - An E164 formatted phone number.\n   * @param {string} [opts.incomingPhoneNumberSid] - IncomingPhoneNumber sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of HostedNumberOrderInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {hosted_number_order.status} [opts.status] -\n   *          The Status of this HostedNumberOrder.\n   * @param {string} [opts.phoneNumber] - An E164 formatted phone number.\n   * @param {string} [opts.incomingPhoneNumberSid] - IncomingPhoneNumber sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Status': _.get(opts, 'status'),\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'IncomingPhoneNumberSid': _.get(opts, 'incomingPhoneNumberSid'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new HostedNumberOrderPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of HostedNumberOrderInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new HostedNumberOrderPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a HostedNumberOrderInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.phoneNumber - An E164 formatted phone number.\n   * @param {boolean} opts.smsCapability - Specify SMS capability to host.\n   * @param {string} [opts.accountSid] - Account Sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {string|list} [opts.ccEmails] - A list of emails.\n   * @param {string} [opts.smsUrl] - SMS URL.\n   * @param {string} [opts.smsMethod] - SMS Method.\n   * @param {string} [opts.smsFallbackUrl] - SMS Fallback URL.\n   * @param {string} [opts.smsFallbackMethod] - SMS Fallback Method.\n   * @param {string} [opts.statusCallbackUrl] - Status Callback URL.\n   * @param {string} [opts.statusCallbackMethod] - Status Callback Method.\n   * @param {string} [opts.smsApplicationSid] - SMS Application Sid.\n   * @param {string} [opts.addressSid] - Address sid.\n   * @param {string} [opts.email] - Email.\n   * @param {hosted_number_order.verification_type} [opts.verificationType] -\n   *          Verification Type.\n   * @param {string} [opts.verificationDocumentSid] - Verification Document Sid\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.phoneNumber)) {\n      throw new Error('Required parameter \"opts.phoneNumber\" missing.');\n    }\n    if (_.isUndefined(opts.smsCapability)) {\n      throw new Error('Required parameter \"opts.smsCapability\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'SmsCapability': serialize.bool(_.get(opts, 'smsCapability')),\n      'AccountSid': _.get(opts, 'accountSid'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'CcEmails': serialize.map(_.get(opts, 'ccEmails'), function(e) { return e; }),\n      'SmsUrl': _.get(opts, 'smsUrl'),\n      'SmsMethod': _.get(opts, 'smsMethod'),\n      'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n      'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n      'StatusCallbackUrl': _.get(opts, 'statusCallbackUrl'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n      'SmsApplicationSid': _.get(opts, 'smsApplicationSid'),\n      'AddressSid': _.get(opts, 'addressSid'),\n      'Email': _.get(opts, 'email'),\n      'VerificationType': _.get(opts, 'verificationType'),\n      'VerificationDocumentSid': _.get(opts, 'verificationDocumentSid')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new HostedNumberOrderInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a hosted_number_order\n   *\n   * @function get\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {string} sid - HostedNumberOrder sid.\n   *\n   * @returns {Twilio.Preview.HostedNumbers.HostedNumberOrderContext}\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.get = function get(sid) {\n    return new HostedNumberOrderContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  HostedNumberOrderListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return HostedNumberOrderListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the HostedNumberOrderPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderPage\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {HostedNumberOrderSolution} solution - Path solution\n *\n * @returns HostedNumberOrderPage\n */\n/* jshint ignore:end */\nHostedNumberOrderPage = function HostedNumberOrderPage(version, response,\n                                                        solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(HostedNumberOrderPage.prototype, Page.prototype);\nHostedNumberOrderPage.prototype.constructor = HostedNumberOrderPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of HostedNumberOrderInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderPage#\n *\n * @param {HostedNumberOrderPayload} payload - Payload response from the API\n *\n * @returns HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderPage.prototype.getInstance = function getInstance(payload) {\n  return new HostedNumberOrderInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nHostedNumberOrderPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nHostedNumberOrderPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the HostedNumberOrderContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderInstance\n *\n * @property {string} sid - HostedNumberOrder sid.\n * @property {string} accountSid - Account Sid.\n * @property {string} incomingPhoneNumberSid - IncomingPhoneNumber sid.\n * @property {string} addressSid - Address sid.\n * @property {string} signingDocumentSid - LOA document sid.\n * @property {string} phoneNumber - An E164 formatted phone number.\n * @property {PhoneNumberCapabilities} capabilities -\n *          A mapping of phone number capabilities.\n * @property {string} friendlyName - A human readable description of this resource.\n * @property {string} uniqueName -\n *          A unique, developer assigned name of this HostedNumberOrder.\n * @property {hosted_number_order.status} status -\n *          The Status of this HostedNumberOrder.\n * @property {string} failureReason -\n *          Why a hosted_number_order reached status \"action-required\"\n * @property {Date} dateCreated - The date this HostedNumberOrder was created.\n * @property {Date} dateUpdated - The date this HostedNumberOrder was updated.\n * @property {number} verificationAttempts -\n *          The number of attempts made to verify ownership of the phone number.\n * @property {string} email - Email.\n * @property {string} ccEmails - A list of emails.\n * @property {string} url - The URL of this HostedNumberOrder.\n * @property {hosted_number_order.verification_type} verificationType -\n *          The method used for verifying ownership of the number to be hosted.\n * @property {string} verificationDocumentSid - Verification Document Sid.\n * @property {string} extension -\n *          Phone extension to use for ownership verification call.\n * @property {number} callDelay -\n *          Seconds (0-30) to delay ownership verification call by.\n * @property {string} verificationCode -\n *          The digits passed during the ownership verification call.\n * @property {string} verificationCallSids -\n *          List of IDs for ownership verification calls.\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {HostedNumberOrderPayload} payload - The instance payload\n * @param {sid} sid - HostedNumberOrder sid.\n */\n/* jshint ignore:end */\nHostedNumberOrderInstance = function HostedNumberOrderInstance(version, payload,\n    sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.incomingPhoneNumberSid = payload.incoming_phone_number_sid; // jshint ignore:line\n  this.addressSid = payload.address_sid; // jshint ignore:line\n  this.signingDocumentSid = payload.signing_document_sid; // jshint ignore:line\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n  this.capabilities = payload.capabilities; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.failureReason = payload.failure_reason; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.verificationAttempts = deserialize.integer(payload.verification_attempts); // jshint ignore:line\n  this.email = payload.email; // jshint ignore:line\n  this.ccEmails = payload.cc_emails; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.verificationType = payload.verification_type; // jshint ignore:line\n  this.verificationDocumentSid = payload.verification_document_sid; // jshint ignore:line\n  this.extension = payload.extension; // jshint ignore:line\n  this.callDelay = deserialize.integer(payload.call_delay); // jshint ignore:line\n  this.verificationCode = payload.verification_code; // jshint ignore:line\n  this.verificationCallSids = payload.verification_call_sids; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(HostedNumberOrderInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new HostedNumberOrderContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a HostedNumberOrderInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a HostedNumberOrderInstance\n *\n * @function remove\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a HostedNumberOrderInstance\n *\n * @function update\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          A human readable description of this resource.\n * @param {string} [opts.uniqueName] -\n *          A unique, developer assigned name of this HostedNumberOrder.\n * @param {string} [opts.email] - Email.\n * @param {string|list} [opts.ccEmails] - A list of emails.\n * @param {hosted_number_order.status} [opts.status] -\n *          The Status of this HostedNumberOrder.\n * @param {string} [opts.verificationCode] - A verification code.\n * @param {hosted_number_order.verification_type} [opts.verificationType] -\n *          Verification Type.\n * @param {string} [opts.verificationDocumentSid] - Verification Document Sid\n * @param {string} [opts.extension] -\n *          Digits to dial after connecting the verification call.\n * @param {number} [opts.callDelay] -\n *          The number of seconds, between 0 and 60, to delay before initiating the verification call.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nHostedNumberOrderInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nHostedNumberOrderInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the HostedNumberOrderContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderContext\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {sid} sid - HostedNumberOrder sid.\n */\n/* jshint ignore:end */\nHostedNumberOrderContext = function HostedNumberOrderContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/HostedNumberOrders/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a HostedNumberOrderInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new HostedNumberOrderInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a HostedNumberOrderInstance\n *\n * @function remove\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a HostedNumberOrderInstance\n *\n * @function update\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          A human readable description of this resource.\n * @param {string} [opts.uniqueName] -\n *          A unique, developer assigned name of this HostedNumberOrder.\n * @param {string} [opts.email] - Email.\n * @param {string|list} [opts.ccEmails] - A list of emails.\n * @param {hosted_number_order.status} [opts.status] -\n *          The Status of this HostedNumberOrder.\n * @param {string} [opts.verificationCode] - A verification code.\n * @param {hosted_number_order.verification_type} [opts.verificationType] -\n *          Verification Type.\n * @param {string} [opts.verificationDocumentSid] - Verification Document Sid\n * @param {string} [opts.extension] -\n *          Digits to dial after connecting the verification call.\n * @param {number} [opts.callDelay] -\n *          The number of seconds, between 0 and 60, to delay before initiating the verification call.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'UniqueName': _.get(opts, 'uniqueName'),\n    'Email': _.get(opts, 'email'),\n    'CcEmails': serialize.map(_.get(opts, 'ccEmails'), function(e) { return e; }),\n    'Status': _.get(opts, 'status'),\n    'VerificationCode': _.get(opts, 'verificationCode'),\n    'VerificationType': _.get(opts, 'verificationType'),\n    'VerificationDocumentSid': _.get(opts, 'verificationDocumentSid'),\n    'Extension': _.get(opts, 'extension'),\n    'CallDelay': _.get(opts, 'callDelay')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new HostedNumberOrderInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nHostedNumberOrderContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nHostedNumberOrderContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  HostedNumberOrderList: HostedNumberOrderList,\n  HostedNumberOrderPage: HostedNumberOrderPage,\n  HostedNumberOrderInstance: HostedNumberOrderInstance,\n  HostedNumberOrderContext: HostedNumberOrderContext\n};\n"]},"metadata":{},"sourceType":"module"}