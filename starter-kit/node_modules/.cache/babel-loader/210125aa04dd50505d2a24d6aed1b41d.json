{"ast":null,"code":"// Generated by CoffeeScript 2.4.1\n(function () {\n  // Copies all enumerable own properties from `sources` to `target`\n  var assign,\n      getValue,\n      isArray,\n      isEmpty,\n      isFunction,\n      isObject,\n      isPlainObject,\n      hasProp = {}.hasOwnProperty;\n\n  assign = function (target, ...sources) {\n    var i, key, len, source;\n\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n\n    return target;\n  }; // Determines if `val` is a Function object\n\n\n  isFunction = function (val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  }; // Determines if `val` is an Object\n\n\n  isObject = function (val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  }; // Determines if `val` is an Array\n\n\n  isArray = function (val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  }; // Determines if `val` is an empty Array or an Object with no own properties\n\n\n  isEmpty = function (val) {\n    var key;\n\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n\n      return true;\n    }\n  }; // Determines if `val` is a plain Object\n\n\n  isPlainObject = function (val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && typeof ctor === 'function' && ctor instanceof ctor && Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object);\n  }; // Gets the primitive value of an object\n\n\n  getValue = function (obj) {\n    if (isFunction(obj.valueOf)) {\n      return obj.valueOf();\n    } else {\n      return obj;\n    }\n  };\n\n  module.exports.assign = assign;\n  module.exports.isFunction = isFunction;\n  module.exports.isObject = isObject;\n  module.exports.isArray = isArray;\n  module.exports.isEmpty = isEmpty;\n  module.exports.isPlainObject = isPlainObject;\n  module.exports.getValue = getValue;\n}).call(this);","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/xmlbuilder/lib/Utility.js"],"names":["assign","getValue","isArray","isEmpty","isFunction","isObject","isPlainObject","hasProp","hasOwnProperty","target","sources","i","key","len","source","Object","apply","arguments","length","call","val","prototype","toString","ref","Array","ctor","proto","getPrototypeOf","constructor","Function","obj","valueOf","module","exports"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 2.4.1\n(function() {\n  // Copies all enumerable own properties from `sources` to `target`\n  var assign, getValue, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function(target, ...sources) {\n    var i, key, len, source;\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  // Determines if `val` is a Function object\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  // Determines if `val` is an Object\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  // Determines if `val` is an Array\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  // Determines if `val` is an empty Array or an Object with no own properties\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  // Determines if `val` is a plain Object\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  // Gets the primitive value of an object\n  getValue = function(obj) {\n    if (isFunction(obj.valueOf)) {\n      return obj.valueOf();\n    } else {\n      return obj;\n    }\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n  module.exports.getValue = getValue;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"module"}