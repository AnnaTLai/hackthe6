{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar WorkersStatisticsList;\nvar WorkersStatisticsPage;\nvar WorkersStatisticsInstance;\nvar WorkersStatisticsContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkersStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid - The SID of the Workspace that contains the Worker\n */\n\n/* jshint ignore:end */\n\nWorkersStatisticsList = function WorkersStatisticsList(version, workspaceSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function statistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsContext}\n   */\n\n  /* jshint ignore:end */\n  function WorkersStatisticsListInstance(sid) {\n    return WorkersStatisticsListInstance.get(sid);\n  }\n\n  WorkersStatisticsListInstance._version = version; // Path Solution\n\n  WorkersStatisticsListInstance._solution = {\n    workspaceSid: workspaceSid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a workers_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsContext}\n   */\n\n  /* jshint ignore:end */\n\n  WorkersStatisticsListInstance.get = function get() {\n    return new WorkersStatisticsContext(this._version, this._solution.workspaceSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  WorkersStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WorkersStatisticsListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WorkersStatisticsListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkersStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkersStatisticsSolution} solution - Path solution\n *\n * @returns WorkersStatisticsPage\n */\n\n/* jshint ignore:end */\n\n\nWorkersStatisticsPage = function WorkersStatisticsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WorkersStatisticsPage.prototype, Page.prototype);\n\nWorkersStatisticsPage.prototype.constructor = WorkersStatisticsPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of WorkersStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsPage#\n *\n * @param {WorkersStatisticsPayload} payload - Payload response from the API\n *\n * @returns WorkersStatisticsInstance\n */\n\n/* jshint ignore:end */\n\nWorkersStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new WorkersStatisticsInstance(this._version, payload, this._solution.workspaceSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkersStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nWorkersStatisticsPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkersStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsInstance\n *\n * @property {object} realtime -\n *          An object that contains the real-time statistics for the Worker\n * @property {object} cumulative -\n *          An object that contains the cumulative statistics for the Worker\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} workspaceSid -\n *          The SID of the Workspace that contains the Worker\n * @property {string} url - The absolute URL of the Worker statistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {WorkersStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The SID of the Workspace that contains the Worker\n */\n\n/* jshint ignore:end */\n\n\nWorkersStatisticsInstance = function WorkersStatisticsInstance(version, payload, workspaceSid) {\n  this._version = version; // Marshaled Properties\n\n  this.realtime = payload.realtime; // jshint ignore:line\n\n  this.cumulative = payload.cumulative; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    workspaceSid: workspaceSid\n  };\n};\n\nObject.defineProperty(WorkersStatisticsInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new WorkersStatisticsContext(this._version, this._solution.workspaceSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a WorkersStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {Date} [opts.endDate] -\n *          Only calculate statistics from this date and time and earlier\n * @param {string} [opts.taskQueueSid] -\n *          The SID of the TaskQueue for which to fetch Worker statistics\n * @param {string} [opts.taskQueueName] -\n *          The friendly_name of the TaskQueue for which to fetch Worker statistics\n * @param {string} [opts.friendlyName] -\n *          Only include Workers with `friendly_name` values that match this parameter\n * @param {string} [opts.taskChannel] -\n *          Only calculate statistics on this TaskChannel\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkersStatisticsInstance\n */\n\n/* jshint ignore:end */\n\nWorkersStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkersStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nWorkersStatisticsInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkersStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The SID of the Workspace with the Worker to fetch\n */\n\n/* jshint ignore:end */\n\n\nWorkersStatisticsContext = function WorkersStatisticsContext(version, workspaceSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    workspaceSid: workspaceSid\n  };\n  this._uri = `/Workspaces/${workspaceSid}/Workers/Statistics`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a WorkersStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {Date} [opts.endDate] -\n *          Only calculate statistics from this date and time and earlier\n * @param {string} [opts.taskQueueSid] -\n *          The SID of the TaskQueue for which to fetch Worker statistics\n * @param {string} [opts.taskQueueName] -\n *          The friendly_name of the TaskQueue for which to fetch Worker statistics\n * @param {string} [opts.friendlyName] -\n *          Only include Workers with `friendly_name` values that match this parameter\n * @param {string} [opts.taskChannel] -\n *          Only calculate statistics on this TaskChannel\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkersStatisticsInstance\n */\n\n/* jshint ignore:end */\n\n\nWorkersStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Minutes': _.get(opts, 'minutes'),\n    'StartDate': serialize.iso8601DateTime(_.get(opts, 'startDate')),\n    'EndDate': serialize.iso8601DateTime(_.get(opts, 'endDate')),\n    'TaskQueueSid': _.get(opts, 'taskQueueSid'),\n    'TaskQueueName': _.get(opts, 'taskQueueName'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'TaskChannel': _.get(opts, 'taskChannel')\n  });\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new WorkersStatisticsInstance(this._version, payload, this._solution.workspaceSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkersStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWorkersStatisticsContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WorkersStatisticsList: WorkersStatisticsList,\n  WorkersStatisticsPage: WorkersStatisticsPage,\n  WorkersStatisticsInstance: WorkersStatisticsInstance,\n  WorkersStatisticsContext: WorkersStatisticsContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/rest/taskrouter/v1/workspace/worker/workersStatistics.js"],"names":["Q","require","_","util","Page","serialize","values","WorkersStatisticsList","WorkersStatisticsPage","WorkersStatisticsInstance","WorkersStatisticsContext","version","workspaceSid","WorkersStatisticsListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","realtime","cumulative","accountSid","account_sid","workspace_sid","url","_context","undefined","Object","defineProperty","fetch","opts","callback","_proxy","_uri","deferred","defer","data","of","iso8601DateTime","promise","uri","method","params","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar WorkersStatisticsList;\nvar WorkersStatisticsPage;\nvar WorkersStatisticsInstance;\nvar WorkersStatisticsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkersStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid - The SID of the Workspace that contains the Worker\n */\n/* jshint ignore:end */\nWorkersStatisticsList = function WorkersStatisticsList(version, workspaceSid) {\n  /* jshint ignore:start */\n  /**\n   * @function statistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsContext}\n   */\n  /* jshint ignore:end */\n  function WorkersStatisticsListInstance(sid) {\n    return WorkersStatisticsListInstance.get(sid);\n  }\n\n  WorkersStatisticsListInstance._version = version;\n  // Path Solution\n  WorkersStatisticsListInstance._solution = {workspaceSid: workspaceSid};\n  /* jshint ignore:start */\n  /**\n   * Constructs a workers_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsContext}\n   */\n  /* jshint ignore:end */\n  WorkersStatisticsListInstance.get = function get() {\n    return new WorkersStatisticsContext(this._version, this._solution.workspaceSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  WorkersStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WorkersStatisticsListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WorkersStatisticsListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkersStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkersStatisticsSolution} solution - Path solution\n *\n * @returns WorkersStatisticsPage\n */\n/* jshint ignore:end */\nWorkersStatisticsPage = function WorkersStatisticsPage(version, response,\n                                                        solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WorkersStatisticsPage.prototype, Page.prototype);\nWorkersStatisticsPage.prototype.constructor = WorkersStatisticsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of WorkersStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsPage#\n *\n * @param {WorkersStatisticsPayload} payload - Payload response from the API\n *\n * @returns WorkersStatisticsInstance\n */\n/* jshint ignore:end */\nWorkersStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new WorkersStatisticsInstance(this._version, payload, this._solution.workspaceSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkersStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkersStatisticsPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkersStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsInstance\n *\n * @property {object} realtime -\n *          An object that contains the real-time statistics for the Worker\n * @property {object} cumulative -\n *          An object that contains the cumulative statistics for the Worker\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} workspaceSid -\n *          The SID of the Workspace that contains the Worker\n * @property {string} url - The absolute URL of the Worker statistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {WorkersStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The SID of the Workspace that contains the Worker\n */\n/* jshint ignore:end */\nWorkersStatisticsInstance = function WorkersStatisticsInstance(version, payload,\n    workspaceSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.realtime = payload.realtime; // jshint ignore:line\n  this.cumulative = payload.cumulative; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {workspaceSid: workspaceSid, };\n};\n\nObject.defineProperty(WorkersStatisticsInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new WorkersStatisticsContext(this._version, this._solution.workspaceSid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a WorkersStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {Date} [opts.endDate] -\n *          Only calculate statistics from this date and time and earlier\n * @param {string} [opts.taskQueueSid] -\n *          The SID of the TaskQueue for which to fetch Worker statistics\n * @param {string} [opts.taskQueueName] -\n *          The friendly_name of the TaskQueue for which to fetch Worker statistics\n * @param {string} [opts.friendlyName] -\n *          Only include Workers with `friendly_name` values that match this parameter\n * @param {string} [opts.taskChannel] -\n *          Only calculate statistics on this TaskChannel\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkersStatisticsInstance\n */\n/* jshint ignore:end */\nWorkersStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkersStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkersStatisticsInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkersStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The SID of the Workspace with the Worker to fetch\n */\n/* jshint ignore:end */\nWorkersStatisticsContext = function WorkersStatisticsContext(version,\n    workspaceSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {workspaceSid: workspaceSid, };\n  this._uri = `/Workspaces/${workspaceSid}/Workers/Statistics`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a WorkersStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {Date} [opts.endDate] -\n *          Only calculate statistics from this date and time and earlier\n * @param {string} [opts.taskQueueSid] -\n *          The SID of the TaskQueue for which to fetch Worker statistics\n * @param {string} [opts.taskQueueName] -\n *          The friendly_name of the TaskQueue for which to fetch Worker statistics\n * @param {string} [opts.friendlyName] -\n *          Only include Workers with `friendly_name` values that match this parameter\n * @param {string} [opts.taskChannel] -\n *          Only calculate statistics on this TaskChannel\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkersStatisticsInstance\n */\n/* jshint ignore:end */\nWorkersStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Minutes': _.get(opts, 'minutes'),\n    'StartDate': serialize.iso8601DateTime(_.get(opts, 'startDate')),\n    'EndDate': serialize.iso8601DateTime(_.get(opts, 'endDate')),\n    'TaskQueueSid': _.get(opts, 'taskQueueSid'),\n    'TaskQueueName': _.get(opts, 'taskQueueName'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'TaskChannel': _.get(opts, 'taskChannel')\n  });\n\n  var promise = this._version.fetch({uri: this._uri, method: 'GET', params: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new WorkersStatisticsInstance(\n      this._version,\n      payload,\n      this._solution.workspaceSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersStatisticsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkersStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWorkersStatisticsContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WorkersStatisticsList: WorkersStatisticsList,\n  WorkersStatisticsPage: WorkersStatisticsPage,\n  WorkersStatisticsInstance: WorkersStatisticsInstance,\n  WorkersStatisticsContext: WorkersStatisticsContext\n};\n"]},"metadata":{},"sourceType":"module"}