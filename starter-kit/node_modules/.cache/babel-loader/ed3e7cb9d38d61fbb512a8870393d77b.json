{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar StreamMessageList;\nvar StreamMessagePage;\nvar StreamMessageInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the StreamMessageList\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncStreamContext.StreamMessageList\n *\n * @param {Twilio.Sync.V1} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @param {string} streamSid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\nStreamMessageList = function StreamMessageList(version, serviceSid, streamSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function streamMessages\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncStreamContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Sync.V1.ServiceContext.SyncStreamContext.StreamMessageContext}\n   */\n\n  /* jshint ignore:end */\n  function StreamMessageListInstance(sid) {\n    return StreamMessageListInstance.get(sid);\n  }\n\n  StreamMessageListInstance._version = version; // Path Solution\n\n  StreamMessageListInstance._solution = {\n    serviceSid: serviceSid,\n    streamSid: streamSid\n  };\n  StreamMessageListInstance._uri = `/Services/${serviceSid}/Streams/${streamSid}/Messages`;\n  /* jshint ignore:start */\n\n  /**\n   * create a StreamMessageInstance\n   *\n   * @function create\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncStreamContext.StreamMessageList#\n   *\n   * @param {object} opts - Options for request\n   * @param {object} opts.data -\n   *          A JSON string that represents an arbitrary, schema-less object that makes up the Stream Message body\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed StreamMessageInstance\n   */\n\n  /* jshint ignore:end */\n\n  StreamMessageListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.data)) {\n      throw new Error('Required parameter \"opts.data\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Data': serialize.object(_.get(opts, 'data'))\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new StreamMessageInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncStreamContext.StreamMessageList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  StreamMessageListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  StreamMessageListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return StreamMessageListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the StreamMessagePage\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncStreamContext.StreamMessagePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {StreamMessageSolution} solution - Path solution\n *\n * @returns StreamMessagePage\n */\n\n/* jshint ignore:end */\n\n\nStreamMessagePage = function StreamMessagePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(StreamMessagePage.prototype, Page.prototype);\n\nStreamMessagePage.prototype.constructor = StreamMessagePage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of StreamMessageInstance\n *\n * @function getInstance\n * @memberof Twilio.Sync.V1.ServiceContext.SyncStreamContext.StreamMessagePage#\n *\n * @param {StreamMessagePayload} payload - Payload response from the API\n *\n * @returns StreamMessageInstance\n */\n\n/* jshint ignore:end */\n\nStreamMessagePage.prototype.getInstance = function getInstance(payload) {\n  return new StreamMessageInstance(this._version, payload, this._solution.serviceSid, this._solution.streamSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncStreamContext.StreamMessagePage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nStreamMessagePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nStreamMessagePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the StreamMessageContext\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncStreamContext.StreamMessageInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {object} data - Stream Message body\n *\n * @param {V1} version - Version of the resource\n * @param {StreamMessagePayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @param {sid} streamSid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nStreamMessageInstance = function StreamMessageInstance(version, payload, serviceSid, streamSid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.data = payload.data; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid,\n    streamSid: streamSid\n  };\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncStreamContext.StreamMessageInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nStreamMessageInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nStreamMessageInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  StreamMessageList: StreamMessageList,\n  StreamMessagePage: StreamMessagePage,\n  StreamMessageInstance: StreamMessageInstance\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/sync/v1/service/syncStream/streamMessage.js"],"names":["Q","require","_","util","Page","serialize","values","StreamMessageList","StreamMessagePage","StreamMessageInstance","version","serviceSid","streamSid","StreamMessageListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","data","deferred","defer","of","object","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","_context","undefined","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar StreamMessageList;\nvar StreamMessagePage;\nvar StreamMessageInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the StreamMessageList\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncStreamContext.StreamMessageList\n *\n * @param {Twilio.Sync.V1} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @param {string} streamSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nStreamMessageList = function StreamMessageList(version, serviceSid, streamSid) {\n  /* jshint ignore:start */\n  /**\n   * @function streamMessages\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncStreamContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Sync.V1.ServiceContext.SyncStreamContext.StreamMessageContext}\n   */\n  /* jshint ignore:end */\n  function StreamMessageListInstance(sid) {\n    return StreamMessageListInstance.get(sid);\n  }\n\n  StreamMessageListInstance._version = version;\n  // Path Solution\n  StreamMessageListInstance._solution = {serviceSid: serviceSid, streamSid: streamSid};\n  StreamMessageListInstance._uri = `/Services/${serviceSid}/Streams/${streamSid}/Messages`;\n  /* jshint ignore:start */\n  /**\n   * create a StreamMessageInstance\n   *\n   * @function create\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncStreamContext.StreamMessageList#\n   *\n   * @param {object} opts - Options for request\n   * @param {object} opts.data -\n   *          A JSON string that represents an arbitrary, schema-less object that makes up the Stream Message body\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed StreamMessageInstance\n   */\n  /* jshint ignore:end */\n  StreamMessageListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.data)) {\n      throw new Error('Required parameter \"opts.data\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({'Data': serialize.object(_.get(opts, 'data'))});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new StreamMessageInstance(this._version, payload));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncStreamContext.StreamMessageList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  StreamMessageListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  StreamMessageListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return StreamMessageListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the StreamMessagePage\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncStreamContext.StreamMessagePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {StreamMessageSolution} solution - Path solution\n *\n * @returns StreamMessagePage\n */\n/* jshint ignore:end */\nStreamMessagePage = function StreamMessagePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(StreamMessagePage.prototype, Page.prototype);\nStreamMessagePage.prototype.constructor = StreamMessagePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of StreamMessageInstance\n *\n * @function getInstance\n * @memberof Twilio.Sync.V1.ServiceContext.SyncStreamContext.StreamMessagePage#\n *\n * @param {StreamMessagePayload} payload - Payload response from the API\n *\n * @returns StreamMessageInstance\n */\n/* jshint ignore:end */\nStreamMessagePage.prototype.getInstance = function getInstance(payload) {\n  return new StreamMessageInstance(\n    this._version,\n    payload,\n    this._solution.serviceSid,\n    this._solution.streamSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncStreamContext.StreamMessagePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nStreamMessagePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nStreamMessagePage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the StreamMessageContext\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncStreamContext.StreamMessageInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {object} data - Stream Message body\n *\n * @param {V1} version - Version of the resource\n * @param {StreamMessagePayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @param {sid} streamSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nStreamMessageInstance = function StreamMessageInstance(version, payload,\n                                                        serviceSid, streamSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.data = payload.data; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {serviceSid: serviceSid, streamSid: streamSid, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncStreamContext.StreamMessageInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nStreamMessageInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nStreamMessageInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  StreamMessageList: StreamMessageList,\n  StreamMessagePage: StreamMessagePage,\n  StreamMessageInstance: StreamMessageInstance\n};\n"]},"metadata":{},"sourceType":"script"}