{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar SyncMapItemList;\nvar SyncMapItemPage;\nvar SyncMapItemInstance;\nvar SyncMapItemContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the SyncMapItemList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList\n *\n * @param {Twilio.Preview.Sync} version - Version of the resource\n * @param {string} serviceSid - The service_sid\n * @param {string} mapSid - The map_sid\n */\n\n/* jshint ignore:end */\n\nSyncMapItemList = function SyncMapItemList(version, serviceSid, mapSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function syncMapItems\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext}\n   */\n\n  /* jshint ignore:end */\n  function SyncMapItemListInstance(sid) {\n    return SyncMapItemListInstance.get(sid);\n  }\n\n  SyncMapItemListInstance._version = version; // Path Solution\n\n  SyncMapItemListInstance._solution = {\n    serviceSid: serviceSid,\n    mapSid: mapSid\n  };\n  SyncMapItemListInstance._uri = `/Services/${serviceSid}/Maps/${mapSid}/Items`;\n  /* jshint ignore:start */\n\n  /**\n   * create a SyncMapItemInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.key - The key\n   * @param {object} opts.data - The data\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed SyncMapItemInstance\n   */\n\n  /* jshint ignore:end */\n\n  SyncMapItemListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.key)) {\n      throw new Error('Required parameter \"opts.key\" missing.');\n    }\n\n    if (_.isUndefined(opts.data)) {\n      throw new Error('Required parameter \"opts.data\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Key': _.get(opts, 'key'),\n      'Data': serialize.object(_.get(opts, 'data'))\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncMapItemInstance(this._version, payload, this._solution.serviceSid, this._solution.mapSid, this._solution.key));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams SyncMapItemInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_map_item.query_result_order} [opts.order] - The order\n   * @param {string} [opts.from] - The from\n   * @param {sync_map_item.query_from_bound_type} [opts.bounds] - The bounds\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  SyncMapItemListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists SyncMapItemInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_map_item.query_result_order} [opts.order] - The order\n   * @param {string} [opts.from] - The from\n   * @param {sync_map_item.query_from_bound_type} [opts.bounds] - The bounds\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  SyncMapItemListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of SyncMapItemInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_map_item.query_result_order} [opts.order] - The order\n   * @param {string} [opts.from] - The from\n   * @param {sync_map_item.query_from_bound_type} [opts.bounds] - The bounds\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  SyncMapItemListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Order': _.get(opts, 'order'),\n      'From': _.get(opts, 'from'),\n      'Bounds': _.get(opts, 'bounds'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncMapItemPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of SyncMapItemInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  SyncMapItemListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncMapItemPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a sync_map_item\n   *\n   * @function get\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {string} key - The key\n   *\n   * @returns {Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  SyncMapItemListInstance.get = function get(key) {\n    return new SyncMapItemContext(this._version, this._solution.serviceSid, this._solution.mapSid, key);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  SyncMapItemListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SyncMapItemListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SyncMapItemListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SyncMapItemPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemPage\n *\n * @param {Sync} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SyncMapItemSolution} solution - Path solution\n *\n * @returns SyncMapItemPage\n */\n\n/* jshint ignore:end */\n\n\nSyncMapItemPage = function SyncMapItemPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SyncMapItemPage.prototype, Page.prototype);\n\nSyncMapItemPage.prototype.constructor = SyncMapItemPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of SyncMapItemInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemPage#\n *\n * @param {SyncMapItemPayload} payload - Payload response from the API\n *\n * @returns SyncMapItemInstance\n */\n\n/* jshint ignore:end */\n\nSyncMapItemPage.prototype.getInstance = function getInstance(payload) {\n  return new SyncMapItemInstance(this._version, payload, this._solution.serviceSid, this._solution.mapSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSyncMapItemPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nSyncMapItemPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SyncMapItemContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance\n *\n * @property {string} key - The key\n * @property {string} accountSid - The account_sid\n * @property {string} serviceSid - The service_sid\n * @property {string} mapSid - The map_sid\n * @property {string} url - The url\n * @property {string} revision - The revision\n * @property {object} data - The data\n * @property {Date} dateCreated - The date_created\n * @property {Date} dateUpdated - The date_updated\n * @property {string} createdBy - The created_by\n *\n * @param {Sync} version - Version of the resource\n * @param {SyncMapItemPayload} payload - The instance payload\n * @param {sid} serviceSid - The service_sid\n * @param {sid} mapSid - The map_sid\n * @param {string} key - The key\n */\n\n/* jshint ignore:end */\n\n\nSyncMapItemInstance = function SyncMapItemInstance(version, payload, serviceSid, mapSid, key) {\n  this._version = version; // Marshaled Properties\n\n  this.key = payload.key; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n\n  this.mapSid = payload.map_sid; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.revision = payload.revision; // jshint ignore:line\n\n  this.data = payload.data; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.createdBy = payload.created_by; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid,\n    mapSid: mapSid,\n    key: key || this.key\n  };\n};\n\nObject.defineProperty(SyncMapItemInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new SyncMapItemContext(this._version, this._solution.serviceSid, this._solution.mapSid, this._solution.key);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a SyncMapItemInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n\n/* jshint ignore:end */\n\nSyncMapItemInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a SyncMapItemInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n\n/* jshint ignore:end */\n\n\nSyncMapItemInstance.prototype.remove = function remove(opts, callback) {\n  return this._proxy.remove(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a SyncMapItemInstance\n *\n * @function update\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance#\n *\n * @param {object} opts - Options for request\n * @param {object} opts.data - The data\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n\n/* jshint ignore:end */\n\n\nSyncMapItemInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSyncMapItemInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nSyncMapItemInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SyncMapItemContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext\n *\n * @param {Sync} version - Version of the resource\n * @param {sid} serviceSid - The service_sid\n * @param {sid_like} mapSid - The map_sid\n * @param {string} key - The key\n */\n\n/* jshint ignore:end */\n\n\nSyncMapItemContext = function SyncMapItemContext(version, serviceSid, mapSid, key) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    serviceSid: serviceSid,\n    mapSid: mapSid,\n    key: key\n  };\n  this._uri = `/Services/${serviceSid}/Maps/${mapSid}/Items/${key}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a SyncMapItemInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n\n/* jshint ignore:end */\n\n\nSyncMapItemContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SyncMapItemInstance(this._version, payload, this._solution.serviceSid, this._solution.mapSid, this._solution.key));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a SyncMapItemInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n\n/* jshint ignore:end */\n\n\nSyncMapItemContext.prototype.remove = function remove(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var headers = values.of({\n    'If-Match': _.get(opts, 'ifMatch')\n  });\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE',\n    headers: headers\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a SyncMapItemInstance\n *\n * @function update\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext#\n *\n * @param {object} opts - Options for request\n * @param {object} opts.data - The data\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n\n/* jshint ignore:end */\n\n\nSyncMapItemContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n\n  if (_.isUndefined(opts.data)) {\n    throw new Error('Required parameter \"opts.data\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Data': serialize.object(_.get(opts, 'data'))\n  });\n  var headers = values.of({\n    'If-Match': _.get(opts, 'ifMatch')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data,\n    headers: headers\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SyncMapItemInstance(this._version, payload, this._solution.serviceSid, this._solution.mapSid, this._solution.key));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSyncMapItemContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nSyncMapItemContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SyncMapItemList: SyncMapItemList,\n  SyncMapItemPage: SyncMapItemPage,\n  SyncMapItemInstance: SyncMapItemInstance,\n  SyncMapItemContext: SyncMapItemContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/preview/sync/service/syncMap/syncMapItem.js"],"names":["Q","require","_","util","Page","deserialize","serialize","values","SyncMapItemList","SyncMapItemPage","SyncMapItemInstance","SyncMapItemContext","version","serviceSid","mapSid","SyncMapItemListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","key","data","deferred","defer","of","object","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","startsWith","accountSid","account_sid","service_sid","map_sid","url","revision","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","createdBy","created_by","_context","undefined","Object","defineProperty","fetch","_proxy","remove","update","headers","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar SyncMapItemList;\nvar SyncMapItemPage;\nvar SyncMapItemInstance;\nvar SyncMapItemContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncMapItemList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList\n *\n * @param {Twilio.Preview.Sync} version - Version of the resource\n * @param {string} serviceSid - The service_sid\n * @param {string} mapSid - The map_sid\n */\n/* jshint ignore:end */\nSyncMapItemList = function SyncMapItemList(version, serviceSid, mapSid) {\n  /* jshint ignore:start */\n  /**\n   * @function syncMapItems\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext}\n   */\n  /* jshint ignore:end */\n  function SyncMapItemListInstance(sid) {\n    return SyncMapItemListInstance.get(sid);\n  }\n\n  SyncMapItemListInstance._version = version;\n  // Path Solution\n  SyncMapItemListInstance._solution = {serviceSid: serviceSid, mapSid: mapSid};\n  SyncMapItemListInstance._uri = `/Services/${serviceSid}/Maps/${mapSid}/Items`;\n  /* jshint ignore:start */\n  /**\n   * create a SyncMapItemInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.key - The key\n   * @param {object} opts.data - The data\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed SyncMapItemInstance\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.key)) {\n      throw new Error('Required parameter \"opts.key\" missing.');\n    }\n    if (_.isUndefined(opts.data)) {\n      throw new Error('Required parameter \"opts.data\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({'Key': _.get(opts, 'key'), 'Data': serialize.object(_.get(opts, 'data'))});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncMapItemInstance(\n        this._version,\n        payload,\n        this._solution.serviceSid,\n        this._solution.mapSid,\n        this._solution.key\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams SyncMapItemInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_map_item.query_result_order} [opts.order] - The order\n   * @param {string} [opts.from] - The from\n   * @param {sync_map_item.query_from_bound_type} [opts.bounds] - The bounds\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists SyncMapItemInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_map_item.query_result_order} [opts.order] - The order\n   * @param {string} [opts.from] - The from\n   * @param {sync_map_item.query_from_bound_type} [opts.bounds] - The bounds\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of SyncMapItemInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_map_item.query_result_order} [opts.order] - The order\n   * @param {string} [opts.from] - The from\n   * @param {sync_map_item.query_from_bound_type} [opts.bounds] - The bounds\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Order': _.get(opts, 'order'),\n      'From': _.get(opts, 'from'),\n      'Bounds': _.get(opts, 'bounds'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncMapItemPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of SyncMapItemInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncMapItemPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a sync_map_item\n   *\n   * @function get\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {string} key - The key\n   *\n   * @returns {Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext}\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.get = function get(key) {\n    return new SyncMapItemContext(this._version, this._solution.serviceSid, this._solution.mapSid, key);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SyncMapItemListInstance[util.inspect.custom] = function inspect(depth, options)\n      {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SyncMapItemListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncMapItemPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemPage\n *\n * @param {Sync} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SyncMapItemSolution} solution - Path solution\n *\n * @returns SyncMapItemPage\n */\n/* jshint ignore:end */\nSyncMapItemPage = function SyncMapItemPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SyncMapItemPage.prototype, Page.prototype);\nSyncMapItemPage.prototype.constructor = SyncMapItemPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SyncMapItemInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemPage#\n *\n * @param {SyncMapItemPayload} payload - Payload response from the API\n *\n * @returns SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemPage.prototype.getInstance = function getInstance(payload) {\n  return new SyncMapItemInstance(\n    this._version,\n    payload,\n    this._solution.serviceSid,\n    this._solution.mapSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncMapItemPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSyncMapItemPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncMapItemContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance\n *\n * @property {string} key - The key\n * @property {string} accountSid - The account_sid\n * @property {string} serviceSid - The service_sid\n * @property {string} mapSid - The map_sid\n * @property {string} url - The url\n * @property {string} revision - The revision\n * @property {object} data - The data\n * @property {Date} dateCreated - The date_created\n * @property {Date} dateUpdated - The date_updated\n * @property {string} createdBy - The created_by\n *\n * @param {Sync} version - Version of the resource\n * @param {SyncMapItemPayload} payload - The instance payload\n * @param {sid} serviceSid - The service_sid\n * @param {sid} mapSid - The map_sid\n * @param {string} key - The key\n */\n/* jshint ignore:end */\nSyncMapItemInstance = function SyncMapItemInstance(version, payload, serviceSid,\n                                                    mapSid, key) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.key = payload.key; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.mapSid = payload.map_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.revision = payload.revision; // jshint ignore:line\n  this.data = payload.data; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.createdBy = payload.created_by; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {serviceSid: serviceSid, mapSid: mapSid, key: key || this.key, };\n};\n\nObject.defineProperty(SyncMapItemInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new SyncMapItemContext(\n          this._version,\n          this._solution.serviceSid,\n          this._solution.mapSid,\n          this._solution.key\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a SyncMapItemInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncMapItemInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemInstance.prototype.remove = function remove(opts, callback) {\n  return this._proxy.remove(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncMapItemInstance\n *\n * @function update\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance#\n *\n * @param {object} opts - Options for request\n * @param {object} opts.data - The data\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncMapItemInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSyncMapItemInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncMapItemContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext\n *\n * @param {Sync} version - Version of the resource\n * @param {sid} serviceSid - The service_sid\n * @param {sid_like} mapSid - The map_sid\n * @param {string} key - The key\n */\n/* jshint ignore:end */\nSyncMapItemContext = function SyncMapItemContext(version, serviceSid, mapSid,\n                                                  key) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {serviceSid: serviceSid, mapSid: mapSid, key: key, };\n  this._uri = `/Services/${serviceSid}/Maps/${mapSid}/Items/${key}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a SyncMapItemInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SyncMapItemInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.mapSid,\n      this._solution.key\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncMapItemInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemContext.prototype.remove = function remove(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var headers = values.of({'If-Match': _.get(opts, 'ifMatch')});\n\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE', headers: headers});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncMapItemInstance\n *\n * @function update\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext#\n *\n * @param {object} opts - Options for request\n * @param {object} opts.data - The data\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n  if (_.isUndefined(opts.data)) {\n    throw new Error('Required parameter \"opts.data\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({'Data': serialize.object(_.get(opts, 'data'))});\n  var headers = values.of({'If-Match': _.get(opts, 'ifMatch')});\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data, headers: headers});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SyncMapItemInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.mapSid,\n      this._solution.key\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncMapItemContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nSyncMapItemContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SyncMapItemList: SyncMapItemList,\n  SyncMapItemPage: SyncMapItemPage,\n  SyncMapItemInstance: SyncMapItemInstance,\n  SyncMapItemContext: SyncMapItemContext\n};\n"]},"metadata":{},"sourceType":"script"}