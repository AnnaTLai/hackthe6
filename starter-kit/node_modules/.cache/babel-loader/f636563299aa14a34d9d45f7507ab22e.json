{"ast":null,"code":"\"use strict\";\n\nvar Iteration = require(\"./iteration\");\n\nmodule.exports = ArrayIterator;\n\nfunction ArrayIterator(iterable, start, stop, step) {\n  this.array = iterable;\n  this.start = start || 0;\n  this.stop = stop || Infinity;\n  this.step = step || 1;\n}\n\nArrayIterator.prototype.next = function () {\n  var iteration;\n\n  if (this.start < Math.min(this.array.length, this.stop)) {\n    iteration = new Iteration(this.array[this.start], false, this.start);\n    this.start += this.step;\n  } else {\n    iteration = new Iteration(undefined, true);\n  }\n\n  return iteration;\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/pop-iterate/array-iterator.js"],"names":["Iteration","require","module","exports","ArrayIterator","iterable","start","stop","step","array","Infinity","prototype","next","iteration","Math","min","length","undefined"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,aAAjB;;AACA,SAASA,aAAT,CAAuBC,QAAvB,EAAiCC,KAAjC,EAAwCC,IAAxC,EAA8CC,IAA9C,EAAoD;AAChD,OAAKC,KAAL,GAAaJ,QAAb;AACA,OAAKC,KAAL,GAAaA,KAAK,IAAI,CAAtB;AACA,OAAKC,IAAL,GAAYA,IAAI,IAAIG,QAApB;AACA,OAAKF,IAAL,GAAYA,IAAI,IAAI,CAApB;AACH;;AAEDJ,aAAa,CAACO,SAAd,CAAwBC,IAAxB,GAA+B,YAAY;AACvC,MAAIC,SAAJ;;AACA,MAAI,KAAKP,KAAL,GAAaQ,IAAI,CAACC,GAAL,CAAS,KAAKN,KAAL,CAAWO,MAApB,EAA4B,KAAKT,IAAjC,CAAjB,EAAyD;AACrDM,IAAAA,SAAS,GAAG,IAAIb,SAAJ,CAAc,KAAKS,KAAL,CAAW,KAAKH,KAAhB,CAAd,EAAsC,KAAtC,EAA6C,KAAKA,KAAlD,CAAZ;AACA,SAAKA,KAAL,IAAc,KAAKE,IAAnB;AACH,GAHD,MAGO;AACHK,IAAAA,SAAS,GAAI,IAAIb,SAAJ,CAAciB,SAAd,EAAyB,IAAzB,CAAb;AACH;;AACD,SAAOJ,SAAP;AACH,CATD","sourcesContent":["\"use strict\";\n\nvar Iteration = require(\"./iteration\");\n\nmodule.exports = ArrayIterator;\nfunction ArrayIterator(iterable, start, stop, step) {\n    this.array = iterable;\n    this.start = start || 0;\n    this.stop = stop || Infinity;\n    this.step = step || 1;\n}\n\nArrayIterator.prototype.next = function () {\n    var iteration;\n    if (this.start < Math.min(this.array.length, this.stop)) {\n        iteration = new Iteration(this.array[this.start], false, this.start);\n        this.start += this.step;\n    } else {\n        iteration =  new Iteration(undefined, true);\n    }\n    return iteration;\n};\n\n"]},"metadata":{},"sourceType":"script"}