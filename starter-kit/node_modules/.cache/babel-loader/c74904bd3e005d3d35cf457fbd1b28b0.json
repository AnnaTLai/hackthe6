{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\n\nvar dayjs = require('dayjs');\n\nvar utc = require('dayjs/plugin/utc');\n\ndayjs.extend(utc);\n/**\n * @namespace deserialize\n */\n\nfunction parseDate(s, format) {\n  var m = dayjs.utc(s, format);\n\n  if (m.isValid()) {\n    return m.toDate();\n  }\n\n  return s;\n}\n\nfunction parseNumber(n, parser) {\n  var parsed = parser(n);\n\n  if (isNaN(parsed)) {\n    return n;\n  }\n\n  return parsed;\n}\n/**\n * @function iso8601Date\n * @memberOf deserialize\n * @description parse a string into a Date object\n *\n * @param  {string} s date string in YYYY-MM-DD format\n * @return {Date} Date object\n */\n\n\nfunction iso8601Date(s) {\n  return parseDate(s, 'YYYY-MM-DD');\n}\n/**\n * @function iso8601DateTime\n * @memberOf deserialize\n * @description parse a string into a Date object\n *\n * @param  {String} s date string in YYYY-MM-DD[T]HH:mm:ss[Z] format\n * @return {Date} Date object\n */\n\n\nfunction iso8601DateTime(s) {\n  return parseDate(s, 'YYYY-MM-DD[T]HH:mm:ss[Z]');\n}\n/**\n * @function rfc2822DateTime\n * @memberOf deserialize\n * @description parse a string into a Date object\n *\n * @param  {String} s date string in ddd, DD MMM YYYY HH:mm:ss [+0000] format\n * @return {Date} Date object\n */\n\n\nfunction rfc2822DateTime(s) {\n  return parseDate(s, 'ddd, DD MMM YYYY HH:mm:ss [+0000]');\n}\n/**\n * @function decimal\n * @memberOf deserialize\n * @description parse a string into a decimal\n *\n * @param  {string} d decimal value as string\n * @return {number} number object\n */\n\n\nfunction decimal(d) {\n  return parseNumber(d, parseFloat);\n}\n/**\n * @function integer\n * @memberOf deserialize\n * @description parse a string into a integer\n *\n * @param  {string} i integer value as string\n * @return {number} number object\n */\n\n\nfunction integer(i) {\n  return parseNumber(i, _.parseInt);\n}\n\nmodule.exports = {\n  iso8601Date: iso8601Date,\n  iso8601DateTime: iso8601DateTime,\n  rfc2822DateTime: rfc2822DateTime,\n  decimal: decimal,\n  integer: integer\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/base/deserialize.js"],"names":["_","require","dayjs","utc","extend","parseDate","s","format","m","isValid","toDate","parseNumber","n","parser","parsed","isNaN","iso8601Date","iso8601DateTime","rfc2822DateTime","decimal","d","parseFloat","integer","i","parseInt","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAf;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,kBAAD,CAAjB;;AAEAC,KAAK,CAACE,MAAN,CAAaD,GAAb;AAEA;AACA;AACA;;AAEA,SAASE,SAAT,CAAmBC,CAAnB,EAAsBC,MAAtB,EAA8B;AAC5B,MAAIC,CAAC,GAAGN,KAAK,CAACC,GAAN,CAAUG,CAAV,EAAaC,MAAb,CAAR;;AACA,MAAIC,CAAC,CAACC,OAAF,EAAJ,EAAiB;AACf,WAAOD,CAAC,CAACE,MAAF,EAAP;AACD;;AAED,SAAOJ,CAAP;AACD;;AAED,SAASK,WAAT,CAAqBC,CAArB,EAAwBC,MAAxB,EAAgC;AAC9B,MAAIC,MAAM,GAAGD,MAAM,CAACD,CAAD,CAAnB;;AACA,MAAIG,KAAK,CAACD,MAAD,CAAT,EAAmB;AACjB,WAAOF,CAAP;AACD;;AAED,SAAOE,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,WAAT,CAAqBV,CAArB,EAAwB;AACtB,SAAOD,SAAS,CAACC,CAAD,EAAI,YAAJ,CAAhB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASW,eAAT,CAAyBX,CAAzB,EAA4B;AAC1B,SAAOD,SAAS,CAACC,CAAD,EAAI,0BAAJ,CAAhB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASY,eAAT,CAAyBZ,CAAzB,EAA4B;AAC1B,SAAOD,SAAS,CAACC,CAAD,EAAI,mCAAJ,CAAhB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASa,OAAT,CAAiBC,CAAjB,EAAoB;AAClB,SAAOT,WAAW,CAACS,CAAD,EAAIC,UAAJ,CAAlB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,OAAT,CAAiBC,CAAjB,EAAoB;AAClB,SAAOZ,WAAW,CAACY,CAAD,EAAIvB,CAAC,CAACwB,QAAN,CAAlB;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACfV,EAAAA,WAAW,EAAEA,WADE;AAEfC,EAAAA,eAAe,EAAEA,eAFF;AAGfC,EAAAA,eAAe,EAAEA,eAHF;AAIfC,EAAAA,OAAO,EAAEA,OAJM;AAKfG,EAAAA,OAAO,EAAEA;AALM,CAAjB","sourcesContent":["'use strict';\n\nvar _ = require('lodash');\nvar dayjs = require('dayjs');\nvar utc = require('dayjs/plugin/utc');\n\ndayjs.extend(utc);\n\n/**\n * @namespace deserialize\n */\n\nfunction parseDate(s, format) {\n  var m = dayjs.utc(s, format);\n  if (m.isValid()) {\n    return m.toDate();\n  }\n\n  return s;\n}\n\nfunction parseNumber(n, parser) {\n  var parsed = parser(n);\n  if (isNaN(parsed)) {\n    return n;\n  }\n\n  return parsed;\n}\n\n/**\n * @function iso8601Date\n * @memberOf deserialize\n * @description parse a string into a Date object\n *\n * @param  {string} s date string in YYYY-MM-DD format\n * @return {Date} Date object\n */\nfunction iso8601Date(s) {\n  return parseDate(s, 'YYYY-MM-DD');\n}\n\n/**\n * @function iso8601DateTime\n * @memberOf deserialize\n * @description parse a string into a Date object\n *\n * @param  {String} s date string in YYYY-MM-DD[T]HH:mm:ss[Z] format\n * @return {Date} Date object\n */\nfunction iso8601DateTime(s) {\n  return parseDate(s, 'YYYY-MM-DD[T]HH:mm:ss[Z]');\n}\n\n/**\n * @function rfc2822DateTime\n * @memberOf deserialize\n * @description parse a string into a Date object\n *\n * @param  {String} s date string in ddd, DD MMM YYYY HH:mm:ss [+0000] format\n * @return {Date} Date object\n */\nfunction rfc2822DateTime(s) {\n  return parseDate(s, 'ddd, DD MMM YYYY HH:mm:ss [+0000]');\n}\n\n/**\n * @function decimal\n * @memberOf deserialize\n * @description parse a string into a decimal\n *\n * @param  {string} d decimal value as string\n * @return {number} number object\n */\nfunction decimal(d) {\n  return parseNumber(d, parseFloat);\n}\n\n/**\n * @function integer\n * @memberOf deserialize\n * @description parse a string into a integer\n *\n * @param  {string} i integer value as string\n * @return {number} number object\n */\nfunction integer(i) {\n  return parseNumber(i, _.parseInt);\n}\n\nmodule.exports = {\n  iso8601Date: iso8601Date,\n  iso8601DateTime: iso8601DateTime,\n  rfc2822DateTime: rfc2822DateTime,\n  decimal: decimal,\n  integer: integer,\n};\n"]},"metadata":{},"sourceType":"module"}