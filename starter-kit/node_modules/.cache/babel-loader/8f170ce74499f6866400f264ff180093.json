{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar SchemaVersionList = require('./schema/version').SchemaVersionList;\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar SchemaList;\nvar SchemaPage;\nvar SchemaInstance;\nvar SchemaContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the SchemaList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SchemaList\n *\n * @param {Twilio.Events.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nSchemaList = function SchemaList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function schemas\n   * @memberof Twilio.Events.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Events.V1.SchemaContext}\n   */\n\n  /* jshint ignore:end */\n  function SchemaListInstance(sid) {\n    return SchemaListInstance.get(sid);\n  }\n\n  SchemaListInstance._version = version; // Path Solution\n\n  SchemaListInstance._solution = {};\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a schema\n   *\n   * @function get\n   * @memberof Twilio.Events.V1.SchemaList#\n   *\n   * @param {string} id - The unique identifier of the schema.\n   *\n   * @returns {Twilio.Events.V1.SchemaContext}\n   */\n\n  /* jshint ignore:end */\n\n  SchemaListInstance.get = function get(id) {\n    return new SchemaContext(this._version, id);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Events.V1.SchemaList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  SchemaListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SchemaListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SchemaListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SchemaPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SchemaPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SchemaSolution} solution - Path solution\n *\n * @returns SchemaPage\n */\n\n/* jshint ignore:end */\n\n\nSchemaPage = function SchemaPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SchemaPage.prototype, Page.prototype);\n\nSchemaPage.prototype.constructor = SchemaPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of SchemaInstance\n *\n * @function getInstance\n * @memberof Twilio.Events.V1.SchemaPage#\n *\n * @param {SchemaPayload} payload - Payload response from the API\n *\n * @returns SchemaInstance\n */\n\n/* jshint ignore:end */\n\nSchemaPage.prototype.getInstance = function getInstance(payload) {\n  return new SchemaInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Events.V1.SchemaPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSchemaPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nSchemaPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SchemaContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SchemaInstance\n *\n * @property {string} id - Schema Identifier.\n * @property {string} url - The URL of this resource.\n * @property {string} links - Nested resource URLs.\n * @property {Date} latestVersionDateCreated -\n *          The date that the latest schema version was created.\n * @property {number} latestVersion - Latest schema version.\n *\n * @param {V1} version - Version of the resource\n * @param {SchemaPayload} payload - The instance payload\n * @param {string} id - The unique identifier of the schema.\n */\n\n/* jshint ignore:end */\n\n\nSchemaInstance = function SchemaInstance(version, payload, id) {\n  this._version = version; // Marshaled Properties\n\n  this.id = payload.id; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.links = payload.links; // jshint ignore:line\n\n  this.latestVersionDateCreated = deserialize.iso8601DateTime(payload.latest_version_date_created); // jshint ignore:line\n\n  this.latestVersion = deserialize.integer(payload.latest_version); // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    id: id || this.id\n  };\n};\n\nObject.defineProperty(SchemaInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new SchemaContext(this._version, this._solution.id);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a SchemaInstance\n *\n * @function fetch\n * @memberof Twilio.Events.V1.SchemaInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SchemaInstance\n */\n\n/* jshint ignore:end */\n\nSchemaInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Access the versions\n *\n * @function versions\n * @memberof Twilio.Events.V1.SchemaInstance#\n *\n * @returns {Twilio.Events.V1.SchemaContext.SchemaVersionList}\n */\n\n/* jshint ignore:end */\n\n\nSchemaInstance.prototype.versions = function versions() {\n  return this._proxy.versions;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Events.V1.SchemaInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSchemaInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nSchemaInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SchemaContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SchemaContext\n *\n * @property {Twilio.Events.V1.SchemaContext.SchemaVersionList} versions -\n *          versions resource\n *\n * @param {V1} version - Version of the resource\n * @param {string} id - The unique identifier of the schema.\n */\n\n/* jshint ignore:end */\n\n\nSchemaContext = function SchemaContext(version, id) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    id: id\n  };\n  this._uri = `/Schemas/${id}`; // Dependents\n\n  this._versions = undefined;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a SchemaInstance\n *\n * @function fetch\n * @memberof Twilio.Events.V1.SchemaContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SchemaInstance\n */\n\n/* jshint ignore:end */\n\n\nSchemaContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SchemaInstance(this._version, payload, this._solution.id));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(SchemaContext.prototype, 'versions', {\n  get: function () {\n    if (!this._versions) {\n      this._versions = new SchemaVersionList(this._version, this._solution.id);\n    }\n\n    return this._versions;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Events.V1.SchemaContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\nSchemaContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nSchemaContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SchemaList: SchemaList,\n  SchemaPage: SchemaPage,\n  SchemaInstance: SchemaInstance,\n  SchemaContext: SchemaContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/rest/events/v1/schema.js"],"names":["Q","require","_","util","Page","SchemaVersionList","deserialize","values","SchemaList","SchemaPage","SchemaInstance","SchemaContext","version","SchemaListInstance","sid","get","_version","_solution","id","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","url","links","latestVersionDateCreated","iso8601DateTime","latest_version_date_created","latestVersion","integer","latest_version","_context","undefined","Object","defineProperty","fetch","callback","_proxy","versions","_uri","_versions","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar SchemaVersionList = require('./schema/version').SchemaVersionList;\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar SchemaList;\nvar SchemaPage;\nvar SchemaInstance;\nvar SchemaContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the SchemaList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SchemaList\n *\n * @param {Twilio.Events.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nSchemaList = function SchemaList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function schemas\n   * @memberof Twilio.Events.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Events.V1.SchemaContext}\n   */\n  /* jshint ignore:end */\n  function SchemaListInstance(sid) {\n    return SchemaListInstance.get(sid);\n  }\n\n  SchemaListInstance._version = version;\n  // Path Solution\n  SchemaListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a schema\n   *\n   * @function get\n   * @memberof Twilio.Events.V1.SchemaList#\n   *\n   * @param {string} id - The unique identifier of the schema.\n   *\n   * @returns {Twilio.Events.V1.SchemaContext}\n   */\n  /* jshint ignore:end */\n  SchemaListInstance.get = function get(id) {\n    return new SchemaContext(this._version, id);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Events.V1.SchemaList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SchemaListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SchemaListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SchemaListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SchemaPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SchemaPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SchemaSolution} solution - Path solution\n *\n * @returns SchemaPage\n */\n/* jshint ignore:end */\nSchemaPage = function SchemaPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SchemaPage.prototype, Page.prototype);\nSchemaPage.prototype.constructor = SchemaPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SchemaInstance\n *\n * @function getInstance\n * @memberof Twilio.Events.V1.SchemaPage#\n *\n * @param {SchemaPayload} payload - Payload response from the API\n *\n * @returns SchemaInstance\n */\n/* jshint ignore:end */\nSchemaPage.prototype.getInstance = function getInstance(payload) {\n  return new SchemaInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Events.V1.SchemaPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSchemaPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSchemaPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SchemaContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SchemaInstance\n *\n * @property {string} id - Schema Identifier.\n * @property {string} url - The URL of this resource.\n * @property {string} links - Nested resource URLs.\n * @property {Date} latestVersionDateCreated -\n *          The date that the latest schema version was created.\n * @property {number} latestVersion - Latest schema version.\n *\n * @param {V1} version - Version of the resource\n * @param {SchemaPayload} payload - The instance payload\n * @param {string} id - The unique identifier of the schema.\n */\n/* jshint ignore:end */\nSchemaInstance = function SchemaInstance(version, payload, id) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.id = payload.id; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n  this.latestVersionDateCreated = deserialize.iso8601DateTime(payload.latest_version_date_created); // jshint ignore:line\n  this.latestVersion = deserialize.integer(payload.latest_version); // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {id: id || this.id, };\n};\n\nObject.defineProperty(SchemaInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new SchemaContext(this._version, this._solution.id);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a SchemaInstance\n *\n * @function fetch\n * @memberof Twilio.Events.V1.SchemaInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SchemaInstance\n */\n/* jshint ignore:end */\nSchemaInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the versions\n *\n * @function versions\n * @memberof Twilio.Events.V1.SchemaInstance#\n *\n * @returns {Twilio.Events.V1.SchemaContext.SchemaVersionList}\n */\n/* jshint ignore:end */\nSchemaInstance.prototype.versions = function versions() {\n  return this._proxy.versions;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Events.V1.SchemaInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSchemaInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSchemaInstance.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SchemaContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SchemaContext\n *\n * @property {Twilio.Events.V1.SchemaContext.SchemaVersionList} versions -\n *          versions resource\n *\n * @param {V1} version - Version of the resource\n * @param {string} id - The unique identifier of the schema.\n */\n/* jshint ignore:end */\nSchemaContext = function SchemaContext(version, id) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {id: id, };\n  this._uri = `/Schemas/${id}`;\n\n  // Dependents\n  this._versions = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a SchemaInstance\n *\n * @function fetch\n * @memberof Twilio.Events.V1.SchemaContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SchemaInstance\n */\n/* jshint ignore:end */\nSchemaContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SchemaInstance(this._version, payload, this._solution.id));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(SchemaContext.prototype,\n  'versions', {\n    get: function() {\n      if (!this._versions) {\n        this._versions = new SchemaVersionList(this._version, this._solution.id);\n      }\n      return this._versions;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Events.V1.SchemaContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSchemaContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nSchemaContext.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SchemaList: SchemaList,\n  SchemaPage: SchemaPage,\n  SchemaInstance: SchemaInstance,\n  SchemaContext: SchemaContext\n};\n"]},"metadata":{},"sourceType":"module"}