{"ast":null,"code":"// Generated by CoffeeScript 2.4.1\n(function () {\n  // Implements the DOMImplementation interface\n  var XMLDOMImplementation;\n  module.exports = XMLDOMImplementation = class XMLDOMImplementation {\n    // Tests if the DOM implementation implements a specific feature.\n    // `feature` package name of the feature to test. In Level 1, the\n    //           legal values are \"HTML\" and \"XML\" (case-insensitive).\n    // `version` version number of the package name to test. \n    //           In Level 1, this is the string \"1.0\". If the version is \n    //           not specified, supporting any version of the feature will \n    //           cause the method to return true.\n    hasFeature(feature, version) {\n      return true;\n    } // Creates a new document type declaration.\n    // `qualifiedName` qualified name of the document type to be created\n    // `publicId` public identifier of the external subset\n    // `systemId` system identifier of the external subset\n\n\n    createDocumentType(qualifiedName, publicId, systemId) {\n      throw new Error(\"This DOM method is not implemented.\");\n    } // Creates a new document.\n    // `namespaceURI` namespace URI of the document element to create\n    // `qualifiedName` the qualified name of the document to be created\n    // `doctype` the type of document to be created or null\n\n\n    createDocument(namespaceURI, qualifiedName, doctype) {\n      throw new Error(\"This DOM method is not implemented.\");\n    } // Creates a new HTML document.\n    // `title` document title\n\n\n    createHTMLDocument(title) {\n      throw new Error(\"This DOM method is not implemented.\");\n    } // Returns a specialized object which implements the specialized APIs \n    // of the specified feature and version.\n    // `feature` name of the feature requested.\n    // `version` version number of the feature to test\n\n\n    getFeature(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\");\n    }\n\n  };\n}).call(this);","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/xmlbuilder/lib/XMLDOMImplementation.js"],"names":["XMLDOMImplementation","module","exports","hasFeature","feature","version","createDocumentType","qualifiedName","publicId","systemId","Error","createDocument","namespaceURI","doctype","createHTMLDocument","title","getFeature","call"],"mappings":"AAAA;AACA,CAAC,YAAW;AACV;AACA,MAAIA,oBAAJ;AAEAC,EAAAA,MAAM,CAACC,OAAP,GAAiBF,oBAAoB,GAAG,MAAMA,oBAAN,CAA2B;AACjE;AAEA;AACA;AACA;AACA;AACA;AACA;AACAG,IAAAA,UAAU,CAACC,OAAD,EAAUC,OAAV,EAAmB;AAC3B,aAAO,IAAP;AACD,KAXgE,CAajE;AAEA;AACA;AACA;;;AACAC,IAAAA,kBAAkB,CAACC,aAAD,EAAgBC,QAAhB,EAA0BC,QAA1B,EAAoC;AACpD,YAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AACD,KApBgE,CAsBjE;AAEA;AACA;AACA;;;AACAC,IAAAA,cAAc,CAACC,YAAD,EAAeL,aAAf,EAA8BM,OAA9B,EAAuC;AACnD,YAAM,IAAIH,KAAJ,CAAU,qCAAV,CAAN;AACD,KA7BgE,CA+BjE;AAEA;;;AACAI,IAAAA,kBAAkB,CAACC,KAAD,EAAQ;AACxB,YAAM,IAAIL,KAAJ,CAAU,qCAAV,CAAN;AACD,KApCgE,CAsCjE;AACA;AAEA;AACA;;;AACAM,IAAAA,UAAU,CAACZ,OAAD,EAAUC,OAAV,EAAmB;AAC3B,YAAM,IAAIK,KAAJ,CAAU,qCAAV,CAAN;AACD;;AA7CgE,GAAnE;AAiDD,CArDD,EAqDGO,IArDH,CAqDQ,IArDR","sourcesContent":["// Generated by CoffeeScript 2.4.1\n(function() {\n  // Implements the DOMImplementation interface\n  var XMLDOMImplementation;\n\n  module.exports = XMLDOMImplementation = class XMLDOMImplementation {\n    // Tests if the DOM implementation implements a specific feature.\n\n    // `feature` package name of the feature to test. In Level 1, the\n    //           legal values are \"HTML\" and \"XML\" (case-insensitive).\n    // `version` version number of the package name to test. \n    //           In Level 1, this is the string \"1.0\". If the version is \n    //           not specified, supporting any version of the feature will \n    //           cause the method to return true.\n    hasFeature(feature, version) {\n      return true;\n    }\n\n    // Creates a new document type declaration.\n\n    // `qualifiedName` qualified name of the document type to be created\n    // `publicId` public identifier of the external subset\n    // `systemId` system identifier of the external subset\n    createDocumentType(qualifiedName, publicId, systemId) {\n      throw new Error(\"This DOM method is not implemented.\");\n    }\n\n    // Creates a new document.\n\n    // `namespaceURI` namespace URI of the document element to create\n    // `qualifiedName` the qualified name of the document to be created\n    // `doctype` the type of document to be created or null\n    createDocument(namespaceURI, qualifiedName, doctype) {\n      throw new Error(\"This DOM method is not implemented.\");\n    }\n\n    // Creates a new HTML document.\n\n    // `title` document title\n    createHTMLDocument(title) {\n      throw new Error(\"This DOM method is not implemented.\");\n    }\n\n    // Returns a specialized object which implements the specialized APIs \n    // of the specified feature and version.\n\n    // `feature` name of the feature requested.\n    // `version` version number of the feature to test\n    getFeature(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\");\n    }\n\n  };\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}