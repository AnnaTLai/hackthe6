{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar TwiML = require('./TwiML');\n/* jshint ignore:line */\n\n/* jshint ignore:start */\n\n/**\n * <Response> TwiML for Voice\n *\n * @constructor VoiceResponse\n */\n\n/* jshint ignore:end */\n\n\nfunction VoiceResponse() {\n  TwiML.call(this);\n  this._propertyName = 'response';\n}\n\nVoiceResponse.prototype = Object.create(TwiML.prototype);\nVoiceResponse.prototype.constructor = VoiceResponse;\n/* jshint ignore:start */\n\n/**\n * <Connect> TwiML Verb\n *\n * @function connect\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.action] - Action URL\n * @param {string} [attributes.method] - Action URL method\n *\n * @returns Connect\n */\n\n/* jshint ignore:end */\n\nVoiceResponse.prototype.connect = function connect(attributes) {\n  return new Connect(this.response.ele('Connect', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Dial> TwiML Verb\n *\n * @function dial\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.action] - Action URL\n * @param {string} [attributes.method] - Action URL method\n * @param {number} [attributes.timeout] - Time to wait for answer\n * @param {boolean} [attributes.hangupOnStar] - Hangup call on star press\n * @param {number} [attributes.timeLimit] - Max time length\n * @param {string} [attributes.callerId] - Caller ID to display\n * @param {dial.record} [attributes.record] - Record the call\n * @param {dial.trim} [attributes.trim] - Trim the recording\n * @param {string} [attributes.recordingStatusCallback] -\n *          Recording status callback URL\n * @param {string} [attributes.recordingStatusCallbackMethod] -\n *          Recording status callback URL method\n * @param {dial.recording_event} [attributes.recordingStatusCallbackEvent] -\n *          Recording status callback events\n * @param {boolean} [attributes.answerOnBridge] -\n *          Preserve the ringing behavior of the inbound call until the Dialed call picks up\n * @param {dial.ring_tone} [attributes.ringTone] -\n *          Ringtone allows you to override the ringback tone that Twilio will play back to the caller while executing the Dial\n * @param {dial.recording_track} [attributes.recordingTrack] -\n *          To indicate which audio track should be recorded\n * @param {boolean} [attributes.sequential] -\n *          Used to determine if child TwiML nouns should be dialed in order, one after the other (sequential) or dial all at once (parallel). Default is false, parallel\n * @param {string} [attributes.referUrl] -\n *          Webhook that will receive future SIP REFER requests\n * @param {string} [attributes.referMethod] -\n *          The HTTP method to use for the refer Webhook\n * @param {string} [number] - Phone number to dial\n *\n * @returns Dial\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.dial = function dial(attributes, number) {\n  return new Dial(this.response.ele('Dial', attributes, number));\n};\n/* jshint ignore:start */\n\n/**\n * <Echo> TwiML Verb\n *\n * @function echo\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n *\n * @returns Echo\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.echo = function echo(attributes) {\n  return new Echo(this.response.ele('Echo', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Enqueue> TwiML Noun\n *\n * @function enqueue\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.action] - Action URL\n * @param {string} [attributes.method] - Action URL method\n * @param {string} [attributes.waitUrl] - Wait URL\n * @param {string} [attributes.waitUrlMethod] - Wait URL method\n * @param {string} [attributes.workflowSid] - TaskRouter Workflow SID\n * @param {string} [name] - Friendly name\n *\n * @returns Enqueue\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.enqueue = function enqueue(attributes, name) {\n  return new Enqueue(this.response.ele('Enqueue', attributes, name));\n};\n/* jshint ignore:start */\n\n/**\n * <Gather> TwiML Verb\n *\n * @function gather\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {gather.input} [attributes.input] - Input type Twilio should accept\n * @param {string} [attributes.action] - Action URL\n * @param {string} [attributes.method] - Action URL method\n * @param {number} [attributes.timeout] - Time to wait to gather input\n * @param {string} [attributes.speechTimeout] -\n *          Time to wait to gather speech input and it should be either auto or a positive integer.\n * @param {number} [attributes.maxSpeechTime] - Max allowed time for speech input\n * @param {boolean} [attributes.profanityFilter] - Profanity Filter on speech\n * @param {string} [attributes.finishOnKey] - Finish gather on key\n * @param {number} [attributes.numDigits] - Number of digits to collect\n * @param {string} [attributes.partialResultCallback] - Partial result callback URL\n * @param {string} [attributes.partialResultCallbackMethod] -\n *          Partial result callback URL method\n * @param {gather.language} [attributes.language] - Language to use\n * @param {string} [attributes.hints] - Speech recognition hints\n * @param {boolean} [attributes.bargeIn] - Stop playing media upon speech\n * @param {boolean} [attributes.debug] - Allow debug for gather\n * @param {boolean} [attributes.actionOnEmptyResult] -\n *          Force webhook to the action URL event if there is no input\n * @param {gather.speech_model} [attributes.speechModel] -\n *          Specify the model that is best suited for your use case\n * @param {boolean} [attributes.enhanced] - Use enhanced speech model\n *\n * @returns Gather\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.gather = function gather(attributes) {\n  return new Gather(this.response.ele('Gather', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Hangup> TwiML Verb\n *\n * @function hangup\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n *\n * @returns Hangup\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.hangup = function hangup(attributes) {\n  return new Hangup(this.response.ele('Hangup', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Leave> TwiML Verb\n *\n * @function leave\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n *\n * @returns Leave\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.leave = function leave(attributes) {\n  return new Leave(this.response.ele('Leave', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Pause> TwiML Verb\n *\n * @function pause\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {number} [attributes.length] - Length in seconds to pause\n *\n * @returns Pause\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.pause = function pause(attributes) {\n  return new Pause(this.response.ele('Pause', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Play> TwiML Verb\n *\n * @function play\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {number} [attributes.loop] - Times to loop media\n * @param {string} [attributes.digits] - Play DTMF tones for digits\n * @param {url} [url] - Media URL\n *\n * @returns Play\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.play = function play(attributes, url) {\n  return new Play(this.response.ele('Play', attributes, url));\n};\n/* jshint ignore:start */\n\n/**\n * <Queue> TwiML Noun\n *\n * @function queue\n * @memberof VoiceResponse#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.url] - Action URL\n * @param {string} [attributes.method] - Action URL method\n * @param {string} [attributes.reservationSid] - TaskRouter Reservation SID\n * @param {string} [attributes.postWorkActivitySid] - TaskRouter Activity SID\n * @param {string} name - Queue name\n *\n * @returns Queue\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.queue = function queue(attributes, name) {\n  return new Queue(this.response.ele('Queue', attributes, name));\n};\n/* jshint ignore:start */\n\n/**\n * <Record> TwiML Verb\n *\n * @function record\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.action] - Action URL\n * @param {string} [attributes.method] - Action URL method\n * @param {number} [attributes.timeout] - Timeout to begin recording\n * @param {string} [attributes.finishOnKey] - Finish recording on key\n * @param {number} [attributes.maxLength] - Max time to record in seconds\n * @param {boolean} [attributes.playBeep] - Play beep\n * @param {record.trim} [attributes.trim] - Trim the recording\n * @param {string} [attributes.recordingStatusCallback] - Status callback URL\n * @param {string} [attributes.recordingStatusCallbackMethod] -\n *          Status callback URL method\n * @param {record.recording_event} [attributes.recordingStatusCallbackEvent] -\n *          Recording status callback events\n * @param {boolean} [attributes.transcribe] - Transcribe the recording\n * @param {string} [attributes.transcribeCallback] - Transcribe callback URL\n *\n * @returns Record\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.record = function record(attributes) {\n  return new Record(this.response.ele('Record', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Redirect> TwiML Verb\n *\n * @function redirect\n * @memberof VoiceResponse#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.method] - Redirect URL method\n * @param {url} url - Redirect URL\n *\n * @returns Redirect\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.redirect = function redirect(attributes, url) {\n  return new Redirect(this.response.ele('Redirect', attributes, url));\n};\n/* jshint ignore:start */\n\n/**\n * <Reject> TwiML Verb\n *\n * @function reject\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {reject.reason} [attributes.reason] - Rejection reason\n *\n * @returns Reject\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.reject = function reject(attributes) {\n  return new Reject(this.response.ele('Reject', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Say> TwiML Verb\n *\n * @function say\n * @memberof VoiceResponse#\n *\n * @param {object} attributes - TwiML attributes\n * @param {say.voice} [attributes.voice] - Voice to use\n * @param {number} [attributes.loop] - Times to loop message\n * @param {say.language} [attributes.language] - Message langauge\n * @param {string} message - Message to say\n *\n * @returns Say\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.say = function say(attributes, message) {\n  return new Say(this.response.ele('Say', attributes, message));\n};\n/* jshint ignore:start */\n\n/**\n * <Sms> TwiML Noun\n *\n * @function sms\n * @memberof VoiceResponse#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.to] - Number to send message to\n * @param {string} [attributes.from] - Number to send message from\n * @param {string} [attributes.action] - Action URL\n * @param {string} [attributes.method] - Action URL method\n * @param {string} [attributes.statusCallback] - Status callback URL\n * @param {string} message - Message body\n *\n * @returns Sms\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.sms = function sms(attributes, message) {\n  return new Sms(this.response.ele('Sms', attributes, message));\n};\n/* jshint ignore:start */\n\n/**\n * <Pay> Twiml Verb\n *\n * @function pay\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {pay.input} [attributes.input] - Input type Twilio should accept\n * @param {string} [attributes.action] - Action URL\n * @param {pay.bank_account_type} [attributes.bankAccountType] -\n *          Bank account type for ach transactions. If set, payment method attribute must be provided and value should be set to ach-debit. defaults to consumer-checking\n * @param {string} [attributes.statusCallback] - Status callback URL\n * @param {pay.status_callback_method} [attributes.statusCallbackMethod] -\n *          Status callback method\n * @param {number} [attributes.timeout] - Time to wait to gather input\n * @param {number} [attributes.maxAttempts] -\n *          Maximum number of allowed retries when gathering input\n * @param {boolean} [attributes.securityCode] - Prompt for security code\n * @param {string} [attributes.postalCode] -\n *          Prompt for postal code and it should be true/false or default postal code\n * @param {number} [attributes.minPostalCodeLength] -\n *          Prompt for minimum postal code length\n * @param {string} [attributes.paymentConnector] -\n *          Unique name for payment connector\n * @param {pay.payment_method} [attributes.paymentMethod] -\n *          Payment method to be used. defaults to credit-card\n * @param {pay.token_type} [attributes.tokenType] - Type of token\n * @param {string} [attributes.chargeAmount] -\n *          Amount to process. If value is greater than 0 then make the payment else create a payment token\n * @param {string} [attributes.currency] - Currency of the amount attribute\n * @param {string} [attributes.description] - Details regarding the payment\n * @param {pay.valid_card_types} [attributes.validCardTypes] -\n *          Comma separated accepted card types\n * @param {pay.language} [attributes.language] - Language to use\n *\n * @returns Pay\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.pay = function pay(attributes) {\n  return new Pay(this.response.ele('Pay', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Prompt> Twiml Verb\n *\n * @function prompt\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {prompt.for} [attributes.for_] - Name of the payment source data element\n * @param {prompt.error_type} [attributes.errorType] - Type of error\n * @param {prompt.card_type} [attributes.cardType] - Type of the credit card\n * @param {number} [attributes.attempt] - Current attempt count\n *\n * @returns Prompt\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.prompt = function prompt(attributes) {\n  return new Prompt(this.response.ele('Prompt', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Start> TwiML Verb\n *\n * @function start\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.action] - Action URL\n * @param {string} [attributes.method] - Action URL method\n *\n * @returns Start\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.start = function start(attributes) {\n  return new Start(this.response.ele('Start', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Stop> TwiML Verb\n *\n * @function stop\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n *\n * @returns Stop\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.stop = function stop(attributes) {\n  return new Stop(this.response.ele('Stop', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Refer> TwiML Verb\n *\n * @function refer\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.action] - Action URL\n * @param {string} [attributes.method] - Action URL method\n *\n * @returns Refer\n */\n\n/* jshint ignore:end */\n\n\nVoiceResponse.prototype.refer = function refer(attributes) {\n  return new Refer(this.response.ele('Refer', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Refer> TwiML Verb\n *\n * @constructor Refer\n *\n * @param {object} refer - <Refer> TwiML Verb\n */\n\n/* jshint ignore:end */\n\n\nfunction Refer(refer) {\n  this.refer = refer;\n  this._propertyName = 'refer';\n}\n\nRefer.prototype = Object.create(TwiML.prototype);\nRefer.prototype.constructor = Refer;\n/* jshint ignore:start */\n\n/**\n * <Sip> TwiML Noun used in <Refer>\n *\n * @function sip\n * @memberof Refer#\n *\n * @param {object} attributes - TwiML attributes\n * @param {url} sipUrl - SIP URL\n *\n * @returns ReferSip\n */\n\n/* jshint ignore:end */\n\nRefer.prototype.sip = function sip(attributes, sipUrl) {\n  return new ReferSip(this.refer.ele('Sip', attributes, sipUrl));\n};\n/* jshint ignore:start */\n\n/**\n * <Sip> TwiML Noun used in <Refer>\n *\n * @function referSip\n * @memberof Refer#\n * @deprecated - Use sip() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {url} sipUrl - SIP URL\n *\n * @returns ReferSip\n */\n\n/* jshint ignore:end */\n\n\nRefer.prototype.referSip = util.deprecate(function referSip(attributes, sipUrl) {\n  return this.sip(attributes, sipUrl);\n}, 'referSip() is deprecated. Use sip() instead.');\n/* jshint ignore:start */\n\n/**\n * <Sip> TwiML Noun used in <Refer>\n *\n * @constructor ReferSip\n *\n * @param {object} referSip - <Sip> TwiML Noun used in <Refer>\n */\n\n/* jshint ignore:end */\n\nfunction ReferSip(referSip) {\n  this.referSip = referSip;\n  this._propertyName = 'referSip';\n}\n\nReferSip.prototype = Object.create(TwiML.prototype);\nReferSip.prototype.constructor = ReferSip;\n/* jshint ignore:start */\n\n/**\n * <Stop> TwiML Verb\n *\n * @constructor Stop\n *\n * @param {object} stop - <Stop> TwiML Verb\n */\n\n/* jshint ignore:end */\n\nfunction Stop(stop) {\n  this.stop = stop;\n  this._propertyName = 'stop';\n}\n\nStop.prototype = Object.create(TwiML.prototype);\nStop.prototype.constructor = Stop;\n/* jshint ignore:start */\n\n/**\n * <Stream> TwiML Noun\n *\n * @function stream\n * @memberof Stop#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.name] - Friendly name given to the Stream\n * @param {string} [attributes.connectorName] - Unique name for Stream Connector\n * @param {string} [attributes.url] -\n *          URL of the remote service where the Stream is routed\n * @param {stream.track} [attributes.track] -\n *          Track to be streamed to remote service\n * @param {string} [attributes.statusCallback] - Status Callback URL\n * @param {stream.status_callback_method} [attributes.statusCallbackMethod] -\n *          Status Callback URL method\n *\n * @returns Stream\n */\n\n/* jshint ignore:end */\n\nStop.prototype.stream = function stream(attributes) {\n  return new Stream(this.stop.ele('Stream', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Siprec> TwiML Noun\n *\n * @function siprec\n * @memberof Stop#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.name] - Friendly name given to SIPREC\n * @param {string} [attributes.connectorName] - Unique name for Connector\n * @param {siprec.track} [attributes.track] -\n *          Track to be streamed to remote service\n *\n * @returns Siprec\n */\n\n/* jshint ignore:end */\n\n\nStop.prototype.siprec = function siprec(attributes) {\n  return new Siprec(this.stop.ele('Siprec', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Siprec> TwiML Noun\n *\n * @constructor Siprec\n *\n * @param {object} siprec - <Siprec> TwiML Noun\n */\n\n/* jshint ignore:end */\n\n\nfunction Siprec(siprec) {\n  this.siprec = siprec;\n  this._propertyName = 'siprec';\n}\n\nSiprec.prototype = Object.create(TwiML.prototype);\nSiprec.prototype.constructor = Siprec;\n/* jshint ignore:start */\n\n/**\n * <Parameter> TwiML Noun\n *\n * @function parameter\n * @memberof Siprec#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.name] - The name of the custom parameter\n * @param {string} [attributes.value] - The value of the custom parameter\n *\n * @returns Parameter\n */\n\n/* jshint ignore:end */\n\nSiprec.prototype.parameter = function parameter(attributes) {\n  return new Parameter(this.siprec.ele('Parameter', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Parameter> TwiML Noun\n *\n * @constructor Parameter\n *\n * @param {object} parameter - <Parameter> TwiML Noun\n */\n\n/* jshint ignore:end */\n\n\nfunction Parameter(parameter) {\n  this.parameter = parameter;\n  this._propertyName = 'parameter';\n}\n\nParameter.prototype = Object.create(TwiML.prototype);\nParameter.prototype.constructor = Parameter;\n/* jshint ignore:start */\n\n/**\n * <Stream> TwiML Noun\n *\n * @constructor Stream\n *\n * @param {object} stream - <Stream> TwiML Noun\n */\n\n/* jshint ignore:end */\n\nfunction Stream(stream) {\n  this.stream = stream;\n  this._propertyName = 'stream';\n}\n\nStream.prototype = Object.create(TwiML.prototype);\nStream.prototype.constructor = Stream;\n/* jshint ignore:start */\n\n/**\n * <Parameter> TwiML Noun\n *\n * @function parameter\n * @memberof Stream#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.name] - The name of the custom parameter\n * @param {string} [attributes.value] - The value of the custom parameter\n *\n * @returns Parameter\n */\n\n/* jshint ignore:end */\n\nStream.prototype.parameter = function parameter(attributes) {\n  return new Parameter(this.stream.ele('Parameter', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Start> TwiML Verb\n *\n * @constructor Start\n *\n * @param {object} start - <Start> TwiML Verb\n */\n\n/* jshint ignore:end */\n\n\nfunction Start(start) {\n  this.start = start;\n  this._propertyName = 'start';\n}\n\nStart.prototype = Object.create(TwiML.prototype);\nStart.prototype.constructor = Start;\n/* jshint ignore:start */\n\n/**\n * <Stream> TwiML Noun\n *\n * @function stream\n * @memberof Start#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.name] - Friendly name given to the Stream\n * @param {string} [attributes.connectorName] - Unique name for Stream Connector\n * @param {string} [attributes.url] -\n *          URL of the remote service where the Stream is routed\n * @param {stream.track} [attributes.track] -\n *          Track to be streamed to remote service\n * @param {string} [attributes.statusCallback] - Status Callback URL\n * @param {stream.status_callback_method} [attributes.statusCallbackMethod] -\n *          Status Callback URL method\n *\n * @returns Stream\n */\n\n/* jshint ignore:end */\n\nStart.prototype.stream = function stream(attributes) {\n  return new Stream(this.start.ele('Stream', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Siprec> TwiML Noun\n *\n * @function siprec\n * @memberof Start#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.name] - Friendly name given to SIPREC\n * @param {string} [attributes.connectorName] - Unique name for Connector\n * @param {siprec.track} [attributes.track] -\n *          Track to be streamed to remote service\n *\n * @returns Siprec\n */\n\n/* jshint ignore:end */\n\n\nStart.prototype.siprec = function siprec(attributes) {\n  return new Siprec(this.start.ele('Siprec', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Prompt> Twiml Verb\n *\n * @constructor Prompt\n *\n * @param {object} prompt - <Prompt> Twiml Verb\n */\n\n/* jshint ignore:end */\n\n\nfunction Prompt(prompt) {\n  this.prompt = prompt;\n  this._propertyName = 'prompt';\n}\n\nPrompt.prototype = Object.create(TwiML.prototype);\nPrompt.prototype.constructor = Prompt;\n/* jshint ignore:start */\n\n/**\n * <Say> TwiML Verb\n *\n * @function say\n * @memberof Prompt#\n *\n * @param {object} attributes - TwiML attributes\n * @param {say.voice} [attributes.voice] - Voice to use\n * @param {number} [attributes.loop] - Times to loop message\n * @param {say.language} [attributes.language] - Message langauge\n * @param {string} message - Message to say\n *\n * @returns Say\n */\n\n/* jshint ignore:end */\n\nPrompt.prototype.say = function say(attributes, message) {\n  return new Say(this.prompt.ele('Say', attributes, message));\n};\n/* jshint ignore:start */\n\n/**\n * <Play> TwiML Verb\n *\n * @function play\n * @memberof Prompt#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {number} [attributes.loop] - Times to loop media\n * @param {string} [attributes.digits] - Play DTMF tones for digits\n * @param {url} [url] - Media URL\n *\n * @returns Play\n */\n\n/* jshint ignore:end */\n\n\nPrompt.prototype.play = function play(attributes, url) {\n  return new Play(this.prompt.ele('Play', attributes, url));\n};\n/* jshint ignore:start */\n\n/**\n * <Pause> TwiML Verb\n *\n * @function pause\n * @memberof Prompt#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {number} [attributes.length] - Length in seconds to pause\n *\n * @returns Pause\n */\n\n/* jshint ignore:end */\n\n\nPrompt.prototype.pause = function pause(attributes) {\n  return new Pause(this.prompt.ele('Pause', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Pause> TwiML Verb\n *\n * @constructor Pause\n *\n * @param {object} pause - <Pause> TwiML Verb\n */\n\n/* jshint ignore:end */\n\n\nfunction Pause(pause) {\n  this.pause = pause;\n  this._propertyName = 'pause';\n}\n\nPause.prototype = Object.create(TwiML.prototype);\nPause.prototype.constructor = Pause;\n/* jshint ignore:start */\n\n/**\n * <Play> TwiML Verb\n *\n * @constructor Play\n *\n * @param {object} play - <Play> TwiML Verb\n */\n\n/* jshint ignore:end */\n\nfunction Play(play) {\n  this.play = play;\n  this._propertyName = 'play';\n}\n\nPlay.prototype = Object.create(TwiML.prototype);\nPlay.prototype.constructor = Play;\n/* jshint ignore:start */\n\n/**\n * <Say> TwiML Verb\n *\n * @constructor Say\n *\n * @param {object} say - <Say> TwiML Verb\n */\n\n/* jshint ignore:end */\n\nfunction Say(say) {\n  this.say = say;\n  this._propertyName = 'say';\n}\n\nSay.prototype = Object.create(TwiML.prototype);\nSay.prototype.constructor = Say;\n/* jshint ignore:start */\n\n/**\n * Adding a Pause in <Say>\n *\n * @function break_\n * @memberof Say#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {ssml_break.strength} [attributes.strength] -\n *          Set a pause based on strength\n * @param {string} [attributes.time] -\n *          Set a pause to a specific length of time in seconds or milliseconds, available values: [number]s, [number]ms\n *\n * @returns SsmlBreak\n */\n\n/* jshint ignore:end */\n\nSay.prototype.break_ = function break_(attributes) {\n  return new SsmlBreak(this.say.ele('break', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * Adding a Pause in <Say>\n *\n * @function ssmlBreak\n * @memberof Say#\n * @deprecated - Use break_() instead.\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {ssml_break.strength} [attributes.strength] -\n *          Set a pause based on strength\n * @param {string} [attributes.time] -\n *          Set a pause to a specific length of time in seconds or milliseconds, available values: [number]s, [number]ms\n *\n * @returns SsmlBreak\n */\n\n/* jshint ignore:end */\n\n\nSay.prototype.ssmlBreak = util.deprecate(function ssmlBreak(attributes) {\n  return this.break_(attributes);\n}, 'ssmlBreak() is deprecated. Use break_() instead.');\n/* jshint ignore:start */\n\n/**\n * Emphasizing Words in <Say>\n *\n * @function emphasis\n * @memberof Say#\n *\n * @param {object} attributes - TwiML attributes\n * @param {ssml_emphasis.level} [attributes.level] - Specify the degree of emphasis\n * @param {string} words - Words to emphasize\n *\n * @returns SsmlEmphasis\n */\n\n/* jshint ignore:end */\n\nSay.prototype.emphasis = function emphasis(attributes, words) {\n  return new SsmlEmphasis(this.say.ele('emphasis', attributes, words));\n};\n/* jshint ignore:start */\n\n/**\n * Emphasizing Words in <Say>\n *\n * @function ssmlEmphasis\n * @memberof Say#\n * @deprecated - Use emphasis() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {ssml_emphasis.level} [attributes.level] - Specify the degree of emphasis\n * @param {string} words - Words to emphasize\n *\n * @returns SsmlEmphasis\n */\n\n/* jshint ignore:end */\n\n\nSay.prototype.ssmlEmphasis = util.deprecate(function ssmlEmphasis(attributes, words) {\n  return this.emphasis(attributes, words);\n}, 'ssmlEmphasis() is deprecated. Use emphasis() instead.');\n/* jshint ignore:start */\n\n/**\n * Specifying Another Language for Specific Words in <Say>\n *\n * @function lang\n * @memberof Say#\n *\n * @param {object} attributes - TwiML attributes\n * @param {ssml_lang.xml_lang} [attributes.xml:lang] - Specify the language\n * @param {string} words - Words to speak\n *\n * @returns SsmlLang\n */\n\n/* jshint ignore:end */\n\nSay.prototype.lang = function lang(attributes, words) {\n  return new SsmlLang(this.say.ele('lang', attributes, words));\n};\n/* jshint ignore:start */\n\n/**\n * Specifying Another Language for Specific Words in <Say>\n *\n * @function ssmlLang\n * @memberof Say#\n * @deprecated - Use lang() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {ssml_lang.xml_lang} [attributes.xml:lang] - Specify the language\n * @param {string} words - Words to speak\n *\n * @returns SsmlLang\n */\n\n/* jshint ignore:end */\n\n\nSay.prototype.ssmlLang = util.deprecate(function ssmlLang(attributes, words) {\n  return this.lang(attributes, words);\n}, 'ssmlLang() is deprecated. Use lang() instead.');\n/* jshint ignore:start */\n\n/**\n * Adding a Pause Between Paragraphs in <Say>\n *\n * @function p\n * @memberof Say#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} words - Words to speak\n *\n * @returns SsmlP\n */\n\n/* jshint ignore:end */\n\nSay.prototype.p = function p(attributes, words) {\n  return new SsmlP(this.say.ele('p', attributes, words));\n};\n/* jshint ignore:start */\n\n/**\n * Adding a Pause Between Paragraphs in <Say>\n *\n * @function ssmlP\n * @memberof Say#\n * @deprecated - Use p() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} words - Words to speak\n *\n * @returns SsmlP\n */\n\n/* jshint ignore:end */\n\n\nSay.prototype.ssmlP = util.deprecate(function ssmlP(attributes, words) {\n  return this.p(attributes, words);\n}, 'ssmlP() is deprecated. Use p() instead.');\n/* jshint ignore:start */\n\n/**\n * Using Phonetic Pronunciation in <Say>\n *\n * @function phoneme\n * @memberof Say#\n *\n * @param {object} attributes - TwiML attributes\n * @param {ssml_phoneme.alphabet} [attributes.alphabet] -\n *          Specify the phonetic alphabet\n * @param {string} [attributes.ph] -\n *          Specifiy the phonetic symbols for pronunciation\n * @param {string} words - Words to speak\n *\n * @returns SsmlPhoneme\n */\n\n/* jshint ignore:end */\n\nSay.prototype.phoneme = function phoneme(attributes, words) {\n  return new SsmlPhoneme(this.say.ele('phoneme', attributes, words));\n};\n/* jshint ignore:start */\n\n/**\n * Using Phonetic Pronunciation in <Say>\n *\n * @function ssmlPhoneme\n * @memberof Say#\n * @deprecated - Use phoneme() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {ssml_phoneme.alphabet} [attributes.alphabet] -\n *          Specify the phonetic alphabet\n * @param {string} [attributes.ph] -\n *          Specifiy the phonetic symbols for pronunciation\n * @param {string} words - Words to speak\n *\n * @returns SsmlPhoneme\n */\n\n/* jshint ignore:end */\n\n\nSay.prototype.ssmlPhoneme = util.deprecate(function ssmlPhoneme(attributes, words) {\n  return this.phoneme(attributes, words);\n}, 'ssmlPhoneme() is deprecated. Use phoneme() instead.');\n/* jshint ignore:start */\n\n/**\n * Controling Volume, Speaking Rate, and Pitch in <Say>\n *\n * @function prosody\n * @memberof Say#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.volume] -\n *          Specify the volume, available values: default, silent, x-soft, soft, medium, loud, x-loud, +ndB, -ndB\n * @param {string} [attributes.rate] -\n *          Specify the rate, available values: x-slow, slow, medium, fast, x-fast, n%\n * @param {string} [attributes.pitch] -\n *          Specify the pitch, available values: default, x-low, low, medium, high, x-high, +n%, -n%\n * @param {string} words - Words to speak\n *\n * @returns SsmlProsody\n */\n\n/* jshint ignore:end */\n\nSay.prototype.prosody = function prosody(attributes, words) {\n  return new SsmlProsody(this.say.ele('prosody', attributes, words));\n};\n/* jshint ignore:start */\n\n/**\n * Controling Volume, Speaking Rate, and Pitch in <Say>\n *\n * @function ssmlProsody\n * @memberof Say#\n * @deprecated - Use prosody() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.volume] -\n *          Specify the volume, available values: default, silent, x-soft, soft, medium, loud, x-loud, +ndB, -ndB\n * @param {string} [attributes.rate] -\n *          Specify the rate, available values: x-slow, slow, medium, fast, x-fast, n%\n * @param {string} [attributes.pitch] -\n *          Specify the pitch, available values: default, x-low, low, medium, high, x-high, +n%, -n%\n * @param {string} words - Words to speak\n *\n * @returns SsmlProsody\n */\n\n/* jshint ignore:end */\n\n\nSay.prototype.ssmlProsody = util.deprecate(function ssmlProsody(attributes, words) {\n  return this.prosody(attributes, words);\n}, 'ssmlProsody() is deprecated. Use prosody() instead.');\n/* jshint ignore:start */\n\n/**\n * Adding A Pause Between Sentences in <Say>\n *\n * @function s\n * @memberof Say#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} words - Words to speak\n *\n * @returns SsmlS\n */\n\n/* jshint ignore:end */\n\nSay.prototype.s = function s(attributes, words) {\n  return new SsmlS(this.say.ele('s', attributes, words));\n};\n/* jshint ignore:start */\n\n/**\n * Adding A Pause Between Sentences in <Say>\n *\n * @function ssmlS\n * @memberof Say#\n * @deprecated - Use s() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} words - Words to speak\n *\n * @returns SsmlS\n */\n\n/* jshint ignore:end */\n\n\nSay.prototype.ssmlS = util.deprecate(function ssmlS(attributes, words) {\n  return this.s(attributes, words);\n}, 'ssmlS() is deprecated. Use s() instead.');\n/* jshint ignore:start */\n\n/**\n * Controlling How Special Types of Words Are Spoken in <Say>\n *\n * @function sayAs\n * @memberof Say#\n *\n * @param {object} attributes - TwiML attributes\n * @param {ssml_say_as.interpret_as} [attributes.interpret-\n *         as] - Specify the type of words are spoken\n * @param {ssml_say_as.role} [attributes.role] -\n *          Specify the format of the date when interpret-as is set to date\n * @param {string} words - Words to be interpreted\n *\n * @returns SsmlSayAs\n */\n\n/* jshint ignore:end */\n\nSay.prototype.sayAs = function sayAs(attributes, words) {\n  return new SsmlSayAs(this.say.ele('say-as', attributes, words));\n};\n/* jshint ignore:start */\n\n/**\n * Controlling How Special Types of Words Are Spoken in <Say>\n *\n * @function ssmlSayAs\n * @memberof Say#\n * @deprecated - Use sayAs() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {ssml_say_as.interpret_as} [attributes.interpret-\n *         as] - Specify the type of words are spoken\n * @param {ssml_say_as.role} [attributes.role] -\n *          Specify the format of the date when interpret-as is set to date\n * @param {string} words - Words to be interpreted\n *\n * @returns SsmlSayAs\n */\n\n/* jshint ignore:end */\n\n\nSay.prototype.ssmlSayAs = util.deprecate(function ssmlSayAs(attributes, words) {\n  return this.sayAs(attributes, words);\n}, 'ssmlSayAs() is deprecated. Use sayAs() instead.');\n/* jshint ignore:start */\n\n/**\n * Pronouncing Acronyms and Abbreviations in <Say>\n *\n * @function sub\n * @memberof Say#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.alias] -\n *          Substitute a different word (or pronunciation) for selected text such as an acronym or abbreviation\n * @param {string} words - Words to be substituted\n *\n * @returns SsmlSub\n */\n\n/* jshint ignore:end */\n\nSay.prototype.sub = function sub(attributes, words) {\n  return new SsmlSub(this.say.ele('sub', attributes, words));\n};\n/* jshint ignore:start */\n\n/**\n * Pronouncing Acronyms and Abbreviations in <Say>\n *\n * @function ssmlSub\n * @memberof Say#\n * @deprecated - Use sub() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.alias] -\n *          Substitute a different word (or pronunciation) for selected text such as an acronym or abbreviation\n * @param {string} words - Words to be substituted\n *\n * @returns SsmlSub\n */\n\n/* jshint ignore:end */\n\n\nSay.prototype.ssmlSub = util.deprecate(function ssmlSub(attributes, words) {\n  return this.sub(attributes, words);\n}, 'ssmlSub() is deprecated. Use sub() instead.');\n/* jshint ignore:start */\n\n/**\n * Improving Pronunciation by Specifying Parts of Speech in <Say>\n *\n * @function w\n * @memberof Say#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.role] -\n *          Customize the pronunciation of words by specifying the word’s part of speech or alternate meaning\n * @param {string} words - Words to speak\n *\n * @returns SsmlW\n */\n\n/* jshint ignore:end */\n\nSay.prototype.w = function w(attributes, words) {\n  return new SsmlW(this.say.ele('w', attributes, words));\n};\n/* jshint ignore:start */\n\n/**\n * Improving Pronunciation by Specifying Parts of Speech in <Say>\n *\n * @function ssmlW\n * @memberof Say#\n * @deprecated - Use w() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.role] -\n *          Customize the pronunciation of words by specifying the word’s part of speech or alternate meaning\n * @param {string} words - Words to speak\n *\n * @returns SsmlW\n */\n\n/* jshint ignore:end */\n\n\nSay.prototype.ssmlW = util.deprecate(function ssmlW(attributes, words) {\n  return this.w(attributes, words);\n}, 'ssmlW() is deprecated. Use w() instead.');\n/* jshint ignore:start */\n\n/**\n * Improving Pronunciation by Specifying Parts of Speech in <Say>\n *\n * @constructor SsmlW\n *\n * @param {object} ssmlW -\n *          Improving Pronunciation by Specifying Parts of Speech in <Say>\n */\n\n/* jshint ignore:end */\n\nfunction SsmlW(ssmlW) {\n  this.ssmlW = ssmlW;\n  this._propertyName = 'ssmlW';\n}\n\nSsmlW.prototype = Object.create(TwiML.prototype);\nSsmlW.prototype.constructor = SsmlW;\n/* jshint ignore:start */\n\n/**\n * Pronouncing Acronyms and Abbreviations in <Say>\n *\n * @constructor SsmlSub\n *\n * @param {object} ssmlSub - Pronouncing Acronyms and Abbreviations in <Say>\n */\n\n/* jshint ignore:end */\n\nfunction SsmlSub(ssmlSub) {\n  this.ssmlSub = ssmlSub;\n  this._propertyName = 'ssmlSub';\n}\n\nSsmlSub.prototype = Object.create(TwiML.prototype);\nSsmlSub.prototype.constructor = SsmlSub;\n/* jshint ignore:start */\n\n/**\n * Controlling How Special Types of Words Are Spoken in <Say>\n *\n * @constructor SsmlSayAs\n *\n * @param {object} ssmlSayAs -\n *          Controlling How Special Types of Words Are Spoken in <Say>\n */\n\n/* jshint ignore:end */\n\nfunction SsmlSayAs(ssmlSayAs) {\n  this.ssmlSayAs = ssmlSayAs;\n  this._propertyName = 'ssmlSayAs';\n}\n\nSsmlSayAs.prototype = Object.create(TwiML.prototype);\nSsmlSayAs.prototype.constructor = SsmlSayAs;\n/* jshint ignore:start */\n\n/**\n * Adding A Pause Between Sentences in <Say>\n *\n * @constructor SsmlS\n *\n * @param {object} ssmlS - Adding A Pause Between Sentences in <Say>\n */\n\n/* jshint ignore:end */\n\nfunction SsmlS(ssmlS) {\n  this.ssmlS = ssmlS;\n  this._propertyName = 'ssmlS';\n}\n\nSsmlS.prototype = Object.create(TwiML.prototype);\nSsmlS.prototype.constructor = SsmlS;\n/* jshint ignore:start */\n\n/**\n * Controling Volume, Speaking Rate, and Pitch in <Say>\n *\n * @constructor SsmlProsody\n *\n * @param {object} ssmlProsody -\n *          Controling Volume, Speaking Rate, and Pitch in <Say>\n */\n\n/* jshint ignore:end */\n\nfunction SsmlProsody(ssmlProsody) {\n  this.ssmlProsody = ssmlProsody;\n  this._propertyName = 'ssmlProsody';\n}\n\nSsmlProsody.prototype = Object.create(TwiML.prototype);\nSsmlProsody.prototype.constructor = SsmlProsody;\n/* jshint ignore:start */\n\n/**\n * Using Phonetic Pronunciation in <Say>\n *\n * @constructor SsmlPhoneme\n *\n * @param {object} ssmlPhoneme - Using Phonetic Pronunciation in <Say>\n */\n\n/* jshint ignore:end */\n\nfunction SsmlPhoneme(ssmlPhoneme) {\n  this.ssmlPhoneme = ssmlPhoneme;\n  this._propertyName = 'ssmlPhoneme';\n}\n\nSsmlPhoneme.prototype = Object.create(TwiML.prototype);\nSsmlPhoneme.prototype.constructor = SsmlPhoneme;\n/* jshint ignore:start */\n\n/**\n * Adding a Pause Between Paragraphs in <Say>\n *\n * @constructor SsmlP\n *\n * @param {object} ssmlP - Adding a Pause Between Paragraphs in <Say>\n */\n\n/* jshint ignore:end */\n\nfunction SsmlP(ssmlP) {\n  this.ssmlP = ssmlP;\n  this._propertyName = 'ssmlP';\n}\n\nSsmlP.prototype = Object.create(TwiML.prototype);\nSsmlP.prototype.constructor = SsmlP;\n/* jshint ignore:start */\n\n/**\n * Specifying Another Language for Specific Words in <Say>\n *\n * @constructor SsmlLang\n *\n * @param {object} ssmlLang -\n *          Specifying Another Language for Specific Words in <Say>\n */\n\n/* jshint ignore:end */\n\nfunction SsmlLang(ssmlLang) {\n  this.ssmlLang = ssmlLang;\n  this._propertyName = 'ssmlLang';\n}\n\nSsmlLang.prototype = Object.create(TwiML.prototype);\nSsmlLang.prototype.constructor = SsmlLang;\n/* jshint ignore:start */\n\n/**\n * Emphasizing Words in <Say>\n *\n * @constructor SsmlEmphasis\n *\n * @param {object} ssmlEmphasis - Emphasizing Words in <Say>\n */\n\n/* jshint ignore:end */\n\nfunction SsmlEmphasis(ssmlEmphasis) {\n  this.ssmlEmphasis = ssmlEmphasis;\n  this._propertyName = 'ssmlEmphasis';\n}\n\nSsmlEmphasis.prototype = Object.create(TwiML.prototype);\nSsmlEmphasis.prototype.constructor = SsmlEmphasis;\n/* jshint ignore:start */\n\n/**\n * Adding a Pause in <Say>\n *\n * @constructor SsmlBreak\n *\n * @param {object} ssmlBreak - Adding a Pause in <Say>\n */\n\n/* jshint ignore:end */\n\nfunction SsmlBreak(ssmlBreak) {\n  this.ssmlBreak = ssmlBreak;\n  this._propertyName = 'ssmlBreak';\n}\n\nSsmlBreak.prototype = Object.create(TwiML.prototype);\nSsmlBreak.prototype.constructor = SsmlBreak;\n/* jshint ignore:start */\n\n/**\n * <Pay> Twiml Verb\n *\n * @constructor Pay\n *\n * @param {object} pay - <Pay> Twiml Verb\n */\n\n/* jshint ignore:end */\n\nfunction Pay(pay) {\n  this.pay = pay;\n  this._propertyName = 'pay';\n}\n\nPay.prototype = Object.create(TwiML.prototype);\nPay.prototype.constructor = Pay;\n/* jshint ignore:start */\n\n/**\n * <Prompt> Twiml Verb\n *\n * @function prompt\n * @memberof Pay#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {prompt.for} [attributes.for_] - Name of the payment source data element\n * @param {prompt.error_type} [attributes.errorType] - Type of error\n * @param {prompt.card_type} [attributes.cardType] - Type of the credit card\n * @param {number} [attributes.attempt] - Current attempt count\n *\n * @returns Prompt\n */\n\n/* jshint ignore:end */\n\nPay.prototype.prompt = function prompt(attributes) {\n  return new Prompt(this.pay.ele('Prompt', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Parameter> TwiML Noun\n *\n * @function parameter\n * @memberof Pay#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.name] - The name of the custom parameter\n * @param {string} [attributes.value] - The value of the custom parameter\n *\n * @returns Parameter\n */\n\n/* jshint ignore:end */\n\n\nPay.prototype.parameter = function parameter(attributes) {\n  return new Parameter(this.pay.ele('Parameter', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Sms> TwiML Noun\n *\n * @constructor Sms\n *\n * @param {object} sms - <Sms> TwiML Noun\n */\n\n/* jshint ignore:end */\n\n\nfunction Sms(sms) {\n  this.sms = sms;\n  this._propertyName = 'sms';\n}\n\nSms.prototype = Object.create(TwiML.prototype);\nSms.prototype.constructor = Sms;\n/* jshint ignore:start */\n\n/**\n * <Reject> TwiML Verb\n *\n * @constructor Reject\n *\n * @param {object} reject - <Reject> TwiML Verb\n */\n\n/* jshint ignore:end */\n\nfunction Reject(reject) {\n  this.reject = reject;\n  this._propertyName = 'reject';\n}\n\nReject.prototype = Object.create(TwiML.prototype);\nReject.prototype.constructor = Reject;\n/* jshint ignore:start */\n\n/**\n * <Redirect> TwiML Verb\n *\n * @constructor Redirect\n *\n * @param {object} redirect - <Redirect> TwiML Verb\n */\n\n/* jshint ignore:end */\n\nfunction Redirect(redirect) {\n  this.redirect = redirect;\n  this._propertyName = 'redirect';\n}\n\nRedirect.prototype = Object.create(TwiML.prototype);\nRedirect.prototype.constructor = Redirect;\n/* jshint ignore:start */\n\n/**\n * <Record> TwiML Verb\n *\n * @constructor Record\n *\n * @param {object} record - <Record> TwiML Verb\n */\n\n/* jshint ignore:end */\n\nfunction Record(record) {\n  this.record = record;\n  this._propertyName = 'record';\n}\n\nRecord.prototype = Object.create(TwiML.prototype);\nRecord.prototype.constructor = Record;\n/* jshint ignore:start */\n\n/**\n * <Queue> TwiML Noun\n *\n * @constructor Queue\n *\n * @param {object} queue - <Queue> TwiML Noun\n */\n\n/* jshint ignore:end */\n\nfunction Queue(queue) {\n  this.queue = queue;\n  this._propertyName = 'queue';\n}\n\nQueue.prototype = Object.create(TwiML.prototype);\nQueue.prototype.constructor = Queue;\n/* jshint ignore:start */\n\n/**\n * <Leave> TwiML Verb\n *\n * @constructor Leave\n *\n * @param {object} leave - <Leave> TwiML Verb\n */\n\n/* jshint ignore:end */\n\nfunction Leave(leave) {\n  this.leave = leave;\n  this._propertyName = 'leave';\n}\n\nLeave.prototype = Object.create(TwiML.prototype);\nLeave.prototype.constructor = Leave;\n/* jshint ignore:start */\n\n/**\n * <Hangup> TwiML Verb\n *\n * @constructor Hangup\n *\n * @param {object} hangup - <Hangup> TwiML Verb\n */\n\n/* jshint ignore:end */\n\nfunction Hangup(hangup) {\n  this.hangup = hangup;\n  this._propertyName = 'hangup';\n}\n\nHangup.prototype = Object.create(TwiML.prototype);\nHangup.prototype.constructor = Hangup;\n/* jshint ignore:start */\n\n/**\n * <Gather> TwiML Verb\n *\n * @constructor Gather\n *\n * @param {object} gather - <Gather> TwiML Verb\n */\n\n/* jshint ignore:end */\n\nfunction Gather(gather) {\n  this.gather = gather;\n  this._propertyName = 'gather';\n}\n\nGather.prototype = Object.create(TwiML.prototype);\nGather.prototype.constructor = Gather;\n/* jshint ignore:start */\n\n/**\n * <Say> TwiML Verb\n *\n * @function say\n * @memberof Gather#\n *\n * @param {object} attributes - TwiML attributes\n * @param {say.voice} [attributes.voice] - Voice to use\n * @param {number} [attributes.loop] - Times to loop message\n * @param {say.language} [attributes.language] - Message langauge\n * @param {string} message - Message to say\n *\n * @returns Say\n */\n\n/* jshint ignore:end */\n\nGather.prototype.say = function say(attributes, message) {\n  return new Say(this.gather.ele('Say', attributes, message));\n};\n/* jshint ignore:start */\n\n/**\n * <Pause> TwiML Verb\n *\n * @function pause\n * @memberof Gather#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {number} [attributes.length] - Length in seconds to pause\n *\n * @returns Pause\n */\n\n/* jshint ignore:end */\n\n\nGather.prototype.pause = function pause(attributes) {\n  return new Pause(this.gather.ele('Pause', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Play> TwiML Verb\n *\n * @function play\n * @memberof Gather#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {number} [attributes.loop] - Times to loop media\n * @param {string} [attributes.digits] - Play DTMF tones for digits\n * @param {url} [url] - Media URL\n *\n * @returns Play\n */\n\n/* jshint ignore:end */\n\n\nGather.prototype.play = function play(attributes, url) {\n  return new Play(this.gather.ele('Play', attributes, url));\n};\n/* jshint ignore:start */\n\n/**\n * <Enqueue> TwiML Noun\n *\n * @constructor Enqueue\n *\n * @param {object} enqueue - <Enqueue> TwiML Noun\n */\n\n/* jshint ignore:end */\n\n\nfunction Enqueue(enqueue) {\n  this.enqueue = enqueue;\n  this._propertyName = 'enqueue';\n}\n\nEnqueue.prototype = Object.create(TwiML.prototype);\nEnqueue.prototype.constructor = Enqueue;\n/* jshint ignore:start */\n\n/**\n * <Task> TwiML Noun\n *\n * @function task\n * @memberof Enqueue#\n *\n * @param {object} attributes - TwiML attributes\n * @param {number} [attributes.priority] - Task priority\n * @param {number} [attributes.timeout] - Timeout associated with task\n * @param {string} body - TaskRouter task attributes\n *\n * @returns Task\n */\n\n/* jshint ignore:end */\n\nEnqueue.prototype.task = function task(attributes, body) {\n  return new Task(this.enqueue.ele('Task', attributes, body));\n};\n/* jshint ignore:start */\n\n/**\n * <Task> TwiML Noun\n *\n * @constructor Task\n *\n * @param {object} task - <Task> TwiML Noun\n */\n\n/* jshint ignore:end */\n\n\nfunction Task(task) {\n  this.task = task;\n  this._propertyName = 'task';\n}\n\nTask.prototype = Object.create(TwiML.prototype);\nTask.prototype.constructor = Task;\n/* jshint ignore:start */\n\n/**\n * <Echo> TwiML Verb\n *\n * @constructor Echo\n *\n * @param {object} echo - <Echo> TwiML Verb\n */\n\n/* jshint ignore:end */\n\nfunction Echo(echo) {\n  this.echo = echo;\n  this._propertyName = 'echo';\n}\n\nEcho.prototype = Object.create(TwiML.prototype);\nEcho.prototype.constructor = Echo;\n/* jshint ignore:start */\n\n/**\n * <Dial> TwiML Verb\n *\n * @constructor Dial\n *\n * @param {object} dial - <Dial> TwiML Verb\n */\n\n/* jshint ignore:end */\n\nfunction Dial(dial) {\n  this.dial = dial;\n  this._propertyName = 'dial';\n}\n\nDial.prototype = Object.create(TwiML.prototype);\nDial.prototype.constructor = Dial;\n/* jshint ignore:start */\n\n/**\n * <Client> TwiML Noun\n *\n * @function client\n * @memberof Dial#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.url] - Client URL\n * @param {string} [attributes.method] - Client URL Method\n * @param {client.event} [attributes.statusCallbackEvent] -\n *          Events to trigger status callback\n * @param {string} [attributes.statusCallback] - Status Callback URL\n * @param {string} [attributes.statusCallbackMethod] - Status Callback URL Method\n * @param {string} [identity] - Client identity\n *\n * @returns Client\n */\n\n/* jshint ignore:end */\n\nDial.prototype.client = function client(attributes, identity) {\n  return new Client(this.dial.ele('Client', attributes, identity));\n};\n/* jshint ignore:start */\n\n/**\n * <Conference> TwiML Noun\n *\n * @function conference\n * @memberof Dial#\n *\n * @param {object} attributes - TwiML attributes\n * @param {boolean} [attributes.muted] - Join the conference muted\n * @param {conference.beep} [attributes.beep] - Play beep when joining\n * @param {boolean} [attributes.startConferenceOnEnter] -\n *          Start the conference on enter\n * @param {boolean} [attributes.endConferenceOnExit] - End the conferenceon exit\n * @param {string} [attributes.waitUrl] - Wait URL\n * @param {string} [attributes.waitMethod] - Wait URL method\n * @param {number} [attributes.maxParticipants] - Maximum number of participants\n * @param {conference.record} [attributes.record] - Record the conference\n * @param {conference.region} [attributes.region] - Conference region\n * @param {string} [attributes.coach] - Call coach\n * @param {conference.trim} [attributes.trim] - Trim the conference recording\n * @param {conference.event} [attributes.statusCallbackEvent] -\n *          Events to call status callback URL\n * @param {string} [attributes.statusCallback] - Status callback URL\n * @param {string} [attributes.statusCallbackMethod] - Status callback URL method\n * @param {string} [attributes.recordingStatusCallback] -\n *          Recording status callback URL\n * @param {string} [attributes.recordingStatusCallbackMethod] -\n *          Recording status callback URL method\n * @param {conference.recording_event} [attributes.recordingStatusCallbackEvent] -\n *          Recording status callback events\n * @param {string} [attributes.eventCallbackUrl] - Event callback URL\n * @param {conference.jitter_buffer_size} [attributes.jitterBufferSize] -\n *          Size of jitter buffer for participant\n * @param {string} [attributes.participantLabel] - A label for participant\n * @param {string} name - Conference name\n *\n * @returns Conference\n */\n\n/* jshint ignore:end */\n\n\nDial.prototype.conference = function conference(attributes, name) {\n  return new Conference(this.dial.ele('Conference', attributes, name));\n};\n/* jshint ignore:start */\n\n/**\n * <Number> TwiML Noun\n *\n * @function number\n * @memberof Dial#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.sendDigits] -\n *          DTMF tones to play when the call is answered\n * @param {string} [attributes.url] - TwiML URL\n * @param {string} [attributes.method] - TwiML URL method\n * @param {number.event} [attributes.statusCallbackEvent] -\n *          Events to call status callback\n * @param {string} [attributes.statusCallback] - Status callback URL\n * @param {string} [attributes.statusCallbackMethod] - Status callback URL method\n * @param {string} [attributes.byoc] - BYOC trunk SID (Beta)\n * @param {phone_number} phoneNumber - Phone Number to dial\n *\n * @returns Number\n */\n\n/* jshint ignore:end */\n\n\nDial.prototype.number = function number(attributes, phoneNumber) {\n  return new Number(this.dial.ele('Number', attributes, phoneNumber));\n};\n/* jshint ignore:start */\n\n/**\n * <Queue> TwiML Noun\n *\n * @function queue\n * @memberof Dial#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.url] - Action URL\n * @param {string} [attributes.method] - Action URL method\n * @param {string} [attributes.reservationSid] - TaskRouter Reservation SID\n * @param {string} [attributes.postWorkActivitySid] - TaskRouter Activity SID\n * @param {string} name - Queue name\n *\n * @returns Queue\n */\n\n/* jshint ignore:end */\n\n\nDial.prototype.queue = function queue(attributes, name) {\n  return new Queue(this.dial.ele('Queue', attributes, name));\n};\n/* jshint ignore:start */\n\n/**\n * <Sim> TwiML Noun\n *\n * @function sim\n * @memberof Dial#\n *\n * @param {object} attributes - TwiML attributes\n * @param {sid} simSid - SIM SID\n *\n * @returns Sim\n */\n\n/* jshint ignore:end */\n\n\nDial.prototype.sim = function sim(attributes, simSid) {\n  return new Sim(this.dial.ele('Sim', attributes, simSid));\n};\n/* jshint ignore:start */\n\n/**\n * <Sip> TwiML Noun\n *\n * @function sip\n * @memberof Dial#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.username] - SIP Username\n * @param {string} [attributes.password] - SIP Password\n * @param {string} [attributes.url] - Action URL\n * @param {string} [attributes.method] - Action URL method\n * @param {sip.event} [attributes.statusCallbackEvent] - Status callback events\n * @param {string} [attributes.statusCallback] - Status callback URL\n * @param {string} [attributes.statusCallbackMethod] - Status callback URL method\n * @param {url} sipUrl - SIP URL\n *\n * @returns Sip\n */\n\n/* jshint ignore:end */\n\n\nDial.prototype.sip = function sip(attributes, sipUrl) {\n  return new Sip(this.dial.ele('Sip', attributes, sipUrl));\n};\n/* jshint ignore:start */\n\n/**\n * <Sip> TwiML Noun\n *\n * @constructor Sip\n *\n * @param {object} sip - <Sip> TwiML Noun\n */\n\n/* jshint ignore:end */\n\n\nfunction Sip(sip) {\n  this.sip = sip;\n  this._propertyName = 'sip';\n}\n\nSip.prototype = Object.create(TwiML.prototype);\nSip.prototype.constructor = Sip;\n/* jshint ignore:start */\n\n/**\n * <Sim> TwiML Noun\n *\n * @constructor Sim\n *\n * @param {object} sim - <Sim> TwiML Noun\n */\n\n/* jshint ignore:end */\n\nfunction Sim(sim) {\n  this.sim = sim;\n  this._propertyName = 'sim';\n}\n\nSim.prototype = Object.create(TwiML.prototype);\nSim.prototype.constructor = Sim;\n/* jshint ignore:start */\n\n/**\n * <Number> TwiML Noun\n *\n * @constructor Number\n *\n * @param {object} number - <Number> TwiML Noun\n */\n\n/* jshint ignore:end */\n\nfunction Number(number) {\n  this.number = number;\n  this._propertyName = 'number';\n}\n\nNumber.prototype = Object.create(TwiML.prototype);\nNumber.prototype.constructor = Number;\n/* jshint ignore:start */\n\n/**\n * <Conference> TwiML Noun\n *\n * @constructor Conference\n *\n * @param {object} conference - <Conference> TwiML Noun\n */\n\n/* jshint ignore:end */\n\nfunction Conference(conference) {\n  this.conference = conference;\n  this._propertyName = 'conference';\n}\n\nConference.prototype = Object.create(TwiML.prototype);\nConference.prototype.constructor = Conference;\n/* jshint ignore:start */\n\n/**\n * <Client> TwiML Noun\n *\n * @constructor Client\n *\n * @param {object} client - <Client> TwiML Noun\n */\n\n/* jshint ignore:end */\n\nfunction Client(client) {\n  this.client = client;\n  this._propertyName = 'client';\n}\n\nClient.prototype = Object.create(TwiML.prototype);\nClient.prototype.constructor = Client;\n/* jshint ignore:start */\n\n/**\n * <Identity> TwiML Noun\n *\n * @function identity\n * @memberof Client#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} clientIdentity - Identity of the client to dial\n *\n * @returns Identity\n */\n\n/* jshint ignore:end */\n\nClient.prototype.identity = function identity(attributes, clientIdentity) {\n  return new Identity(this.client.ele('Identity', attributes, clientIdentity));\n};\n/* jshint ignore:start */\n\n/**\n * <Parameter> TwiML Noun\n *\n * @function parameter\n * @memberof Client#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.name] - The name of the custom parameter\n * @param {string} [attributes.value] - The value of the custom parameter\n *\n * @returns Parameter\n */\n\n/* jshint ignore:end */\n\n\nClient.prototype.parameter = function parameter(attributes) {\n  return new Parameter(this.client.ele('Parameter', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Identity> TwiML Noun\n *\n * @constructor Identity\n *\n * @param {object} identity - <Identity> TwiML Noun\n */\n\n/* jshint ignore:end */\n\n\nfunction Identity(identity) {\n  this.identity = identity;\n  this._propertyName = 'identity';\n}\n\nIdentity.prototype = Object.create(TwiML.prototype);\nIdentity.prototype.constructor = Identity;\n/* jshint ignore:start */\n\n/**\n * <Connect> TwiML Verb\n *\n * @constructor Connect\n *\n * @param {object} connect - <Connect> TwiML Verb\n */\n\n/* jshint ignore:end */\n\nfunction Connect(connect) {\n  this.connect = connect;\n  this._propertyName = 'connect';\n}\n\nConnect.prototype = Object.create(TwiML.prototype);\nConnect.prototype.constructor = Connect;\n/* jshint ignore:start */\n\n/**\n * <Room> TwiML Noun\n *\n * @function room\n * @memberof Connect#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.participantIdentity] -\n *          Participant identity when connecting to the Room\n * @param {string} name - Room name\n *\n * @returns Room\n */\n\n/* jshint ignore:end */\n\nConnect.prototype.room = function room(attributes, name) {\n  return new Room(this.connect.ele('Room', attributes, name));\n};\n/* jshint ignore:start */\n\n/**\n * <Autopilot> TwiML Noun\n *\n * @function autopilot\n * @memberof Connect#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} name - Autopilot assistant sid or unique name\n *\n * @returns Autopilot\n */\n\n/* jshint ignore:end */\n\n\nConnect.prototype.autopilot = function autopilot(attributes, name) {\n  return new Autopilot(this.connect.ele('Autopilot', attributes, name));\n};\n/* jshint ignore:start */\n\n/**\n * <Stream> TwiML Noun\n *\n * @function stream\n * @memberof Connect#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.name] - Friendly name given to the Stream\n * @param {string} [attributes.connectorName] - Unique name for Stream Connector\n * @param {string} [attributes.url] -\n *          URL of the remote service where the Stream is routed\n * @param {stream.track} [attributes.track] -\n *          Track to be streamed to remote service\n * @param {string} [attributes.statusCallback] - Status Callback URL\n * @param {stream.status_callback_method} [attributes.statusCallbackMethod] -\n *          Status Callback URL method\n *\n * @returns Stream\n */\n\n/* jshint ignore:end */\n\n\nConnect.prototype.stream = function stream(attributes) {\n  return new Stream(this.connect.ele('Stream', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <VirtualAgent> TwiML Noun\n *\n * @function virtualAgent\n * @memberof Connect#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.connectorName] -\n *          Defines the conversation profile Dialogflow needs to use\n * @param {string} [attributes.language] -\n *          Language to be used by Dialogflow to transcribe speech\n * @param {boolean} [attributes.sentimentAnalysis] -\n *          Whether sentiment analysis needs to be enabled or not\n * @param {string} [attributes.statusCallback] -\n *          URL to post status callbacks from Twilio\n *\n * @returns VirtualAgent\n */\n\n/* jshint ignore:end */\n\n\nConnect.prototype.virtualAgent = function virtualAgent(attributes) {\n  return new VirtualAgent(this.connect.ele('VirtualAgent', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <VirtualAgent> TwiML Noun\n *\n * @constructor VirtualAgent\n *\n * @param {object} virtualAgent - <VirtualAgent> TwiML Noun\n */\n\n/* jshint ignore:end */\n\n\nfunction VirtualAgent(virtualAgent) {\n  this.virtualAgent = virtualAgent;\n  this._propertyName = 'virtualAgent';\n}\n\nVirtualAgent.prototype = Object.create(TwiML.prototype);\nVirtualAgent.prototype.constructor = VirtualAgent;\n/* jshint ignore:start */\n\n/**\n * <Autopilot> TwiML Noun\n *\n * @constructor Autopilot\n *\n * @param {object} autopilot - <Autopilot> TwiML Noun\n */\n\n/* jshint ignore:end */\n\nfunction Autopilot(autopilot) {\n  this.autopilot = autopilot;\n  this._propertyName = 'autopilot';\n}\n\nAutopilot.prototype = Object.create(TwiML.prototype);\nAutopilot.prototype.constructor = Autopilot;\n/* jshint ignore:start */\n\n/**\n * <Room> TwiML Noun\n *\n * @constructor Room\n *\n * @param {object} room - <Room> TwiML Noun\n */\n\n/* jshint ignore:end */\n\nfunction Room(room) {\n  this.room = room;\n  this._propertyName = 'room';\n}\n\nRoom.prototype = Object.create(TwiML.prototype);\nRoom.prototype.constructor = Room;\nmodule.exports = VoiceResponse;","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/twiml/VoiceResponse.js"],"names":["util","require","TwiML","VoiceResponse","call","_propertyName","prototype","Object","create","constructor","connect","attributes","Connect","response","ele","dial","number","Dial","echo","Echo","enqueue","name","Enqueue","gather","Gather","hangup","Hangup","leave","Leave","pause","Pause","play","url","Play","queue","Queue","record","Record","redirect","Redirect","reject","Reject","say","message","Say","sms","Sms","pay","Pay","prompt","Prompt","start","Start","stop","Stop","refer","Refer","sip","sipUrl","ReferSip","referSip","deprecate","stream","Stream","siprec","Siprec","parameter","Parameter","break_","SsmlBreak","ssmlBreak","emphasis","words","SsmlEmphasis","ssmlEmphasis","lang","SsmlLang","ssmlLang","p","SsmlP","ssmlP","phoneme","SsmlPhoneme","ssmlPhoneme","prosody","SsmlProsody","ssmlProsody","s","SsmlS","ssmlS","sayAs","SsmlSayAs","ssmlSayAs","sub","SsmlSub","ssmlSub","w","SsmlW","ssmlW","task","body","Task","client","identity","Client","conference","Conference","phoneNumber","Number","sim","simSid","Sim","Sip","clientIdentity","Identity","room","Room","autopilot","Autopilot","virtualAgent","VirtualAgent","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar util = require('util');  /* jshint ignore:line */\nvar TwiML = require('./TwiML');  /* jshint ignore:line */\n\n\n/* jshint ignore:start */\n/**\n * <Response> TwiML for Voice\n *\n * @constructor VoiceResponse\n */\n/* jshint ignore:end */\nfunction VoiceResponse() {\n  TwiML.call(this);\n  this._propertyName = 'response';\n}\n\nVoiceResponse.prototype = Object.create(TwiML.prototype);\nVoiceResponse.prototype.constructor = VoiceResponse;\n\n/* jshint ignore:start */\n/**\n * <Connect> TwiML Verb\n *\n * @function connect\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.action] - Action URL\n * @param {string} [attributes.method] - Action URL method\n *\n * @returns Connect\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.connect = function connect(attributes) {\n  return new Connect(this.response.ele('Connect', attributes));\n};\n\n/* jshint ignore:start */\n/**\n * <Dial> TwiML Verb\n *\n * @function dial\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.action] - Action URL\n * @param {string} [attributes.method] - Action URL method\n * @param {number} [attributes.timeout] - Time to wait for answer\n * @param {boolean} [attributes.hangupOnStar] - Hangup call on star press\n * @param {number} [attributes.timeLimit] - Max time length\n * @param {string} [attributes.callerId] - Caller ID to display\n * @param {dial.record} [attributes.record] - Record the call\n * @param {dial.trim} [attributes.trim] - Trim the recording\n * @param {string} [attributes.recordingStatusCallback] -\n *          Recording status callback URL\n * @param {string} [attributes.recordingStatusCallbackMethod] -\n *          Recording status callback URL method\n * @param {dial.recording_event} [attributes.recordingStatusCallbackEvent] -\n *          Recording status callback events\n * @param {boolean} [attributes.answerOnBridge] -\n *          Preserve the ringing behavior of the inbound call until the Dialed call picks up\n * @param {dial.ring_tone} [attributes.ringTone] -\n *          Ringtone allows you to override the ringback tone that Twilio will play back to the caller while executing the Dial\n * @param {dial.recording_track} [attributes.recordingTrack] -\n *          To indicate which audio track should be recorded\n * @param {boolean} [attributes.sequential] -\n *          Used to determine if child TwiML nouns should be dialed in order, one after the other (sequential) or dial all at once (parallel). Default is false, parallel\n * @param {string} [attributes.referUrl] -\n *          Webhook that will receive future SIP REFER requests\n * @param {string} [attributes.referMethod] -\n *          The HTTP method to use for the refer Webhook\n * @param {string} [number] - Phone number to dial\n *\n * @returns Dial\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.dial = function dial(attributes, number) {\n  return new Dial(this.response.ele('Dial', attributes, number));\n};\n\n/* jshint ignore:start */\n/**\n * <Echo> TwiML Verb\n *\n * @function echo\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n *\n * @returns Echo\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.echo = function echo(attributes) {\n  return new Echo(this.response.ele('Echo', attributes));\n};\n\n/* jshint ignore:start */\n/**\n * <Enqueue> TwiML Noun\n *\n * @function enqueue\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.action] - Action URL\n * @param {string} [attributes.method] - Action URL method\n * @param {string} [attributes.waitUrl] - Wait URL\n * @param {string} [attributes.waitUrlMethod] - Wait URL method\n * @param {string} [attributes.workflowSid] - TaskRouter Workflow SID\n * @param {string} [name] - Friendly name\n *\n * @returns Enqueue\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.enqueue = function enqueue(attributes, name) {\n  return new Enqueue(this.response.ele('Enqueue', attributes, name));\n};\n\n/* jshint ignore:start */\n/**\n * <Gather> TwiML Verb\n *\n * @function gather\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {gather.input} [attributes.input] - Input type Twilio should accept\n * @param {string} [attributes.action] - Action URL\n * @param {string} [attributes.method] - Action URL method\n * @param {number} [attributes.timeout] - Time to wait to gather input\n * @param {string} [attributes.speechTimeout] -\n *          Time to wait to gather speech input and it should be either auto or a positive integer.\n * @param {number} [attributes.maxSpeechTime] - Max allowed time for speech input\n * @param {boolean} [attributes.profanityFilter] - Profanity Filter on speech\n * @param {string} [attributes.finishOnKey] - Finish gather on key\n * @param {number} [attributes.numDigits] - Number of digits to collect\n * @param {string} [attributes.partialResultCallback] - Partial result callback URL\n * @param {string} [attributes.partialResultCallbackMethod] -\n *          Partial result callback URL method\n * @param {gather.language} [attributes.language] - Language to use\n * @param {string} [attributes.hints] - Speech recognition hints\n * @param {boolean} [attributes.bargeIn] - Stop playing media upon speech\n * @param {boolean} [attributes.debug] - Allow debug for gather\n * @param {boolean} [attributes.actionOnEmptyResult] -\n *          Force webhook to the action URL event if there is no input\n * @param {gather.speech_model} [attributes.speechModel] -\n *          Specify the model that is best suited for your use case\n * @param {boolean} [attributes.enhanced] - Use enhanced speech model\n *\n * @returns Gather\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.gather = function gather(attributes) {\n  return new Gather(this.response.ele('Gather', attributes));\n};\n\n/* jshint ignore:start */\n/**\n * <Hangup> TwiML Verb\n *\n * @function hangup\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n *\n * @returns Hangup\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.hangup = function hangup(attributes) {\n  return new Hangup(this.response.ele('Hangup', attributes));\n};\n\n/* jshint ignore:start */\n/**\n * <Leave> TwiML Verb\n *\n * @function leave\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n *\n * @returns Leave\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.leave = function leave(attributes) {\n  return new Leave(this.response.ele('Leave', attributes));\n};\n\n/* jshint ignore:start */\n/**\n * <Pause> TwiML Verb\n *\n * @function pause\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {number} [attributes.length] - Length in seconds to pause\n *\n * @returns Pause\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.pause = function pause(attributes) {\n  return new Pause(this.response.ele('Pause', attributes));\n};\n\n/* jshint ignore:start */\n/**\n * <Play> TwiML Verb\n *\n * @function play\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {number} [attributes.loop] - Times to loop media\n * @param {string} [attributes.digits] - Play DTMF tones for digits\n * @param {url} [url] - Media URL\n *\n * @returns Play\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.play = function play(attributes, url) {\n  return new Play(this.response.ele('Play', attributes, url));\n};\n\n/* jshint ignore:start */\n/**\n * <Queue> TwiML Noun\n *\n * @function queue\n * @memberof VoiceResponse#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.url] - Action URL\n * @param {string} [attributes.method] - Action URL method\n * @param {string} [attributes.reservationSid] - TaskRouter Reservation SID\n * @param {string} [attributes.postWorkActivitySid] - TaskRouter Activity SID\n * @param {string} name - Queue name\n *\n * @returns Queue\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.queue = function queue(attributes, name) {\n  return new Queue(this.response.ele('Queue', attributes, name));\n};\n\n/* jshint ignore:start */\n/**\n * <Record> TwiML Verb\n *\n * @function record\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.action] - Action URL\n * @param {string} [attributes.method] - Action URL method\n * @param {number} [attributes.timeout] - Timeout to begin recording\n * @param {string} [attributes.finishOnKey] - Finish recording on key\n * @param {number} [attributes.maxLength] - Max time to record in seconds\n * @param {boolean} [attributes.playBeep] - Play beep\n * @param {record.trim} [attributes.trim] - Trim the recording\n * @param {string} [attributes.recordingStatusCallback] - Status callback URL\n * @param {string} [attributes.recordingStatusCallbackMethod] -\n *          Status callback URL method\n * @param {record.recording_event} [attributes.recordingStatusCallbackEvent] -\n *          Recording status callback events\n * @param {boolean} [attributes.transcribe] - Transcribe the recording\n * @param {string} [attributes.transcribeCallback] - Transcribe callback URL\n *\n * @returns Record\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.record = function record(attributes) {\n  return new Record(this.response.ele('Record', attributes));\n};\n\n/* jshint ignore:start */\n/**\n * <Redirect> TwiML Verb\n *\n * @function redirect\n * @memberof VoiceResponse#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.method] - Redirect URL method\n * @param {url} url - Redirect URL\n *\n * @returns Redirect\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.redirect = function redirect(attributes, url) {\n  return new Redirect(this.response.ele('Redirect', attributes, url));\n};\n\n/* jshint ignore:start */\n/**\n * <Reject> TwiML Verb\n *\n * @function reject\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {reject.reason} [attributes.reason] - Rejection reason\n *\n * @returns Reject\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.reject = function reject(attributes) {\n  return new Reject(this.response.ele('Reject', attributes));\n};\n\n/* jshint ignore:start */\n/**\n * <Say> TwiML Verb\n *\n * @function say\n * @memberof VoiceResponse#\n *\n * @param {object} attributes - TwiML attributes\n * @param {say.voice} [attributes.voice] - Voice to use\n * @param {number} [attributes.loop] - Times to loop message\n * @param {say.language} [attributes.language] - Message langauge\n * @param {string} message - Message to say\n *\n * @returns Say\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.say = function say(attributes, message) {\n  return new Say(this.response.ele('Say', attributes, message));\n};\n\n/* jshint ignore:start */\n/**\n * <Sms> TwiML Noun\n *\n * @function sms\n * @memberof VoiceResponse#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.to] - Number to send message to\n * @param {string} [attributes.from] - Number to send message from\n * @param {string} [attributes.action] - Action URL\n * @param {string} [attributes.method] - Action URL method\n * @param {string} [attributes.statusCallback] - Status callback URL\n * @param {string} message - Message body\n *\n * @returns Sms\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.sms = function sms(attributes, message) {\n  return new Sms(this.response.ele('Sms', attributes, message));\n};\n\n/* jshint ignore:start */\n/**\n * <Pay> Twiml Verb\n *\n * @function pay\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {pay.input} [attributes.input] - Input type Twilio should accept\n * @param {string} [attributes.action] - Action URL\n * @param {pay.bank_account_type} [attributes.bankAccountType] -\n *          Bank account type for ach transactions. If set, payment method attribute must be provided and value should be set to ach-debit. defaults to consumer-checking\n * @param {string} [attributes.statusCallback] - Status callback URL\n * @param {pay.status_callback_method} [attributes.statusCallbackMethod] -\n *          Status callback method\n * @param {number} [attributes.timeout] - Time to wait to gather input\n * @param {number} [attributes.maxAttempts] -\n *          Maximum number of allowed retries when gathering input\n * @param {boolean} [attributes.securityCode] - Prompt for security code\n * @param {string} [attributes.postalCode] -\n *          Prompt for postal code and it should be true/false or default postal code\n * @param {number} [attributes.minPostalCodeLength] -\n *          Prompt for minimum postal code length\n * @param {string} [attributes.paymentConnector] -\n *          Unique name for payment connector\n * @param {pay.payment_method} [attributes.paymentMethod] -\n *          Payment method to be used. defaults to credit-card\n * @param {pay.token_type} [attributes.tokenType] - Type of token\n * @param {string} [attributes.chargeAmount] -\n *          Amount to process. If value is greater than 0 then make the payment else create a payment token\n * @param {string} [attributes.currency] - Currency of the amount attribute\n * @param {string} [attributes.description] - Details regarding the payment\n * @param {pay.valid_card_types} [attributes.validCardTypes] -\n *          Comma separated accepted card types\n * @param {pay.language} [attributes.language] - Language to use\n *\n * @returns Pay\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.pay = function pay(attributes) {\n  return new Pay(this.response.ele('Pay', attributes));\n};\n\n/* jshint ignore:start */\n/**\n * <Prompt> Twiml Verb\n *\n * @function prompt\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {prompt.for} [attributes.for_] - Name of the payment source data element\n * @param {prompt.error_type} [attributes.errorType] - Type of error\n * @param {prompt.card_type} [attributes.cardType] - Type of the credit card\n * @param {number} [attributes.attempt] - Current attempt count\n *\n * @returns Prompt\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.prompt = function prompt(attributes) {\n  return new Prompt(this.response.ele('Prompt', attributes));\n};\n\n/* jshint ignore:start */\n/**\n * <Start> TwiML Verb\n *\n * @function start\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.action] - Action URL\n * @param {string} [attributes.method] - Action URL method\n *\n * @returns Start\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.start = function start(attributes) {\n  return new Start(this.response.ele('Start', attributes));\n};\n\n/* jshint ignore:start */\n/**\n * <Stop> TwiML Verb\n *\n * @function stop\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n *\n * @returns Stop\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.stop = function stop(attributes) {\n  return new Stop(this.response.ele('Stop', attributes));\n};\n\n/* jshint ignore:start */\n/**\n * <Refer> TwiML Verb\n *\n * @function refer\n * @memberof VoiceResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.action] - Action URL\n * @param {string} [attributes.method] - Action URL method\n *\n * @returns Refer\n */\n/* jshint ignore:end */\nVoiceResponse.prototype.refer = function refer(attributes) {\n  return new Refer(this.response.ele('Refer', attributes));\n};\n\n\n/* jshint ignore:start */\n/**\n * <Refer> TwiML Verb\n *\n * @constructor Refer\n *\n * @param {object} refer - <Refer> TwiML Verb\n */\n/* jshint ignore:end */\nfunction Refer(refer) {\n  this.refer = refer;\n  this._propertyName = 'refer';\n}\n\nRefer.prototype = Object.create(TwiML.prototype);\nRefer.prototype.constructor = Refer;\n\n/* jshint ignore:start */\n/**\n * <Sip> TwiML Noun used in <Refer>\n *\n * @function sip\n * @memberof Refer#\n *\n * @param {object} attributes - TwiML attributes\n * @param {url} sipUrl - SIP URL\n *\n * @returns ReferSip\n */\n/* jshint ignore:end */\nRefer.prototype.sip = function sip(attributes, sipUrl) {\n  return new ReferSip(this.refer.ele('Sip', attributes, sipUrl));\n};\n\n/* jshint ignore:start */\n/**\n * <Sip> TwiML Noun used in <Refer>\n *\n * @function referSip\n * @memberof Refer#\n * @deprecated - Use sip() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {url} sipUrl - SIP URL\n *\n * @returns ReferSip\n */\n/* jshint ignore:end */\nRefer.prototype.referSip = util.deprecate(function referSip(attributes, sipUrl)\n                                                             {\n  return this.sip(attributes, sipUrl);\n}, 'referSip() is deprecated. Use sip() instead.');\n\n\n/* jshint ignore:start */\n/**\n * <Sip> TwiML Noun used in <Refer>\n *\n * @constructor ReferSip\n *\n * @param {object} referSip - <Sip> TwiML Noun used in <Refer>\n */\n/* jshint ignore:end */\nfunction ReferSip(referSip) {\n  this.referSip = referSip;\n  this._propertyName = 'referSip';\n}\n\nReferSip.prototype = Object.create(TwiML.prototype);\nReferSip.prototype.constructor = ReferSip;\n\n\n/* jshint ignore:start */\n/**\n * <Stop> TwiML Verb\n *\n * @constructor Stop\n *\n * @param {object} stop - <Stop> TwiML Verb\n */\n/* jshint ignore:end */\nfunction Stop(stop) {\n  this.stop = stop;\n  this._propertyName = 'stop';\n}\n\nStop.prototype = Object.create(TwiML.prototype);\nStop.prototype.constructor = Stop;\n\n/* jshint ignore:start */\n/**\n * <Stream> TwiML Noun\n *\n * @function stream\n * @memberof Stop#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.name] - Friendly name given to the Stream\n * @param {string} [attributes.connectorName] - Unique name for Stream Connector\n * @param {string} [attributes.url] -\n *          URL of the remote service where the Stream is routed\n * @param {stream.track} [attributes.track] -\n *          Track to be streamed to remote service\n * @param {string} [attributes.statusCallback] - Status Callback URL\n * @param {stream.status_callback_method} [attributes.statusCallbackMethod] -\n *          Status Callback URL method\n *\n * @returns Stream\n */\n/* jshint ignore:end */\nStop.prototype.stream = function stream(attributes) {\n  return new Stream(this.stop.ele('Stream', attributes));\n};\n\n/* jshint ignore:start */\n/**\n * <Siprec> TwiML Noun\n *\n * @function siprec\n * @memberof Stop#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.name] - Friendly name given to SIPREC\n * @param {string} [attributes.connectorName] - Unique name for Connector\n * @param {siprec.track} [attributes.track] -\n *          Track to be streamed to remote service\n *\n * @returns Siprec\n */\n/* jshint ignore:end */\nStop.prototype.siprec = function siprec(attributes) {\n  return new Siprec(this.stop.ele('Siprec', attributes));\n};\n\n\n/* jshint ignore:start */\n/**\n * <Siprec> TwiML Noun\n *\n * @constructor Siprec\n *\n * @param {object} siprec - <Siprec> TwiML Noun\n */\n/* jshint ignore:end */\nfunction Siprec(siprec) {\n  this.siprec = siprec;\n  this._propertyName = 'siprec';\n}\n\nSiprec.prototype = Object.create(TwiML.prototype);\nSiprec.prototype.constructor = Siprec;\n\n/* jshint ignore:start */\n/**\n * <Parameter> TwiML Noun\n *\n * @function parameter\n * @memberof Siprec#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.name] - The name of the custom parameter\n * @param {string} [attributes.value] - The value of the custom parameter\n *\n * @returns Parameter\n */\n/* jshint ignore:end */\nSiprec.prototype.parameter = function parameter(attributes) {\n  return new Parameter(this.siprec.ele('Parameter', attributes));\n};\n\n\n/* jshint ignore:start */\n/**\n * <Parameter> TwiML Noun\n *\n * @constructor Parameter\n *\n * @param {object} parameter - <Parameter> TwiML Noun\n */\n/* jshint ignore:end */\nfunction Parameter(parameter) {\n  this.parameter = parameter;\n  this._propertyName = 'parameter';\n}\n\nParameter.prototype = Object.create(TwiML.prototype);\nParameter.prototype.constructor = Parameter;\n\n\n/* jshint ignore:start */\n/**\n * <Stream> TwiML Noun\n *\n * @constructor Stream\n *\n * @param {object} stream - <Stream> TwiML Noun\n */\n/* jshint ignore:end */\nfunction Stream(stream) {\n  this.stream = stream;\n  this._propertyName = 'stream';\n}\n\nStream.prototype = Object.create(TwiML.prototype);\nStream.prototype.constructor = Stream;\n\n/* jshint ignore:start */\n/**\n * <Parameter> TwiML Noun\n *\n * @function parameter\n * @memberof Stream#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.name] - The name of the custom parameter\n * @param {string} [attributes.value] - The value of the custom parameter\n *\n * @returns Parameter\n */\n/* jshint ignore:end */\nStream.prototype.parameter = function parameter(attributes) {\n  return new Parameter(this.stream.ele('Parameter', attributes));\n};\n\n\n/* jshint ignore:start */\n/**\n * <Start> TwiML Verb\n *\n * @constructor Start\n *\n * @param {object} start - <Start> TwiML Verb\n */\n/* jshint ignore:end */\nfunction Start(start) {\n  this.start = start;\n  this._propertyName = 'start';\n}\n\nStart.prototype = Object.create(TwiML.prototype);\nStart.prototype.constructor = Start;\n\n/* jshint ignore:start */\n/**\n * <Stream> TwiML Noun\n *\n * @function stream\n * @memberof Start#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.name] - Friendly name given to the Stream\n * @param {string} [attributes.connectorName] - Unique name for Stream Connector\n * @param {string} [attributes.url] -\n *          URL of the remote service where the Stream is routed\n * @param {stream.track} [attributes.track] -\n *          Track to be streamed to remote service\n * @param {string} [attributes.statusCallback] - Status Callback URL\n * @param {stream.status_callback_method} [attributes.statusCallbackMethod] -\n *          Status Callback URL method\n *\n * @returns Stream\n */\n/* jshint ignore:end */\nStart.prototype.stream = function stream(attributes) {\n  return new Stream(this.start.ele('Stream', attributes));\n};\n\n/* jshint ignore:start */\n/**\n * <Siprec> TwiML Noun\n *\n * @function siprec\n * @memberof Start#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.name] - Friendly name given to SIPREC\n * @param {string} [attributes.connectorName] - Unique name for Connector\n * @param {siprec.track} [attributes.track] -\n *          Track to be streamed to remote service\n *\n * @returns Siprec\n */\n/* jshint ignore:end */\nStart.prototype.siprec = function siprec(attributes) {\n  return new Siprec(this.start.ele('Siprec', attributes));\n};\n\n\n/* jshint ignore:start */\n/**\n * <Prompt> Twiml Verb\n *\n * @constructor Prompt\n *\n * @param {object} prompt - <Prompt> Twiml Verb\n */\n/* jshint ignore:end */\nfunction Prompt(prompt) {\n  this.prompt = prompt;\n  this._propertyName = 'prompt';\n}\n\nPrompt.prototype = Object.create(TwiML.prototype);\nPrompt.prototype.constructor = Prompt;\n\n/* jshint ignore:start */\n/**\n * <Say> TwiML Verb\n *\n * @function say\n * @memberof Prompt#\n *\n * @param {object} attributes - TwiML attributes\n * @param {say.voice} [attributes.voice] - Voice to use\n * @param {number} [attributes.loop] - Times to loop message\n * @param {say.language} [attributes.language] - Message langauge\n * @param {string} message - Message to say\n *\n * @returns Say\n */\n/* jshint ignore:end */\nPrompt.prototype.say = function say(attributes, message) {\n  return new Say(this.prompt.ele('Say', attributes, message));\n};\n\n/* jshint ignore:start */\n/**\n * <Play> TwiML Verb\n *\n * @function play\n * @memberof Prompt#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {number} [attributes.loop] - Times to loop media\n * @param {string} [attributes.digits] - Play DTMF tones for digits\n * @param {url} [url] - Media URL\n *\n * @returns Play\n */\n/* jshint ignore:end */\nPrompt.prototype.play = function play(attributes, url) {\n  return new Play(this.prompt.ele('Play', attributes, url));\n};\n\n/* jshint ignore:start */\n/**\n * <Pause> TwiML Verb\n *\n * @function pause\n * @memberof Prompt#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {number} [attributes.length] - Length in seconds to pause\n *\n * @returns Pause\n */\n/* jshint ignore:end */\nPrompt.prototype.pause = function pause(attributes) {\n  return new Pause(this.prompt.ele('Pause', attributes));\n};\n\n\n/* jshint ignore:start */\n/**\n * <Pause> TwiML Verb\n *\n * @constructor Pause\n *\n * @param {object} pause - <Pause> TwiML Verb\n */\n/* jshint ignore:end */\nfunction Pause(pause) {\n  this.pause = pause;\n  this._propertyName = 'pause';\n}\n\nPause.prototype = Object.create(TwiML.prototype);\nPause.prototype.constructor = Pause;\n\n\n/* jshint ignore:start */\n/**\n * <Play> TwiML Verb\n *\n * @constructor Play\n *\n * @param {object} play - <Play> TwiML Verb\n */\n/* jshint ignore:end */\nfunction Play(play) {\n  this.play = play;\n  this._propertyName = 'play';\n}\n\nPlay.prototype = Object.create(TwiML.prototype);\nPlay.prototype.constructor = Play;\n\n\n/* jshint ignore:start */\n/**\n * <Say> TwiML Verb\n *\n * @constructor Say\n *\n * @param {object} say - <Say> TwiML Verb\n */\n/* jshint ignore:end */\nfunction Say(say) {\n  this.say = say;\n  this._propertyName = 'say';\n}\n\nSay.prototype = Object.create(TwiML.prototype);\nSay.prototype.constructor = Say;\n\n/* jshint ignore:start */\n/**\n * Adding a Pause in <Say>\n *\n * @function break_\n * @memberof Say#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {ssml_break.strength} [attributes.strength] -\n *          Set a pause based on strength\n * @param {string} [attributes.time] -\n *          Set a pause to a specific length of time in seconds or milliseconds, available values: [number]s, [number]ms\n *\n * @returns SsmlBreak\n */\n/* jshint ignore:end */\nSay.prototype.break_ = function break_(attributes) {\n  return new SsmlBreak(this.say.ele('break', attributes));\n};\n\n/* jshint ignore:start */\n/**\n * Adding a Pause in <Say>\n *\n * @function ssmlBreak\n * @memberof Say#\n * @deprecated - Use break_() instead.\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {ssml_break.strength} [attributes.strength] -\n *          Set a pause based on strength\n * @param {string} [attributes.time] -\n *          Set a pause to a specific length of time in seconds or milliseconds, available values: [number]s, [number]ms\n *\n * @returns SsmlBreak\n */\n/* jshint ignore:end */\nSay.prototype.ssmlBreak = util.deprecate(function ssmlBreak(attributes) {\n  return this.break_(attributes);\n}, 'ssmlBreak() is deprecated. Use break_() instead.');\n\n/* jshint ignore:start */\n/**\n * Emphasizing Words in <Say>\n *\n * @function emphasis\n * @memberof Say#\n *\n * @param {object} attributes - TwiML attributes\n * @param {ssml_emphasis.level} [attributes.level] - Specify the degree of emphasis\n * @param {string} words - Words to emphasize\n *\n * @returns SsmlEmphasis\n */\n/* jshint ignore:end */\nSay.prototype.emphasis = function emphasis(attributes, words) {\n  return new SsmlEmphasis(this.say.ele('emphasis', attributes, words));\n};\n\n/* jshint ignore:start */\n/**\n * Emphasizing Words in <Say>\n *\n * @function ssmlEmphasis\n * @memberof Say#\n * @deprecated - Use emphasis() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {ssml_emphasis.level} [attributes.level] - Specify the degree of emphasis\n * @param {string} words - Words to emphasize\n *\n * @returns SsmlEmphasis\n */\n/* jshint ignore:end */\nSay.prototype.ssmlEmphasis = util.deprecate(function ssmlEmphasis(attributes,\n    words) {\n  return this.emphasis(attributes, words);\n}, 'ssmlEmphasis() is deprecated. Use emphasis() instead.');\n\n/* jshint ignore:start */\n/**\n * Specifying Another Language for Specific Words in <Say>\n *\n * @function lang\n * @memberof Say#\n *\n * @param {object} attributes - TwiML attributes\n * @param {ssml_lang.xml_lang} [attributes.xml:lang] - Specify the language\n * @param {string} words - Words to speak\n *\n * @returns SsmlLang\n */\n/* jshint ignore:end */\nSay.prototype.lang = function lang(attributes, words) {\n  return new SsmlLang(this.say.ele('lang', attributes, words));\n};\n\n/* jshint ignore:start */\n/**\n * Specifying Another Language for Specific Words in <Say>\n *\n * @function ssmlLang\n * @memberof Say#\n * @deprecated - Use lang() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {ssml_lang.xml_lang} [attributes.xml:lang] - Specify the language\n * @param {string} words - Words to speak\n *\n * @returns SsmlLang\n */\n/* jshint ignore:end */\nSay.prototype.ssmlLang = util.deprecate(function ssmlLang(attributes, words) {\n  return this.lang(attributes, words);\n}, 'ssmlLang() is deprecated. Use lang() instead.');\n\n/* jshint ignore:start */\n/**\n * Adding a Pause Between Paragraphs in <Say>\n *\n * @function p\n * @memberof Say#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} words - Words to speak\n *\n * @returns SsmlP\n */\n/* jshint ignore:end */\nSay.prototype.p = function p(attributes, words) {\n  return new SsmlP(this.say.ele('p', attributes, words));\n};\n\n/* jshint ignore:start */\n/**\n * Adding a Pause Between Paragraphs in <Say>\n *\n * @function ssmlP\n * @memberof Say#\n * @deprecated - Use p() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} words - Words to speak\n *\n * @returns SsmlP\n */\n/* jshint ignore:end */\nSay.prototype.ssmlP = util.deprecate(function ssmlP(attributes, words) {\n  return this.p(attributes, words);\n}, 'ssmlP() is deprecated. Use p() instead.');\n\n/* jshint ignore:start */\n/**\n * Using Phonetic Pronunciation in <Say>\n *\n * @function phoneme\n * @memberof Say#\n *\n * @param {object} attributes - TwiML attributes\n * @param {ssml_phoneme.alphabet} [attributes.alphabet] -\n *          Specify the phonetic alphabet\n * @param {string} [attributes.ph] -\n *          Specifiy the phonetic symbols for pronunciation\n * @param {string} words - Words to speak\n *\n * @returns SsmlPhoneme\n */\n/* jshint ignore:end */\nSay.prototype.phoneme = function phoneme(attributes, words) {\n  return new SsmlPhoneme(this.say.ele('phoneme', attributes, words));\n};\n\n/* jshint ignore:start */\n/**\n * Using Phonetic Pronunciation in <Say>\n *\n * @function ssmlPhoneme\n * @memberof Say#\n * @deprecated - Use phoneme() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {ssml_phoneme.alphabet} [attributes.alphabet] -\n *          Specify the phonetic alphabet\n * @param {string} [attributes.ph] -\n *          Specifiy the phonetic symbols for pronunciation\n * @param {string} words - Words to speak\n *\n * @returns SsmlPhoneme\n */\n/* jshint ignore:end */\nSay.prototype.ssmlPhoneme = util.deprecate(function ssmlPhoneme(attributes,\n    words) {\n  return this.phoneme(attributes, words);\n}, 'ssmlPhoneme() is deprecated. Use phoneme() instead.');\n\n/* jshint ignore:start */\n/**\n * Controling Volume, Speaking Rate, and Pitch in <Say>\n *\n * @function prosody\n * @memberof Say#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.volume] -\n *          Specify the volume, available values: default, silent, x-soft, soft, medium, loud, x-loud, +ndB, -ndB\n * @param {string} [attributes.rate] -\n *          Specify the rate, available values: x-slow, slow, medium, fast, x-fast, n%\n * @param {string} [attributes.pitch] -\n *          Specify the pitch, available values: default, x-low, low, medium, high, x-high, +n%, -n%\n * @param {string} words - Words to speak\n *\n * @returns SsmlProsody\n */\n/* jshint ignore:end */\nSay.prototype.prosody = function prosody(attributes, words) {\n  return new SsmlProsody(this.say.ele('prosody', attributes, words));\n};\n\n/* jshint ignore:start */\n/**\n * Controling Volume, Speaking Rate, and Pitch in <Say>\n *\n * @function ssmlProsody\n * @memberof Say#\n * @deprecated - Use prosody() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.volume] -\n *          Specify the volume, available values: default, silent, x-soft, soft, medium, loud, x-loud, +ndB, -ndB\n * @param {string} [attributes.rate] -\n *          Specify the rate, available values: x-slow, slow, medium, fast, x-fast, n%\n * @param {string} [attributes.pitch] -\n *          Specify the pitch, available values: default, x-low, low, medium, high, x-high, +n%, -n%\n * @param {string} words - Words to speak\n *\n * @returns SsmlProsody\n */\n/* jshint ignore:end */\nSay.prototype.ssmlProsody = util.deprecate(function ssmlProsody(attributes,\n    words) {\n  return this.prosody(attributes, words);\n}, 'ssmlProsody() is deprecated. Use prosody() instead.');\n\n/* jshint ignore:start */\n/**\n * Adding A Pause Between Sentences in <Say>\n *\n * @function s\n * @memberof Say#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} words - Words to speak\n *\n * @returns SsmlS\n */\n/* jshint ignore:end */\nSay.prototype.s = function s(attributes, words) {\n  return new SsmlS(this.say.ele('s', attributes, words));\n};\n\n/* jshint ignore:start */\n/**\n * Adding A Pause Between Sentences in <Say>\n *\n * @function ssmlS\n * @memberof Say#\n * @deprecated - Use s() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} words - Words to speak\n *\n * @returns SsmlS\n */\n/* jshint ignore:end */\nSay.prototype.ssmlS = util.deprecate(function ssmlS(attributes, words) {\n  return this.s(attributes, words);\n}, 'ssmlS() is deprecated. Use s() instead.');\n\n/* jshint ignore:start */\n/**\n * Controlling How Special Types of Words Are Spoken in <Say>\n *\n * @function sayAs\n * @memberof Say#\n *\n * @param {object} attributes - TwiML attributes\n * @param {ssml_say_as.interpret_as} [attributes.interpret-\n *         as] - Specify the type of words are spoken\n * @param {ssml_say_as.role} [attributes.role] -\n *          Specify the format of the date when interpret-as is set to date\n * @param {string} words - Words to be interpreted\n *\n * @returns SsmlSayAs\n */\n/* jshint ignore:end */\nSay.prototype.sayAs = function sayAs(attributes, words) {\n  return new SsmlSayAs(this.say.ele('say-as', attributes, words));\n};\n\n/* jshint ignore:start */\n/**\n * Controlling How Special Types of Words Are Spoken in <Say>\n *\n * @function ssmlSayAs\n * @memberof Say#\n * @deprecated - Use sayAs() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {ssml_say_as.interpret_as} [attributes.interpret-\n *         as] - Specify the type of words are spoken\n * @param {ssml_say_as.role} [attributes.role] -\n *          Specify the format of the date when interpret-as is set to date\n * @param {string} words - Words to be interpreted\n *\n * @returns SsmlSayAs\n */\n/* jshint ignore:end */\nSay.prototype.ssmlSayAs = util.deprecate(function ssmlSayAs(attributes, words) {\n  return this.sayAs(attributes, words);\n}, 'ssmlSayAs() is deprecated. Use sayAs() instead.');\n\n/* jshint ignore:start */\n/**\n * Pronouncing Acronyms and Abbreviations in <Say>\n *\n * @function sub\n * @memberof Say#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.alias] -\n *          Substitute a different word (or pronunciation) for selected text such as an acronym or abbreviation\n * @param {string} words - Words to be substituted\n *\n * @returns SsmlSub\n */\n/* jshint ignore:end */\nSay.prototype.sub = function sub(attributes, words) {\n  return new SsmlSub(this.say.ele('sub', attributes, words));\n};\n\n/* jshint ignore:start */\n/**\n * Pronouncing Acronyms and Abbreviations in <Say>\n *\n * @function ssmlSub\n * @memberof Say#\n * @deprecated - Use sub() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.alias] -\n *          Substitute a different word (or pronunciation) for selected text such as an acronym or abbreviation\n * @param {string} words - Words to be substituted\n *\n * @returns SsmlSub\n */\n/* jshint ignore:end */\nSay.prototype.ssmlSub = util.deprecate(function ssmlSub(attributes, words) {\n  return this.sub(attributes, words);\n}, 'ssmlSub() is deprecated. Use sub() instead.');\n\n/* jshint ignore:start */\n/**\n * Improving Pronunciation by Specifying Parts of Speech in <Say>\n *\n * @function w\n * @memberof Say#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.role] -\n *          Customize the pronunciation of words by specifying the word’s part of speech or alternate meaning\n * @param {string} words - Words to speak\n *\n * @returns SsmlW\n */\n/* jshint ignore:end */\nSay.prototype.w = function w(attributes, words) {\n  return new SsmlW(this.say.ele('w', attributes, words));\n};\n\n/* jshint ignore:start */\n/**\n * Improving Pronunciation by Specifying Parts of Speech in <Say>\n *\n * @function ssmlW\n * @memberof Say#\n * @deprecated - Use w() instead.\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.role] -\n *          Customize the pronunciation of words by specifying the word’s part of speech or alternate meaning\n * @param {string} words - Words to speak\n *\n * @returns SsmlW\n */\n/* jshint ignore:end */\nSay.prototype.ssmlW = util.deprecate(function ssmlW(attributes, words) {\n  return this.w(attributes, words);\n}, 'ssmlW() is deprecated. Use w() instead.');\n\n\n/* jshint ignore:start */\n/**\n * Improving Pronunciation by Specifying Parts of Speech in <Say>\n *\n * @constructor SsmlW\n *\n * @param {object} ssmlW -\n *          Improving Pronunciation by Specifying Parts of Speech in <Say>\n */\n/* jshint ignore:end */\nfunction SsmlW(ssmlW) {\n  this.ssmlW = ssmlW;\n  this._propertyName = 'ssmlW';\n}\n\nSsmlW.prototype = Object.create(TwiML.prototype);\nSsmlW.prototype.constructor = SsmlW;\n\n\n/* jshint ignore:start */\n/**\n * Pronouncing Acronyms and Abbreviations in <Say>\n *\n * @constructor SsmlSub\n *\n * @param {object} ssmlSub - Pronouncing Acronyms and Abbreviations in <Say>\n */\n/* jshint ignore:end */\nfunction SsmlSub(ssmlSub) {\n  this.ssmlSub = ssmlSub;\n  this._propertyName = 'ssmlSub';\n}\n\nSsmlSub.prototype = Object.create(TwiML.prototype);\nSsmlSub.prototype.constructor = SsmlSub;\n\n\n/* jshint ignore:start */\n/**\n * Controlling How Special Types of Words Are Spoken in <Say>\n *\n * @constructor SsmlSayAs\n *\n * @param {object} ssmlSayAs -\n *          Controlling How Special Types of Words Are Spoken in <Say>\n */\n/* jshint ignore:end */\nfunction SsmlSayAs(ssmlSayAs) {\n  this.ssmlSayAs = ssmlSayAs;\n  this._propertyName = 'ssmlSayAs';\n}\n\nSsmlSayAs.prototype = Object.create(TwiML.prototype);\nSsmlSayAs.prototype.constructor = SsmlSayAs;\n\n\n/* jshint ignore:start */\n/**\n * Adding A Pause Between Sentences in <Say>\n *\n * @constructor SsmlS\n *\n * @param {object} ssmlS - Adding A Pause Between Sentences in <Say>\n */\n/* jshint ignore:end */\nfunction SsmlS(ssmlS) {\n  this.ssmlS = ssmlS;\n  this._propertyName = 'ssmlS';\n}\n\nSsmlS.prototype = Object.create(TwiML.prototype);\nSsmlS.prototype.constructor = SsmlS;\n\n\n/* jshint ignore:start */\n/**\n * Controling Volume, Speaking Rate, and Pitch in <Say>\n *\n * @constructor SsmlProsody\n *\n * @param {object} ssmlProsody -\n *          Controling Volume, Speaking Rate, and Pitch in <Say>\n */\n/* jshint ignore:end */\nfunction SsmlProsody(ssmlProsody) {\n  this.ssmlProsody = ssmlProsody;\n  this._propertyName = 'ssmlProsody';\n}\n\nSsmlProsody.prototype = Object.create(TwiML.prototype);\nSsmlProsody.prototype.constructor = SsmlProsody;\n\n\n/* jshint ignore:start */\n/**\n * Using Phonetic Pronunciation in <Say>\n *\n * @constructor SsmlPhoneme\n *\n * @param {object} ssmlPhoneme - Using Phonetic Pronunciation in <Say>\n */\n/* jshint ignore:end */\nfunction SsmlPhoneme(ssmlPhoneme) {\n  this.ssmlPhoneme = ssmlPhoneme;\n  this._propertyName = 'ssmlPhoneme';\n}\n\nSsmlPhoneme.prototype = Object.create(TwiML.prototype);\nSsmlPhoneme.prototype.constructor = SsmlPhoneme;\n\n\n/* jshint ignore:start */\n/**\n * Adding a Pause Between Paragraphs in <Say>\n *\n * @constructor SsmlP\n *\n * @param {object} ssmlP - Adding a Pause Between Paragraphs in <Say>\n */\n/* jshint ignore:end */\nfunction SsmlP(ssmlP) {\n  this.ssmlP = ssmlP;\n  this._propertyName = 'ssmlP';\n}\n\nSsmlP.prototype = Object.create(TwiML.prototype);\nSsmlP.prototype.constructor = SsmlP;\n\n\n/* jshint ignore:start */\n/**\n * Specifying Another Language for Specific Words in <Say>\n *\n * @constructor SsmlLang\n *\n * @param {object} ssmlLang -\n *          Specifying Another Language for Specific Words in <Say>\n */\n/* jshint ignore:end */\nfunction SsmlLang(ssmlLang) {\n  this.ssmlLang = ssmlLang;\n  this._propertyName = 'ssmlLang';\n}\n\nSsmlLang.prototype = Object.create(TwiML.prototype);\nSsmlLang.prototype.constructor = SsmlLang;\n\n\n/* jshint ignore:start */\n/**\n * Emphasizing Words in <Say>\n *\n * @constructor SsmlEmphasis\n *\n * @param {object} ssmlEmphasis - Emphasizing Words in <Say>\n */\n/* jshint ignore:end */\nfunction SsmlEmphasis(ssmlEmphasis) {\n  this.ssmlEmphasis = ssmlEmphasis;\n  this._propertyName = 'ssmlEmphasis';\n}\n\nSsmlEmphasis.prototype = Object.create(TwiML.prototype);\nSsmlEmphasis.prototype.constructor = SsmlEmphasis;\n\n\n/* jshint ignore:start */\n/**\n * Adding a Pause in <Say>\n *\n * @constructor SsmlBreak\n *\n * @param {object} ssmlBreak - Adding a Pause in <Say>\n */\n/* jshint ignore:end */\nfunction SsmlBreak(ssmlBreak) {\n  this.ssmlBreak = ssmlBreak;\n  this._propertyName = 'ssmlBreak';\n}\n\nSsmlBreak.prototype = Object.create(TwiML.prototype);\nSsmlBreak.prototype.constructor = SsmlBreak;\n\n\n/* jshint ignore:start */\n/**\n * <Pay> Twiml Verb\n *\n * @constructor Pay\n *\n * @param {object} pay - <Pay> Twiml Verb\n */\n/* jshint ignore:end */\nfunction Pay(pay) {\n  this.pay = pay;\n  this._propertyName = 'pay';\n}\n\nPay.prototype = Object.create(TwiML.prototype);\nPay.prototype.constructor = Pay;\n\n/* jshint ignore:start */\n/**\n * <Prompt> Twiml Verb\n *\n * @function prompt\n * @memberof Pay#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {prompt.for} [attributes.for_] - Name of the payment source data element\n * @param {prompt.error_type} [attributes.errorType] - Type of error\n * @param {prompt.card_type} [attributes.cardType] - Type of the credit card\n * @param {number} [attributes.attempt] - Current attempt count\n *\n * @returns Prompt\n */\n/* jshint ignore:end */\nPay.prototype.prompt = function prompt(attributes) {\n  return new Prompt(this.pay.ele('Prompt', attributes));\n};\n\n/* jshint ignore:start */\n/**\n * <Parameter> TwiML Noun\n *\n * @function parameter\n * @memberof Pay#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.name] - The name of the custom parameter\n * @param {string} [attributes.value] - The value of the custom parameter\n *\n * @returns Parameter\n */\n/* jshint ignore:end */\nPay.prototype.parameter = function parameter(attributes) {\n  return new Parameter(this.pay.ele('Parameter', attributes));\n};\n\n\n/* jshint ignore:start */\n/**\n * <Sms> TwiML Noun\n *\n * @constructor Sms\n *\n * @param {object} sms - <Sms> TwiML Noun\n */\n/* jshint ignore:end */\nfunction Sms(sms) {\n  this.sms = sms;\n  this._propertyName = 'sms';\n}\n\nSms.prototype = Object.create(TwiML.prototype);\nSms.prototype.constructor = Sms;\n\n\n/* jshint ignore:start */\n/**\n * <Reject> TwiML Verb\n *\n * @constructor Reject\n *\n * @param {object} reject - <Reject> TwiML Verb\n */\n/* jshint ignore:end */\nfunction Reject(reject) {\n  this.reject = reject;\n  this._propertyName = 'reject';\n}\n\nReject.prototype = Object.create(TwiML.prototype);\nReject.prototype.constructor = Reject;\n\n\n/* jshint ignore:start */\n/**\n * <Redirect> TwiML Verb\n *\n * @constructor Redirect\n *\n * @param {object} redirect - <Redirect> TwiML Verb\n */\n/* jshint ignore:end */\nfunction Redirect(redirect) {\n  this.redirect = redirect;\n  this._propertyName = 'redirect';\n}\n\nRedirect.prototype = Object.create(TwiML.prototype);\nRedirect.prototype.constructor = Redirect;\n\n\n/* jshint ignore:start */\n/**\n * <Record> TwiML Verb\n *\n * @constructor Record\n *\n * @param {object} record - <Record> TwiML Verb\n */\n/* jshint ignore:end */\nfunction Record(record) {\n  this.record = record;\n  this._propertyName = 'record';\n}\n\nRecord.prototype = Object.create(TwiML.prototype);\nRecord.prototype.constructor = Record;\n\n\n/* jshint ignore:start */\n/**\n * <Queue> TwiML Noun\n *\n * @constructor Queue\n *\n * @param {object} queue - <Queue> TwiML Noun\n */\n/* jshint ignore:end */\nfunction Queue(queue) {\n  this.queue = queue;\n  this._propertyName = 'queue';\n}\n\nQueue.prototype = Object.create(TwiML.prototype);\nQueue.prototype.constructor = Queue;\n\n\n/* jshint ignore:start */\n/**\n * <Leave> TwiML Verb\n *\n * @constructor Leave\n *\n * @param {object} leave - <Leave> TwiML Verb\n */\n/* jshint ignore:end */\nfunction Leave(leave) {\n  this.leave = leave;\n  this._propertyName = 'leave';\n}\n\nLeave.prototype = Object.create(TwiML.prototype);\nLeave.prototype.constructor = Leave;\n\n\n/* jshint ignore:start */\n/**\n * <Hangup> TwiML Verb\n *\n * @constructor Hangup\n *\n * @param {object} hangup - <Hangup> TwiML Verb\n */\n/* jshint ignore:end */\nfunction Hangup(hangup) {\n  this.hangup = hangup;\n  this._propertyName = 'hangup';\n}\n\nHangup.prototype = Object.create(TwiML.prototype);\nHangup.prototype.constructor = Hangup;\n\n\n/* jshint ignore:start */\n/**\n * <Gather> TwiML Verb\n *\n * @constructor Gather\n *\n * @param {object} gather - <Gather> TwiML Verb\n */\n/* jshint ignore:end */\nfunction Gather(gather) {\n  this.gather = gather;\n  this._propertyName = 'gather';\n}\n\nGather.prototype = Object.create(TwiML.prototype);\nGather.prototype.constructor = Gather;\n\n/* jshint ignore:start */\n/**\n * <Say> TwiML Verb\n *\n * @function say\n * @memberof Gather#\n *\n * @param {object} attributes - TwiML attributes\n * @param {say.voice} [attributes.voice] - Voice to use\n * @param {number} [attributes.loop] - Times to loop message\n * @param {say.language} [attributes.language] - Message langauge\n * @param {string} message - Message to say\n *\n * @returns Say\n */\n/* jshint ignore:end */\nGather.prototype.say = function say(attributes, message) {\n  return new Say(this.gather.ele('Say', attributes, message));\n};\n\n/* jshint ignore:start */\n/**\n * <Pause> TwiML Verb\n *\n * @function pause\n * @memberof Gather#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {number} [attributes.length] - Length in seconds to pause\n *\n * @returns Pause\n */\n/* jshint ignore:end */\nGather.prototype.pause = function pause(attributes) {\n  return new Pause(this.gather.ele('Pause', attributes));\n};\n\n/* jshint ignore:start */\n/**\n * <Play> TwiML Verb\n *\n * @function play\n * @memberof Gather#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {number} [attributes.loop] - Times to loop media\n * @param {string} [attributes.digits] - Play DTMF tones for digits\n * @param {url} [url] - Media URL\n *\n * @returns Play\n */\n/* jshint ignore:end */\nGather.prototype.play = function play(attributes, url) {\n  return new Play(this.gather.ele('Play', attributes, url));\n};\n\n\n/* jshint ignore:start */\n/**\n * <Enqueue> TwiML Noun\n *\n * @constructor Enqueue\n *\n * @param {object} enqueue - <Enqueue> TwiML Noun\n */\n/* jshint ignore:end */\nfunction Enqueue(enqueue) {\n  this.enqueue = enqueue;\n  this._propertyName = 'enqueue';\n}\n\nEnqueue.prototype = Object.create(TwiML.prototype);\nEnqueue.prototype.constructor = Enqueue;\n\n/* jshint ignore:start */\n/**\n * <Task> TwiML Noun\n *\n * @function task\n * @memberof Enqueue#\n *\n * @param {object} attributes - TwiML attributes\n * @param {number} [attributes.priority] - Task priority\n * @param {number} [attributes.timeout] - Timeout associated with task\n * @param {string} body - TaskRouter task attributes\n *\n * @returns Task\n */\n/* jshint ignore:end */\nEnqueue.prototype.task = function task(attributes, body) {\n  return new Task(this.enqueue.ele('Task', attributes, body));\n};\n\n\n/* jshint ignore:start */\n/**\n * <Task> TwiML Noun\n *\n * @constructor Task\n *\n * @param {object} task - <Task> TwiML Noun\n */\n/* jshint ignore:end */\nfunction Task(task) {\n  this.task = task;\n  this._propertyName = 'task';\n}\n\nTask.prototype = Object.create(TwiML.prototype);\nTask.prototype.constructor = Task;\n\n\n/* jshint ignore:start */\n/**\n * <Echo> TwiML Verb\n *\n * @constructor Echo\n *\n * @param {object} echo - <Echo> TwiML Verb\n */\n/* jshint ignore:end */\nfunction Echo(echo) {\n  this.echo = echo;\n  this._propertyName = 'echo';\n}\n\nEcho.prototype = Object.create(TwiML.prototype);\nEcho.prototype.constructor = Echo;\n\n\n/* jshint ignore:start */\n/**\n * <Dial> TwiML Verb\n *\n * @constructor Dial\n *\n * @param {object} dial - <Dial> TwiML Verb\n */\n/* jshint ignore:end */\nfunction Dial(dial) {\n  this.dial = dial;\n  this._propertyName = 'dial';\n}\n\nDial.prototype = Object.create(TwiML.prototype);\nDial.prototype.constructor = Dial;\n\n/* jshint ignore:start */\n/**\n * <Client> TwiML Noun\n *\n * @function client\n * @memberof Dial#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.url] - Client URL\n * @param {string} [attributes.method] - Client URL Method\n * @param {client.event} [attributes.statusCallbackEvent] -\n *          Events to trigger status callback\n * @param {string} [attributes.statusCallback] - Status Callback URL\n * @param {string} [attributes.statusCallbackMethod] - Status Callback URL Method\n * @param {string} [identity] - Client identity\n *\n * @returns Client\n */\n/* jshint ignore:end */\nDial.prototype.client = function client(attributes, identity) {\n  return new Client(this.dial.ele('Client', attributes, identity));\n};\n\n/* jshint ignore:start */\n/**\n * <Conference> TwiML Noun\n *\n * @function conference\n * @memberof Dial#\n *\n * @param {object} attributes - TwiML attributes\n * @param {boolean} [attributes.muted] - Join the conference muted\n * @param {conference.beep} [attributes.beep] - Play beep when joining\n * @param {boolean} [attributes.startConferenceOnEnter] -\n *          Start the conference on enter\n * @param {boolean} [attributes.endConferenceOnExit] - End the conferenceon exit\n * @param {string} [attributes.waitUrl] - Wait URL\n * @param {string} [attributes.waitMethod] - Wait URL method\n * @param {number} [attributes.maxParticipants] - Maximum number of participants\n * @param {conference.record} [attributes.record] - Record the conference\n * @param {conference.region} [attributes.region] - Conference region\n * @param {string} [attributes.coach] - Call coach\n * @param {conference.trim} [attributes.trim] - Trim the conference recording\n * @param {conference.event} [attributes.statusCallbackEvent] -\n *          Events to call status callback URL\n * @param {string} [attributes.statusCallback] - Status callback URL\n * @param {string} [attributes.statusCallbackMethod] - Status callback URL method\n * @param {string} [attributes.recordingStatusCallback] -\n *          Recording status callback URL\n * @param {string} [attributes.recordingStatusCallbackMethod] -\n *          Recording status callback URL method\n * @param {conference.recording_event} [attributes.recordingStatusCallbackEvent] -\n *          Recording status callback events\n * @param {string} [attributes.eventCallbackUrl] - Event callback URL\n * @param {conference.jitter_buffer_size} [attributes.jitterBufferSize] -\n *          Size of jitter buffer for participant\n * @param {string} [attributes.participantLabel] - A label for participant\n * @param {string} name - Conference name\n *\n * @returns Conference\n */\n/* jshint ignore:end */\nDial.prototype.conference = function conference(attributes, name) {\n  return new Conference(this.dial.ele('Conference', attributes, name));\n};\n\n/* jshint ignore:start */\n/**\n * <Number> TwiML Noun\n *\n * @function number\n * @memberof Dial#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.sendDigits] -\n *          DTMF tones to play when the call is answered\n * @param {string} [attributes.url] - TwiML URL\n * @param {string} [attributes.method] - TwiML URL method\n * @param {number.event} [attributes.statusCallbackEvent] -\n *          Events to call status callback\n * @param {string} [attributes.statusCallback] - Status callback URL\n * @param {string} [attributes.statusCallbackMethod] - Status callback URL method\n * @param {string} [attributes.byoc] - BYOC trunk SID (Beta)\n * @param {phone_number} phoneNumber - Phone Number to dial\n *\n * @returns Number\n */\n/* jshint ignore:end */\nDial.prototype.number = function number(attributes, phoneNumber) {\n  return new Number(this.dial.ele('Number', attributes, phoneNumber));\n};\n\n/* jshint ignore:start */\n/**\n * <Queue> TwiML Noun\n *\n * @function queue\n * @memberof Dial#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.url] - Action URL\n * @param {string} [attributes.method] - Action URL method\n * @param {string} [attributes.reservationSid] - TaskRouter Reservation SID\n * @param {string} [attributes.postWorkActivitySid] - TaskRouter Activity SID\n * @param {string} name - Queue name\n *\n * @returns Queue\n */\n/* jshint ignore:end */\nDial.prototype.queue = function queue(attributes, name) {\n  return new Queue(this.dial.ele('Queue', attributes, name));\n};\n\n/* jshint ignore:start */\n/**\n * <Sim> TwiML Noun\n *\n * @function sim\n * @memberof Dial#\n *\n * @param {object} attributes - TwiML attributes\n * @param {sid} simSid - SIM SID\n *\n * @returns Sim\n */\n/* jshint ignore:end */\nDial.prototype.sim = function sim(attributes, simSid) {\n  return new Sim(this.dial.ele('Sim', attributes, simSid));\n};\n\n/* jshint ignore:start */\n/**\n * <Sip> TwiML Noun\n *\n * @function sip\n * @memberof Dial#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.username] - SIP Username\n * @param {string} [attributes.password] - SIP Password\n * @param {string} [attributes.url] - Action URL\n * @param {string} [attributes.method] - Action URL method\n * @param {sip.event} [attributes.statusCallbackEvent] - Status callback events\n * @param {string} [attributes.statusCallback] - Status callback URL\n * @param {string} [attributes.statusCallbackMethod] - Status callback URL method\n * @param {url} sipUrl - SIP URL\n *\n * @returns Sip\n */\n/* jshint ignore:end */\nDial.prototype.sip = function sip(attributes, sipUrl) {\n  return new Sip(this.dial.ele('Sip', attributes, sipUrl));\n};\n\n\n/* jshint ignore:start */\n/**\n * <Sip> TwiML Noun\n *\n * @constructor Sip\n *\n * @param {object} sip - <Sip> TwiML Noun\n */\n/* jshint ignore:end */\nfunction Sip(sip) {\n  this.sip = sip;\n  this._propertyName = 'sip';\n}\n\nSip.prototype = Object.create(TwiML.prototype);\nSip.prototype.constructor = Sip;\n\n\n/* jshint ignore:start */\n/**\n * <Sim> TwiML Noun\n *\n * @constructor Sim\n *\n * @param {object} sim - <Sim> TwiML Noun\n */\n/* jshint ignore:end */\nfunction Sim(sim) {\n  this.sim = sim;\n  this._propertyName = 'sim';\n}\n\nSim.prototype = Object.create(TwiML.prototype);\nSim.prototype.constructor = Sim;\n\n\n/* jshint ignore:start */\n/**\n * <Number> TwiML Noun\n *\n * @constructor Number\n *\n * @param {object} number - <Number> TwiML Noun\n */\n/* jshint ignore:end */\nfunction Number(number) {\n  this.number = number;\n  this._propertyName = 'number';\n}\n\nNumber.prototype = Object.create(TwiML.prototype);\nNumber.prototype.constructor = Number;\n\n\n/* jshint ignore:start */\n/**\n * <Conference> TwiML Noun\n *\n * @constructor Conference\n *\n * @param {object} conference - <Conference> TwiML Noun\n */\n/* jshint ignore:end */\nfunction Conference(conference) {\n  this.conference = conference;\n  this._propertyName = 'conference';\n}\n\nConference.prototype = Object.create(TwiML.prototype);\nConference.prototype.constructor = Conference;\n\n\n/* jshint ignore:start */\n/**\n * <Client> TwiML Noun\n *\n * @constructor Client\n *\n * @param {object} client - <Client> TwiML Noun\n */\n/* jshint ignore:end */\nfunction Client(client) {\n  this.client = client;\n  this._propertyName = 'client';\n}\n\nClient.prototype = Object.create(TwiML.prototype);\nClient.prototype.constructor = Client;\n\n/* jshint ignore:start */\n/**\n * <Identity> TwiML Noun\n *\n * @function identity\n * @memberof Client#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} clientIdentity - Identity of the client to dial\n *\n * @returns Identity\n */\n/* jshint ignore:end */\nClient.prototype.identity = function identity(attributes, clientIdentity) {\n  return new Identity(this.client.ele('Identity', attributes, clientIdentity));\n};\n\n/* jshint ignore:start */\n/**\n * <Parameter> TwiML Noun\n *\n * @function parameter\n * @memberof Client#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.name] - The name of the custom parameter\n * @param {string} [attributes.value] - The value of the custom parameter\n *\n * @returns Parameter\n */\n/* jshint ignore:end */\nClient.prototype.parameter = function parameter(attributes) {\n  return new Parameter(this.client.ele('Parameter', attributes));\n};\n\n\n/* jshint ignore:start */\n/**\n * <Identity> TwiML Noun\n *\n * @constructor Identity\n *\n * @param {object} identity - <Identity> TwiML Noun\n */\n/* jshint ignore:end */\nfunction Identity(identity) {\n  this.identity = identity;\n  this._propertyName = 'identity';\n}\n\nIdentity.prototype = Object.create(TwiML.prototype);\nIdentity.prototype.constructor = Identity;\n\n\n/* jshint ignore:start */\n/**\n * <Connect> TwiML Verb\n *\n * @constructor Connect\n *\n * @param {object} connect - <Connect> TwiML Verb\n */\n/* jshint ignore:end */\nfunction Connect(connect) {\n  this.connect = connect;\n  this._propertyName = 'connect';\n}\n\nConnect.prototype = Object.create(TwiML.prototype);\nConnect.prototype.constructor = Connect;\n\n/* jshint ignore:start */\n/**\n * <Room> TwiML Noun\n *\n * @function room\n * @memberof Connect#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} [attributes.participantIdentity] -\n *          Participant identity when connecting to the Room\n * @param {string} name - Room name\n *\n * @returns Room\n */\n/* jshint ignore:end */\nConnect.prototype.room = function room(attributes, name) {\n  return new Room(this.connect.ele('Room', attributes, name));\n};\n\n/* jshint ignore:start */\n/**\n * <Autopilot> TwiML Noun\n *\n * @function autopilot\n * @memberof Connect#\n *\n * @param {object} attributes - TwiML attributes\n * @param {string} name - Autopilot assistant sid or unique name\n *\n * @returns Autopilot\n */\n/* jshint ignore:end */\nConnect.prototype.autopilot = function autopilot(attributes, name) {\n  return new Autopilot(this.connect.ele('Autopilot', attributes, name));\n};\n\n/* jshint ignore:start */\n/**\n * <Stream> TwiML Noun\n *\n * @function stream\n * @memberof Connect#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.name] - Friendly name given to the Stream\n * @param {string} [attributes.connectorName] - Unique name for Stream Connector\n * @param {string} [attributes.url] -\n *          URL of the remote service where the Stream is routed\n * @param {stream.track} [attributes.track] -\n *          Track to be streamed to remote service\n * @param {string} [attributes.statusCallback] - Status Callback URL\n * @param {stream.status_callback_method} [attributes.statusCallbackMethod] -\n *          Status Callback URL method\n *\n * @returns Stream\n */\n/* jshint ignore:end */\nConnect.prototype.stream = function stream(attributes) {\n  return new Stream(this.connect.ele('Stream', attributes));\n};\n\n/* jshint ignore:start */\n/**\n * <VirtualAgent> TwiML Noun\n *\n * @function virtualAgent\n * @memberof Connect#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.connectorName] -\n *          Defines the conversation profile Dialogflow needs to use\n * @param {string} [attributes.language] -\n *          Language to be used by Dialogflow to transcribe speech\n * @param {boolean} [attributes.sentimentAnalysis] -\n *          Whether sentiment analysis needs to be enabled or not\n * @param {string} [attributes.statusCallback] -\n *          URL to post status callbacks from Twilio\n *\n * @returns VirtualAgent\n */\n/* jshint ignore:end */\nConnect.prototype.virtualAgent = function virtualAgent(attributes) {\n  return new VirtualAgent(this.connect.ele('VirtualAgent', attributes));\n};\n\n\n/* jshint ignore:start */\n/**\n * <VirtualAgent> TwiML Noun\n *\n * @constructor VirtualAgent\n *\n * @param {object} virtualAgent - <VirtualAgent> TwiML Noun\n */\n/* jshint ignore:end */\nfunction VirtualAgent(virtualAgent) {\n  this.virtualAgent = virtualAgent;\n  this._propertyName = 'virtualAgent';\n}\n\nVirtualAgent.prototype = Object.create(TwiML.prototype);\nVirtualAgent.prototype.constructor = VirtualAgent;\n\n\n/* jshint ignore:start */\n/**\n * <Autopilot> TwiML Noun\n *\n * @constructor Autopilot\n *\n * @param {object} autopilot - <Autopilot> TwiML Noun\n */\n/* jshint ignore:end */\nfunction Autopilot(autopilot) {\n  this.autopilot = autopilot;\n  this._propertyName = 'autopilot';\n}\n\nAutopilot.prototype = Object.create(TwiML.prototype);\nAutopilot.prototype.constructor = Autopilot;\n\n\n/* jshint ignore:start */\n/**\n * <Room> TwiML Noun\n *\n * @constructor Room\n *\n * @param {object} room - <Room> TwiML Noun\n */\n/* jshint ignore:end */\nfunction Room(room) {\n  this.room = room;\n  this._propertyName = 'room';\n}\n\nRoom.prototype = Object.create(TwiML.prototype);\nRoom.prototype.constructor = Room;\n\nmodule.exports = VoiceResponse;\n"]},"metadata":{},"sourceType":"script"}