{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar ActivityList = require('./workspace/activity').ActivityList;\n\nvar EventList = require('./workspace/event').EventList;\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar TaskChannelList = require('./workspace/taskChannel').TaskChannelList;\n\nvar TaskList = require('./workspace/task').TaskList;\n\nvar TaskQueueList = require('./workspace/taskQueue').TaskQueueList;\n\nvar WorkerList = require('./workspace/worker').WorkerList;\n\nvar WorkflowList = require('./workspace/workflow').WorkflowList;\n\nvar WorkspaceCumulativeStatisticsList = require('./workspace/workspaceCumulativeStatistics').WorkspaceCumulativeStatisticsList;\n\nvar WorkspaceRealTimeStatisticsList = require('./workspace/workspaceRealTimeStatistics').WorkspaceRealTimeStatisticsList;\n\nvar WorkspaceStatisticsList = require('./workspace/workspaceStatistics').WorkspaceStatisticsList;\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar WorkspaceList;\nvar WorkspacePage;\nvar WorkspaceInstance;\nvar WorkspaceContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkspaceList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nWorkspaceList = function WorkspaceList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function workspaces\n   * @memberof Twilio.Taskrouter.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext}\n   */\n\n  /* jshint ignore:end */\n  function WorkspaceListInstance(sid) {\n    return WorkspaceListInstance.get(sid);\n  }\n\n  WorkspaceListInstance._version = version; // Path Solution\n\n  WorkspaceListInstance._solution = {};\n  WorkspaceListInstance._uri = `/Workspaces`;\n  /* jshint ignore:start */\n\n  /**\n   * Streams WorkspaceInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          The friendly_name of the Workspace resources to read\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n  WorkspaceListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists WorkspaceInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          The friendly_name of the Workspace resources to read\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  WorkspaceListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of WorkspaceInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          The friendly_name of the Workspace resources to read\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  WorkspaceListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new WorkspacePage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of WorkspaceInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  WorkspaceListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new WorkspacePage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * create a WorkspaceInstance\n   *\n   * @function create\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.friendlyName - A string to describe the Workspace resource\n   * @param {string} [opts.eventCallbackUrl] -\n   *          The URL we should call when an event occurs\n   * @param {string} [opts.eventsFilter] -\n   *          The list of Workspace events for which to call event_callback_url\n   * @param {boolean} [opts.multiTaskEnabled] - Whether multi-tasking is enabled\n   * @param {string} [opts.template] - An available template name\n   * @param {workspace.queue_order} [opts.prioritizeQueueOrder] -\n   *          The type of TaskQueue to prioritize when Workers are receiving Tasks from both types of TaskQueues\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed WorkspaceInstance\n   */\n\n  /* jshint ignore:end */\n\n\n  WorkspaceListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.friendlyName)) {\n      throw new Error('Required parameter \"opts.friendlyName\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'EventCallbackUrl': _.get(opts, 'eventCallbackUrl'),\n      'EventsFilter': _.get(opts, 'eventsFilter'),\n      'MultiTaskEnabled': serialize.bool(_.get(opts, 'multiTaskEnabled')),\n      'Template': _.get(opts, 'template'),\n      'PrioritizeQueueOrder': _.get(opts, 'prioritizeQueueOrder')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new WorkspaceInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a workspace\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {string} sid - The SID of the resource to fetch\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  WorkspaceListInstance.get = function get(sid) {\n    return new WorkspaceContext(this._version, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  WorkspaceListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WorkspaceListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WorkspaceListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkspacePage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspacePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkspaceSolution} solution - Path solution\n *\n * @returns WorkspacePage\n */\n\n/* jshint ignore:end */\n\n\nWorkspacePage = function WorkspacePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WorkspacePage.prototype, Page.prototype);\n\nWorkspacePage.prototype.constructor = WorkspacePage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of WorkspaceInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspacePage#\n *\n * @param {WorkspacePayload} payload - Payload response from the API\n *\n * @returns WorkspaceInstance\n */\n\n/* jshint ignore:end */\n\nWorkspacePage.prototype.getInstance = function getInstance(payload) {\n  return new WorkspaceInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspacePage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkspacePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nWorkspacePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkspaceContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} defaultActivityName - The name of the default activity\n * @property {string} defaultActivitySid -\n *          The SID of the Activity that will be used when new Workers are created in the Workspace\n * @property {string} eventCallbackUrl - The URL we call when an event occurs\n * @property {string} eventsFilter -\n *          The list of Workspace events for which to call event_callback_url\n * @property {string} friendlyName -\n *          The string that you assigned to describe the Workspace resource\n * @property {boolean} multiTaskEnabled - Whether multi-tasking is enabled\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} timeoutActivityName - The name of the timeout activity\n * @property {string} timeoutActivitySid -\n *          The SID of the Activity that will be assigned to a Worker when a Task reservation times out without a response\n * @property {workspace.queue_order} prioritizeQueueOrder -\n *          The type of TaskQueue to prioritize when Workers are receiving Tasks from both types of TaskQueues\n * @property {string} url - The absolute URL of the Workspace resource\n * @property {string} links - The URLs of related resources\n *\n * @param {V1} version - Version of the resource\n * @param {WorkspacePayload} payload - The instance payload\n * @param {sid} sid - The SID of the resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceInstance = function WorkspaceInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.defaultActivityName = payload.default_activity_name; // jshint ignore:line\n\n  this.defaultActivitySid = payload.default_activity_sid; // jshint ignore:line\n\n  this.eventCallbackUrl = payload.event_callback_url; // jshint ignore:line\n\n  this.eventsFilter = payload.events_filter; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.multiTaskEnabled = payload.multi_task_enabled; // jshint ignore:line\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.timeoutActivityName = payload.timeout_activity_name; // jshint ignore:line\n\n  this.timeoutActivitySid = payload.timeout_activity_sid; // jshint ignore:line\n\n  this.prioritizeQueueOrder = payload.prioritize_queue_order; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.links = payload.links; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(WorkspaceInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new WorkspaceContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a WorkspaceInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n\n/* jshint ignore:end */\n\nWorkspaceInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a WorkspaceInstance\n *\n * @function update\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.defaultActivitySid] -\n *          The SID of the Activity that will be used when new Workers are created in the Workspace\n * @param {string} [opts.eventCallbackUrl] -\n *          The URL we should call when an event occurs\n * @param {string} [opts.eventsFilter] -\n *          The list of Workspace events for which to call event_callback_url\n * @param {string} [opts.friendlyName] -\n *          A string to describe the Workspace resource\n * @param {boolean} [opts.multiTaskEnabled] - Whether multi-tasking is enabled\n * @param {string} [opts.timeoutActivitySid] -\n *          The SID of the Activity that will be assigned to a Worker when a Task reservation times out without a response\n * @param {workspace.queue_order} [opts.prioritizeQueueOrder] -\n *          The type of TaskQueue to prioritize when Workers are receiving Tasks from both types of TaskQueues\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a WorkspaceInstance\n *\n * @function remove\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Access the activities\n *\n * @function activities\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.ActivityList}\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceInstance.prototype.activities = function activities() {\n  return this._proxy.activities;\n};\n/* jshint ignore:start */\n\n/**\n * Access the events\n *\n * @function events\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.EventList}\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceInstance.prototype.events = function events() {\n  return this._proxy.events;\n};\n/* jshint ignore:start */\n\n/**\n * Access the tasks\n *\n * @function tasks\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskList}\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceInstance.prototype.tasks = function tasks() {\n  return this._proxy.tasks;\n};\n/* jshint ignore:start */\n\n/**\n * Access the taskQueues\n *\n * @function taskQueues\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueList}\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceInstance.prototype.taskQueues = function taskQueues() {\n  return this._proxy.taskQueues;\n};\n/* jshint ignore:start */\n\n/**\n * Access the workers\n *\n * @function workers\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerList}\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceInstance.prototype.workers = function workers() {\n  return this._proxy.workers;\n};\n/* jshint ignore:start */\n\n/**\n * Access the workflows\n *\n * @function workflows\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList}\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceInstance.prototype.workflows = function workflows() {\n  return this._proxy.workflows;\n};\n/* jshint ignore:start */\n\n/**\n * Access the statistics\n *\n * @function statistics\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsList}\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceInstance.prototype.statistics = function statistics() {\n  return this._proxy.statistics;\n};\n/* jshint ignore:start */\n\n/**\n * Access the realTimeStatistics\n *\n * @function realTimeStatistics\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceRealTimeStatisticsList}\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceInstance.prototype.realTimeStatistics = function realTimeStatistics() {\n  return this._proxy.realTimeStatistics;\n};\n/* jshint ignore:start */\n\n/**\n * Access the cumulativeStatistics\n *\n * @function cumulativeStatistics\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceCumulativeStatisticsList}\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceInstance.prototype.cumulativeStatistics = function cumulativeStatistics() {\n  return this._proxy.cumulativeStatistics;\n};\n/* jshint ignore:start */\n\n/**\n * Access the taskChannels\n *\n * @function taskChannels\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskChannelList}\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceInstance.prototype.taskChannels = function taskChannels() {\n  return this._proxy.taskChannels;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nWorkspaceInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkspaceContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext\n *\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.ActivityList} activities -\n *          activities resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.EventList} events -\n *          events resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.TaskList} tasks -\n *          tasks resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueList} taskQueues -\n *          taskQueues resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkerList} workers -\n *          workers resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList} workflows -\n *          workflows resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsList} statistics -\n *          statistics resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceRealTimeStatisticsList} realTimeStatistics -\n *          realTimeStatistics resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceCumulativeStatisticsList} cumulativeStatistics -\n *          cumulativeStatistics resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.TaskChannelList} taskChannels -\n *          taskChannels resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The SID of the resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceContext = function WorkspaceContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/Workspaces/${sid}`; // Dependents\n\n  this._activities = undefined;\n  this._events = undefined;\n  this._tasks = undefined;\n  this._taskQueues = undefined;\n  this._workers = undefined;\n  this._workflows = undefined;\n  this._statistics = undefined;\n  this._realTimeStatistics = undefined;\n  this._cumulativeStatistics = undefined;\n  this._taskChannels = undefined;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a WorkspaceInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new WorkspaceInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a WorkspaceInstance\n *\n * @function update\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.defaultActivitySid] -\n *          The SID of the Activity that will be used when new Workers are created in the Workspace\n * @param {string} [opts.eventCallbackUrl] -\n *          The URL we should call when an event occurs\n * @param {string} [opts.eventsFilter] -\n *          The list of Workspace events for which to call event_callback_url\n * @param {string} [opts.friendlyName] -\n *          A string to describe the Workspace resource\n * @param {boolean} [opts.multiTaskEnabled] - Whether multi-tasking is enabled\n * @param {string} [opts.timeoutActivitySid] -\n *          The SID of the Activity that will be assigned to a Worker when a Task reservation times out without a response\n * @param {workspace.queue_order} [opts.prioritizeQueueOrder] -\n *          The type of TaskQueue to prioritize when Workers are receiving Tasks from both types of TaskQueues\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'DefaultActivitySid': _.get(opts, 'defaultActivitySid'),\n    'EventCallbackUrl': _.get(opts, 'eventCallbackUrl'),\n    'EventsFilter': _.get(opts, 'eventsFilter'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'MultiTaskEnabled': serialize.bool(_.get(opts, 'multiTaskEnabled')),\n    'TimeoutActivitySid': _.get(opts, 'timeoutActivitySid'),\n    'PrioritizeQueueOrder': _.get(opts, 'prioritizeQueueOrder')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new WorkspaceInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a WorkspaceInstance\n *\n * @function remove\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(WorkspaceContext.prototype, 'activities', {\n  get: function () {\n    if (!this._activities) {\n      this._activities = new ActivityList(this._version, this._solution.sid);\n    }\n\n    return this._activities;\n  }\n});\nObject.defineProperty(WorkspaceContext.prototype, 'events', {\n  get: function () {\n    if (!this._events) {\n      this._events = new EventList(this._version, this._solution.sid);\n    }\n\n    return this._events;\n  }\n});\nObject.defineProperty(WorkspaceContext.prototype, 'tasks', {\n  get: function () {\n    if (!this._tasks) {\n      this._tasks = new TaskList(this._version, this._solution.sid);\n    }\n\n    return this._tasks;\n  }\n});\nObject.defineProperty(WorkspaceContext.prototype, 'taskQueues', {\n  get: function () {\n    if (!this._taskQueues) {\n      this._taskQueues = new TaskQueueList(this._version, this._solution.sid);\n    }\n\n    return this._taskQueues;\n  }\n});\nObject.defineProperty(WorkspaceContext.prototype, 'workers', {\n  get: function () {\n    if (!this._workers) {\n      this._workers = new WorkerList(this._version, this._solution.sid);\n    }\n\n    return this._workers;\n  }\n});\nObject.defineProperty(WorkspaceContext.prototype, 'workflows', {\n  get: function () {\n    if (!this._workflows) {\n      this._workflows = new WorkflowList(this._version, this._solution.sid);\n    }\n\n    return this._workflows;\n  }\n});\nObject.defineProperty(WorkspaceContext.prototype, 'statistics', {\n  get: function () {\n    if (!this._statistics) {\n      this._statistics = new WorkspaceStatisticsList(this._version, this._solution.sid);\n    }\n\n    return this._statistics;\n  }\n});\nObject.defineProperty(WorkspaceContext.prototype, 'realTimeStatistics', {\n  get: function () {\n    if (!this._realTimeStatistics) {\n      this._realTimeStatistics = new WorkspaceRealTimeStatisticsList(this._version, this._solution.sid);\n    }\n\n    return this._realTimeStatistics;\n  }\n});\nObject.defineProperty(WorkspaceContext.prototype, 'cumulativeStatistics', {\n  get: function () {\n    if (!this._cumulativeStatistics) {\n      this._cumulativeStatistics = new WorkspaceCumulativeStatisticsList(this._version, this._solution.sid);\n    }\n\n    return this._cumulativeStatistics;\n  }\n});\nObject.defineProperty(WorkspaceContext.prototype, 'taskChannels', {\n  get: function () {\n    if (!this._taskChannels) {\n      this._taskChannels = new TaskChannelList(this._version, this._solution.sid);\n    }\n\n    return this._taskChannels;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\nWorkspaceContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWorkspaceContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WorkspaceList: WorkspaceList,\n  WorkspacePage: WorkspacePage,\n  WorkspaceInstance: WorkspaceInstance,\n  WorkspaceContext: WorkspaceContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/taskrouter/v1/workspace.js"],"names":["Q","require","_","util","ActivityList","EventList","Page","TaskChannelList","TaskList","TaskQueueList","WorkerList","WorkflowList","WorkspaceCumulativeStatisticsList","WorkspaceRealTimeStatisticsList","WorkspaceStatisticsList","deserialize","serialize","values","WorkspaceList","WorkspacePage","WorkspaceInstance","WorkspaceContext","version","WorkspaceListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","create","friendlyName","bool","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","defaultActivityName","default_activity_name","defaultActivitySid","default_activity_sid","eventCallbackUrl","event_callback_url","eventsFilter","events_filter","friendly_name","multiTaskEnabled","multi_task_enabled","timeoutActivityName","timeout_activity_name","timeoutActivitySid","timeout_activity_sid","prioritizeQueueOrder","prioritize_queue_order","url","links","_context","undefined","Object","defineProperty","fetch","_proxy","update","remove","activities","events","tasks","taskQueues","workers","workflows","statistics","realTimeStatistics","cumulativeStatistics","taskChannels","_activities","_events","_tasks","_taskQueues","_workers","_workflows","_statistics","_realTimeStatistics","_cumulativeStatistics","_taskChannels","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar ActivityList = require('./workspace/activity').ActivityList;\nvar EventList = require('./workspace/event').EventList;\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar TaskChannelList = require('./workspace/taskChannel').TaskChannelList;\nvar TaskList = require('./workspace/task').TaskList;\nvar TaskQueueList = require('./workspace/taskQueue').TaskQueueList;\nvar WorkerList = require('./workspace/worker').WorkerList;\nvar WorkflowList = require('./workspace/workflow').WorkflowList;\nvar WorkspaceCumulativeStatisticsList = require(\n    './workspace/workspaceCumulativeStatistics').WorkspaceCumulativeStatisticsList;\nvar WorkspaceRealTimeStatisticsList = require(\n    './workspace/workspaceRealTimeStatistics').WorkspaceRealTimeStatisticsList;\nvar WorkspaceStatisticsList = require(\n    './workspace/workspaceStatistics').WorkspaceStatisticsList;\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar WorkspaceList;\nvar WorkspacePage;\nvar WorkspaceInstance;\nvar WorkspaceContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkspaceList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nWorkspaceList = function WorkspaceList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function workspaces\n   * @memberof Twilio.Taskrouter.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext}\n   */\n  /* jshint ignore:end */\n  function WorkspaceListInstance(sid) {\n    return WorkspaceListInstance.get(sid);\n  }\n\n  WorkspaceListInstance._version = version;\n  // Path Solution\n  WorkspaceListInstance._solution = {};\n  WorkspaceListInstance._uri = `/Workspaces`;\n  /* jshint ignore:start */\n  /**\n   * Streams WorkspaceInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          The friendly_name of the Workspace resources to read\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists WorkspaceInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          The friendly_name of the Workspace resources to read\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of WorkspaceInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          The friendly_name of the Workspace resources to read\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new WorkspacePage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of WorkspaceInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new WorkspacePage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a WorkspaceInstance\n   *\n   * @function create\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.friendlyName - A string to describe the Workspace resource\n   * @param {string} [opts.eventCallbackUrl] -\n   *          The URL we should call when an event occurs\n   * @param {string} [opts.eventsFilter] -\n   *          The list of Workspace events for which to call event_callback_url\n   * @param {boolean} [opts.multiTaskEnabled] - Whether multi-tasking is enabled\n   * @param {string} [opts.template] - An available template name\n   * @param {workspace.queue_order} [opts.prioritizeQueueOrder] -\n   *          The type of TaskQueue to prioritize when Workers are receiving Tasks from both types of TaskQueues\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed WorkspaceInstance\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.friendlyName)) {\n      throw new Error('Required parameter \"opts.friendlyName\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'EventCallbackUrl': _.get(opts, 'eventCallbackUrl'),\n      'EventsFilter': _.get(opts, 'eventsFilter'),\n      'MultiTaskEnabled': serialize.bool(_.get(opts, 'multiTaskEnabled')),\n      'Template': _.get(opts, 'template'),\n      'PrioritizeQueueOrder': _.get(opts, 'prioritizeQueueOrder')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new WorkspaceInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a workspace\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {string} sid - The SID of the resource to fetch\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext}\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.get = function get(sid) {\n    return new WorkspaceContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WorkspaceListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WorkspaceListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkspacePage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspacePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkspaceSolution} solution - Path solution\n *\n * @returns WorkspacePage\n */\n/* jshint ignore:end */\nWorkspacePage = function WorkspacePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WorkspacePage.prototype, Page.prototype);\nWorkspacePage.prototype.constructor = WorkspacePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of WorkspaceInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspacePage#\n *\n * @param {WorkspacePayload} payload - Payload response from the API\n *\n * @returns WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspacePage.prototype.getInstance = function getInstance(payload) {\n  return new WorkspaceInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspacePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkspacePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkspacePage.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkspaceContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} defaultActivityName - The name of the default activity\n * @property {string} defaultActivitySid -\n *          The SID of the Activity that will be used when new Workers are created in the Workspace\n * @property {string} eventCallbackUrl - The URL we call when an event occurs\n * @property {string} eventsFilter -\n *          The list of Workspace events for which to call event_callback_url\n * @property {string} friendlyName -\n *          The string that you assigned to describe the Workspace resource\n * @property {boolean} multiTaskEnabled - Whether multi-tasking is enabled\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} timeoutActivityName - The name of the timeout activity\n * @property {string} timeoutActivitySid -\n *          The SID of the Activity that will be assigned to a Worker when a Task reservation times out without a response\n * @property {workspace.queue_order} prioritizeQueueOrder -\n *          The type of TaskQueue to prioritize when Workers are receiving Tasks from both types of TaskQueues\n * @property {string} url - The absolute URL of the Workspace resource\n * @property {string} links - The URLs of related resources\n *\n * @param {V1} version - Version of the resource\n * @param {WorkspacePayload} payload - The instance payload\n * @param {sid} sid - The SID of the resource to fetch\n */\n/* jshint ignore:end */\nWorkspaceInstance = function WorkspaceInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.defaultActivityName = payload.default_activity_name; // jshint ignore:line\n  this.defaultActivitySid = payload.default_activity_sid; // jshint ignore:line\n  this.eventCallbackUrl = payload.event_callback_url; // jshint ignore:line\n  this.eventsFilter = payload.events_filter; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.multiTaskEnabled = payload.multi_task_enabled; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.timeoutActivityName = payload.timeout_activity_name; // jshint ignore:line\n  this.timeoutActivitySid = payload.timeout_activity_sid; // jshint ignore:line\n  this.prioritizeQueueOrder = payload.prioritize_queue_order; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(WorkspaceInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new WorkspaceContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a WorkspaceInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a WorkspaceInstance\n *\n * @function update\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.defaultActivitySid] -\n *          The SID of the Activity that will be used when new Workers are created in the Workspace\n * @param {string} [opts.eventCallbackUrl] -\n *          The URL we should call when an event occurs\n * @param {string} [opts.eventsFilter] -\n *          The list of Workspace events for which to call event_callback_url\n * @param {string} [opts.friendlyName] -\n *          A string to describe the Workspace resource\n * @param {boolean} [opts.multiTaskEnabled] - Whether multi-tasking is enabled\n * @param {string} [opts.timeoutActivitySid] -\n *          The SID of the Activity that will be assigned to a Worker when a Task reservation times out without a response\n * @param {workspace.queue_order} [opts.prioritizeQueueOrder] -\n *          The type of TaskQueue to prioritize when Workers are receiving Tasks from both types of TaskQueues\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a WorkspaceInstance\n *\n * @function remove\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the activities\n *\n * @function activities\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.ActivityList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.activities = function activities() {\n  return this._proxy.activities;\n};\n\n/* jshint ignore:start */\n/**\n * Access the events\n *\n * @function events\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.EventList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.events = function events() {\n  return this._proxy.events;\n};\n\n/* jshint ignore:start */\n/**\n * Access the tasks\n *\n * @function tasks\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.tasks = function tasks() {\n  return this._proxy.tasks;\n};\n\n/* jshint ignore:start */\n/**\n * Access the taskQueues\n *\n * @function taskQueues\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.taskQueues = function taskQueues() {\n  return this._proxy.taskQueues;\n};\n\n/* jshint ignore:start */\n/**\n * Access the workers\n *\n * @function workers\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.workers = function workers() {\n  return this._proxy.workers;\n};\n\n/* jshint ignore:start */\n/**\n * Access the workflows\n *\n * @function workflows\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.workflows = function workflows() {\n  return this._proxy.workflows;\n};\n\n/* jshint ignore:start */\n/**\n * Access the statistics\n *\n * @function statistics\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.statistics = function statistics() {\n  return this._proxy.statistics;\n};\n\n/* jshint ignore:start */\n/**\n * Access the realTimeStatistics\n *\n * @function realTimeStatistics\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceRealTimeStatisticsList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.realTimeStatistics = function realTimeStatistics() {\n  return this._proxy.realTimeStatistics;\n};\n\n/* jshint ignore:start */\n/**\n * Access the cumulativeStatistics\n *\n * @function cumulativeStatistics\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceCumulativeStatisticsList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.cumulativeStatistics = function\n    cumulativeStatistics() {\n  return this._proxy.cumulativeStatistics;\n};\n\n/* jshint ignore:start */\n/**\n * Access the taskChannels\n *\n * @function taskChannels\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskChannelList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.taskChannels = function taskChannels() {\n  return this._proxy.taskChannels;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkspaceInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkspaceContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext\n *\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.ActivityList} activities -\n *          activities resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.EventList} events -\n *          events resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.TaskList} tasks -\n *          tasks resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueList} taskQueues -\n *          taskQueues resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkerList} workers -\n *          workers resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList} workflows -\n *          workflows resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsList} statistics -\n *          statistics resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceRealTimeStatisticsList} realTimeStatistics -\n *          realTimeStatistics resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceCumulativeStatisticsList} cumulativeStatistics -\n *          cumulativeStatistics resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.TaskChannelList} taskChannels -\n *          taskChannels resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The SID of the resource to fetch\n */\n/* jshint ignore:end */\nWorkspaceContext = function WorkspaceContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/Workspaces/${sid}`;\n\n  // Dependents\n  this._activities = undefined;\n  this._events = undefined;\n  this._tasks = undefined;\n  this._taskQueues = undefined;\n  this._workers = undefined;\n  this._workflows = undefined;\n  this._statistics = undefined;\n  this._realTimeStatistics = undefined;\n  this._cumulativeStatistics = undefined;\n  this._taskChannels = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a WorkspaceInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspaceContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new WorkspaceInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a WorkspaceInstance\n *\n * @function update\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.defaultActivitySid] -\n *          The SID of the Activity that will be used when new Workers are created in the Workspace\n * @param {string} [opts.eventCallbackUrl] -\n *          The URL we should call when an event occurs\n * @param {string} [opts.eventsFilter] -\n *          The list of Workspace events for which to call event_callback_url\n * @param {string} [opts.friendlyName] -\n *          A string to describe the Workspace resource\n * @param {boolean} [opts.multiTaskEnabled] - Whether multi-tasking is enabled\n * @param {string} [opts.timeoutActivitySid] -\n *          The SID of the Activity that will be assigned to a Worker when a Task reservation times out without a response\n * @param {workspace.queue_order} [opts.prioritizeQueueOrder] -\n *          The type of TaskQueue to prioritize when Workers are receiving Tasks from both types of TaskQueues\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspaceContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'DefaultActivitySid': _.get(opts, 'defaultActivitySid'),\n    'EventCallbackUrl': _.get(opts, 'eventCallbackUrl'),\n    'EventsFilter': _.get(opts, 'eventsFilter'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'MultiTaskEnabled': serialize.bool(_.get(opts, 'multiTaskEnabled')),\n    'TimeoutActivitySid': _.get(opts, 'timeoutActivitySid'),\n    'PrioritizeQueueOrder': _.get(opts, 'prioritizeQueueOrder')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new WorkspaceInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a WorkspaceInstance\n *\n * @function remove\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspaceContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'activities', {\n    get: function() {\n      if (!this._activities) {\n        this._activities = new ActivityList(this._version, this._solution.sid);\n      }\n      return this._activities;\n    }\n});\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'events', {\n    get: function() {\n      if (!this._events) {\n        this._events = new EventList(this._version, this._solution.sid);\n      }\n      return this._events;\n    }\n});\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'tasks', {\n    get: function() {\n      if (!this._tasks) {\n        this._tasks = new TaskList(this._version, this._solution.sid);\n      }\n      return this._tasks;\n    }\n});\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'taskQueues', {\n    get: function() {\n      if (!this._taskQueues) {\n        this._taskQueues = new TaskQueueList(this._version, this._solution.sid);\n      }\n      return this._taskQueues;\n    }\n});\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'workers', {\n    get: function() {\n      if (!this._workers) {\n        this._workers = new WorkerList(this._version, this._solution.sid);\n      }\n      return this._workers;\n    }\n});\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'workflows', {\n    get: function() {\n      if (!this._workflows) {\n        this._workflows = new WorkflowList(this._version, this._solution.sid);\n      }\n      return this._workflows;\n    }\n});\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'statistics', {\n    get: function() {\n      if (!this._statistics) {\n        this._statistics = new WorkspaceStatisticsList(this._version, this._solution.sid);\n      }\n      return this._statistics;\n    }\n});\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'realTimeStatistics', {\n    get: function() {\n      if (!this._realTimeStatistics) {\n        this._realTimeStatistics = new WorkspaceRealTimeStatisticsList(this._version, this._solution.sid);\n      }\n      return this._realTimeStatistics;\n    }\n});\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'cumulativeStatistics', {\n    get: function() {\n      if (!this._cumulativeStatistics) {\n        this._cumulativeStatistics = new WorkspaceCumulativeStatisticsList(\n          this._version,\n          this._solution.sid\n        );\n      }\n      return this._cumulativeStatistics;\n    }\n});\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'taskChannels', {\n    get: function() {\n      if (!this._taskChannels) {\n        this._taskChannels = new TaskChannelList(this._version, this._solution.sid);\n      }\n      return this._taskChannels;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkspaceContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWorkspaceContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WorkspaceList: WorkspaceList,\n  WorkspacePage: WorkspacePage,\n  WorkspaceInstance: WorkspaceInstance,\n  WorkspaceContext: WorkspaceContext\n};\n"]},"metadata":{},"sourceType":"script"}