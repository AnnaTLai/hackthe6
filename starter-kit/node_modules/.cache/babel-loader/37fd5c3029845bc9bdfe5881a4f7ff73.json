{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar CustomerProfilesEntityAssignmentsList;\nvar CustomerProfilesEntityAssignmentsPage;\nvar CustomerProfilesEntityAssignmentsInstance;\nvar CustomerProfilesEntityAssignmentsContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the CustomerProfilesEntityAssignmentsList\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList\n *\n * @param {Twilio.Trusthub.V1} version - Version of the resource\n * @param {string} customerProfileSid -\n *          The unique string that identifies the CustomerProfile resource.\n */\n\n/* jshint ignore:end */\n\nCustomerProfilesEntityAssignmentsList = function CustomerProfilesEntityAssignmentsList(version, customerProfileSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function customerProfilesEntityAssignments\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsContext}\n   */\n\n  /* jshint ignore:end */\n  function CustomerProfilesEntityAssignmentsListInstance(sid) {\n    return CustomerProfilesEntityAssignmentsListInstance.get(sid);\n  }\n\n  CustomerProfilesEntityAssignmentsListInstance._version = version; // Path Solution\n\n  CustomerProfilesEntityAssignmentsListInstance._solution = {\n    customerProfileSid: customerProfileSid\n  };\n  CustomerProfilesEntityAssignmentsListInstance._uri = `/CustomerProfiles/${customerProfileSid}/EntityAssignments`;\n  /* jshint ignore:start */\n\n  /**\n   * create a CustomerProfilesEntityAssignmentsInstance\n   *\n   * @function create\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.objectSid - The sid of an object bag\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed CustomerProfilesEntityAssignmentsInstance\n   */\n\n  /* jshint ignore:end */\n\n  CustomerProfilesEntityAssignmentsListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.objectSid)) {\n      throw new Error('Required parameter \"opts.objectSid\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'ObjectSid': _.get(opts, 'objectSid')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new CustomerProfilesEntityAssignmentsInstance(this._version, payload, this._solution.customerProfileSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams CustomerProfilesEntityAssignmentsInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  CustomerProfilesEntityAssignmentsListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists CustomerProfilesEntityAssignmentsInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  CustomerProfilesEntityAssignmentsListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of CustomerProfilesEntityAssignmentsInstance records from\n   * the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  CustomerProfilesEntityAssignmentsListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new CustomerProfilesEntityAssignmentsPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of CustomerProfilesEntityAssignmentsInstance\n   * records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  CustomerProfilesEntityAssignmentsListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new CustomerProfilesEntityAssignmentsPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a customer_profiles_entity_assignments\n   *\n   * @function get\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  CustomerProfilesEntityAssignmentsListInstance.get = function get(sid) {\n    return new CustomerProfilesEntityAssignmentsContext(this._version, this._solution.customerProfileSid, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  CustomerProfilesEntityAssignmentsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  CustomerProfilesEntityAssignmentsListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return CustomerProfilesEntityAssignmentsListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the CustomerProfilesEntityAssignmentsPage\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {CustomerProfilesEntityAssignmentsSolution} solution - Path solution\n *\n * @returns CustomerProfilesEntityAssignmentsPage\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesEntityAssignmentsPage = function CustomerProfilesEntityAssignmentsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(CustomerProfilesEntityAssignmentsPage.prototype, Page.prototype);\n\nCustomerProfilesEntityAssignmentsPage.prototype.constructor = CustomerProfilesEntityAssignmentsPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of CustomerProfilesEntityAssignmentsInstance\n *\n * @function getInstance\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsPage#\n *\n * @param {CustomerProfilesEntityAssignmentsPayload} payload -\n *          Payload response from the API\n *\n * @returns CustomerProfilesEntityAssignmentsInstance\n */\n\n/* jshint ignore:end */\n\nCustomerProfilesEntityAssignmentsPage.prototype.getInstance = function getInstance(payload) {\n  return new CustomerProfilesEntityAssignmentsInstance(this._version, payload, this._solution.customerProfileSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesEntityAssignmentsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nCustomerProfilesEntityAssignmentsPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the CustomerProfilesEntityAssignmentsContext\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} customerProfileSid -\n *          The unique string that identifies the CustomerProfile resource.\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} objectSid - The sid of an object bag\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {string} url - The absolute URL of the Identity resource\n *\n * @param {V1} version - Version of the resource\n * @param {CustomerProfilesEntityAssignmentsPayload} payload - The instance payload\n * @param {sid} customerProfileSid -\n *          The unique string that identifies the CustomerProfile resource.\n * @param {sid} sid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesEntityAssignmentsInstance = function CustomerProfilesEntityAssignmentsInstance(version, payload, customerProfileSid, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.customerProfileSid = payload.customer_profile_sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.objectSid = payload.object_sid; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    customerProfileSid: customerProfileSid,\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(CustomerProfilesEntityAssignmentsInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new CustomerProfilesEntityAssignmentsContext(this._version, this._solution.customerProfileSid, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a CustomerProfilesEntityAssignmentsInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesEntityAssignmentsInstance\n */\n\n/* jshint ignore:end */\n\nCustomerProfilesEntityAssignmentsInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a CustomerProfilesEntityAssignmentsInstance\n *\n * @function remove\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesEntityAssignmentsInstance\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesEntityAssignmentsInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesEntityAssignmentsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nCustomerProfilesEntityAssignmentsInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the CustomerProfilesEntityAssignmentsContext\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} customerProfileSid -\n *          The unique string that identifies the resource.\n * @param {sid} sid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesEntityAssignmentsContext = function CustomerProfilesEntityAssignmentsContext(version, customerProfileSid, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    customerProfileSid: customerProfileSid,\n    sid: sid\n  };\n  this._uri = `/CustomerProfiles/${customerProfileSid}/EntityAssignments/${sid}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a CustomerProfilesEntityAssignmentsInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesEntityAssignmentsInstance\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesEntityAssignmentsContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new CustomerProfilesEntityAssignmentsInstance(this._version, payload, this._solution.customerProfileSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a CustomerProfilesEntityAssignmentsInstance\n *\n * @function remove\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesEntityAssignmentsInstance\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesEntityAssignmentsContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesEntityAssignmentsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nCustomerProfilesEntityAssignmentsContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  CustomerProfilesEntityAssignmentsList: CustomerProfilesEntityAssignmentsList,\n  CustomerProfilesEntityAssignmentsPage: CustomerProfilesEntityAssignmentsPage,\n  CustomerProfilesEntityAssignmentsInstance: CustomerProfilesEntityAssignmentsInstance,\n  CustomerProfilesEntityAssignmentsContext: CustomerProfilesEntityAssignmentsContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/trusthub/v1/customerProfiles/customerProfilesEntityAssignments.js"],"names":["Q","require","_","util","Page","deserialize","values","CustomerProfilesEntityAssignmentsList","CustomerProfilesEntityAssignmentsPage","CustomerProfilesEntityAssignmentsInstance","CustomerProfilesEntityAssignmentsContext","version","customerProfileSid","CustomerProfilesEntityAssignmentsListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","objectSid","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","customer_profile_sid","accountSid","account_sid","object_sid","dateCreated","iso8601DateTime","date_created","url","_context","undefined","Object","defineProperty","fetch","_proxy","remove","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar CustomerProfilesEntityAssignmentsList;\nvar CustomerProfilesEntityAssignmentsPage;\nvar CustomerProfilesEntityAssignmentsInstance;\nvar CustomerProfilesEntityAssignmentsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the CustomerProfilesEntityAssignmentsList\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList\n *\n * @param {Twilio.Trusthub.V1} version - Version of the resource\n * @param {string} customerProfileSid -\n *          The unique string that identifies the CustomerProfile resource.\n */\n/* jshint ignore:end */\nCustomerProfilesEntityAssignmentsList = function\n    CustomerProfilesEntityAssignmentsList(version, customerProfileSid) {\n  /* jshint ignore:start */\n  /**\n   * @function customerProfilesEntityAssignments\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsContext}\n   */\n  /* jshint ignore:end */\n  function CustomerProfilesEntityAssignmentsListInstance(sid) {\n    return CustomerProfilesEntityAssignmentsListInstance.get(sid);\n  }\n\n  CustomerProfilesEntityAssignmentsListInstance._version = version;\n  // Path Solution\n  CustomerProfilesEntityAssignmentsListInstance._solution = {customerProfileSid: customerProfileSid};\n  CustomerProfilesEntityAssignmentsListInstance._uri = `/CustomerProfiles/${customerProfileSid}/EntityAssignments`;\n  /* jshint ignore:start */\n  /**\n   * create a CustomerProfilesEntityAssignmentsInstance\n   *\n   * @function create\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.objectSid - The sid of an object bag\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed CustomerProfilesEntityAssignmentsInstance\n   */\n  /* jshint ignore:end */\n  CustomerProfilesEntityAssignmentsListInstance.create = function create(opts,\n      callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.objectSid)) {\n      throw new Error('Required parameter \"opts.objectSid\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({'ObjectSid': _.get(opts, 'objectSid')});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new CustomerProfilesEntityAssignmentsInstance(\n        this._version,\n        payload,\n        this._solution.customerProfileSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams CustomerProfilesEntityAssignmentsInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  CustomerProfilesEntityAssignmentsListInstance.each = function each(opts,\n      callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists CustomerProfilesEntityAssignmentsInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  CustomerProfilesEntityAssignmentsListInstance.list = function list(opts,\n      callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of CustomerProfilesEntityAssignmentsInstance records from\n   * the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  CustomerProfilesEntityAssignmentsListInstance.page = function page(opts,\n      callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new CustomerProfilesEntityAssignmentsPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of CustomerProfilesEntityAssignmentsInstance\n   * records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  CustomerProfilesEntityAssignmentsListInstance.getPage = function\n      getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new CustomerProfilesEntityAssignmentsPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a customer_profiles_entity_assignments\n   *\n   * @function get\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsContext}\n   */\n  /* jshint ignore:end */\n  CustomerProfilesEntityAssignmentsListInstance.get = function get(sid) {\n    return new CustomerProfilesEntityAssignmentsContext(\n      this._version,\n      this._solution.customerProfileSid,\n      sid\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  CustomerProfilesEntityAssignmentsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  CustomerProfilesEntityAssignmentsListInstance[util.inspect.custom] = function\n      inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return CustomerProfilesEntityAssignmentsListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the CustomerProfilesEntityAssignmentsPage\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {CustomerProfilesEntityAssignmentsSolution} solution - Path solution\n *\n * @returns CustomerProfilesEntityAssignmentsPage\n */\n/* jshint ignore:end */\nCustomerProfilesEntityAssignmentsPage = function\n    CustomerProfilesEntityAssignmentsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(CustomerProfilesEntityAssignmentsPage.prototype, Page.prototype);\nCustomerProfilesEntityAssignmentsPage.prototype.constructor = CustomerProfilesEntityAssignmentsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of CustomerProfilesEntityAssignmentsInstance\n *\n * @function getInstance\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsPage#\n *\n * @param {CustomerProfilesEntityAssignmentsPayload} payload -\n *          Payload response from the API\n *\n * @returns CustomerProfilesEntityAssignmentsInstance\n */\n/* jshint ignore:end */\nCustomerProfilesEntityAssignmentsPage.prototype.getInstance = function\n    getInstance(payload) {\n  return new CustomerProfilesEntityAssignmentsInstance(\n    this._version,\n    payload,\n    this._solution.customerProfileSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nCustomerProfilesEntityAssignmentsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nCustomerProfilesEntityAssignmentsPage.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the CustomerProfilesEntityAssignmentsContext\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} customerProfileSid -\n *          The unique string that identifies the CustomerProfile resource.\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} objectSid - The sid of an object bag\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {string} url - The absolute URL of the Identity resource\n *\n * @param {V1} version - Version of the resource\n * @param {CustomerProfilesEntityAssignmentsPayload} payload - The instance payload\n * @param {sid} customerProfileSid -\n *          The unique string that identifies the CustomerProfile resource.\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nCustomerProfilesEntityAssignmentsInstance = function\n    CustomerProfilesEntityAssignmentsInstance(version, payload,\n    customerProfileSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.customerProfileSid = payload.customer_profile_sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.objectSid = payload.object_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {customerProfileSid: customerProfileSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(CustomerProfilesEntityAssignmentsInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new CustomerProfilesEntityAssignmentsContext(\n          this._version,\n          this._solution.customerProfileSid,\n          this._solution.sid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a CustomerProfilesEntityAssignmentsInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesEntityAssignmentsInstance\n */\n/* jshint ignore:end */\nCustomerProfilesEntityAssignmentsInstance.prototype.fetch = function\n    fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a CustomerProfilesEntityAssignmentsInstance\n *\n * @function remove\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesEntityAssignmentsInstance\n */\n/* jshint ignore:end */\nCustomerProfilesEntityAssignmentsInstance.prototype.remove = function\n    remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nCustomerProfilesEntityAssignmentsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nCustomerProfilesEntityAssignmentsInstance.prototype[util.inspect.custom] =\n    function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the CustomerProfilesEntityAssignmentsContext\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} customerProfileSid -\n *          The unique string that identifies the resource.\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nCustomerProfilesEntityAssignmentsContext = function\n    CustomerProfilesEntityAssignmentsContext(version, customerProfileSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {customerProfileSid: customerProfileSid, sid: sid, };\n  this._uri = `/CustomerProfiles/${customerProfileSid}/EntityAssignments/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a CustomerProfilesEntityAssignmentsInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesEntityAssignmentsInstance\n */\n/* jshint ignore:end */\nCustomerProfilesEntityAssignmentsContext.prototype.fetch = function\n    fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new CustomerProfilesEntityAssignmentsInstance(\n      this._version,\n      payload,\n      this._solution.customerProfileSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a CustomerProfilesEntityAssignmentsInstance\n *\n * @function remove\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesEntityAssignmentsInstance\n */\n/* jshint ignore:end */\nCustomerProfilesEntityAssignmentsContext.prototype.remove = function\n    remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nCustomerProfilesEntityAssignmentsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nCustomerProfilesEntityAssignmentsContext.prototype[util.inspect.custom] =\n    function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  CustomerProfilesEntityAssignmentsList: CustomerProfilesEntityAssignmentsList,\n  CustomerProfilesEntityAssignmentsPage: CustomerProfilesEntityAssignmentsPage,\n  CustomerProfilesEntityAssignmentsInstance: CustomerProfilesEntityAssignmentsInstance,\n  CustomerProfilesEntityAssignmentsContext: CustomerProfilesEntityAssignmentsContext\n};\n"]},"metadata":{},"sourceType":"script"}