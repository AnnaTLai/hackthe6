{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar SinkValidateList;\nvar SinkValidatePage;\nvar SinkValidateInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the SinkValidateList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SinkContext.SinkValidateList\n *\n * @param {Twilio.Events.V1} version - Version of the resource\n * @param {string} sid - A string that uniquely identifies this Sink.\n */\n\n/* jshint ignore:end */\n\nSinkValidateList = function SinkValidateList(version, sid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function sinkValidate\n   * @memberof Twilio.Events.V1.SinkContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Events.V1.SinkContext.SinkValidateContext}\n   */\n\n  /* jshint ignore:end */\n  function SinkValidateListInstance(sid) {\n    return SinkValidateListInstance.get(sid);\n  }\n\n  SinkValidateListInstance._version = version; // Path Solution\n\n  SinkValidateListInstance._solution = {\n    sid: sid\n  };\n  SinkValidateListInstance._uri = `/Sinks/${sid}/Validate`;\n  /* jshint ignore:start */\n\n  /**\n   * create a SinkValidateInstance\n   *\n   * @function create\n   * @memberof Twilio.Events.V1.SinkContext.SinkValidateList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.testId -\n   *          A string that uniquely identifies the test event for a Sink being validated.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed SinkValidateInstance\n   */\n\n  /* jshint ignore:end */\n\n  SinkValidateListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.testId)) {\n      throw new Error('Required parameter \"opts.testId\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'TestId': _.get(opts, 'testId')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SinkValidateInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Events.V1.SinkContext.SinkValidateList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  SinkValidateListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SinkValidateListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SinkValidateListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SinkValidatePage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SinkContext.SinkValidatePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SinkValidateSolution} solution - Path solution\n *\n * @returns SinkValidatePage\n */\n\n/* jshint ignore:end */\n\n\nSinkValidatePage = function SinkValidatePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SinkValidatePage.prototype, Page.prototype);\n\nSinkValidatePage.prototype.constructor = SinkValidatePage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of SinkValidateInstance\n *\n * @function getInstance\n * @memberof Twilio.Events.V1.SinkContext.SinkValidatePage#\n *\n * @param {SinkValidatePayload} payload - Payload response from the API\n *\n * @returns SinkValidateInstance\n */\n\n/* jshint ignore:end */\n\nSinkValidatePage.prototype.getInstance = function getInstance(payload) {\n  return new SinkValidateInstance(this._version, payload, this._solution.sid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Events.V1.SinkContext.SinkValidatePage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSinkValidatePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nSinkValidatePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SinkValidateContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SinkContext.SinkValidateInstance\n *\n * @property {string} result -\n *          Feedback indicating whether the given Sink was validated.\n *\n * @param {V1} version - Version of the resource\n * @param {SinkValidatePayload} payload - The instance payload\n * @param {sid} sid - A string that uniquely identifies this Sink.\n */\n\n/* jshint ignore:end */\n\n\nSinkValidateInstance = function SinkValidateInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.result = payload.result; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid\n  };\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Events.V1.SinkContext.SinkValidateInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSinkValidateInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nSinkValidateInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SinkValidateList: SinkValidateList,\n  SinkValidatePage: SinkValidatePage,\n  SinkValidateInstance: SinkValidateInstance\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/events/v1/sink/sinkValidate.js"],"names":["Q","require","_","util","Page","values","SinkValidateList","SinkValidatePage","SinkValidateInstance","version","sid","SinkValidateListInstance","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","testId","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","result","_context","undefined","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar SinkValidateList;\nvar SinkValidatePage;\nvar SinkValidateInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the SinkValidateList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SinkContext.SinkValidateList\n *\n * @param {Twilio.Events.V1} version - Version of the resource\n * @param {string} sid - A string that uniquely identifies this Sink.\n */\n/* jshint ignore:end */\nSinkValidateList = function SinkValidateList(version, sid) {\n  /* jshint ignore:start */\n  /**\n   * @function sinkValidate\n   * @memberof Twilio.Events.V1.SinkContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Events.V1.SinkContext.SinkValidateContext}\n   */\n  /* jshint ignore:end */\n  function SinkValidateListInstance(sid) {\n    return SinkValidateListInstance.get(sid);\n  }\n\n  SinkValidateListInstance._version = version;\n  // Path Solution\n  SinkValidateListInstance._solution = {sid: sid};\n  SinkValidateListInstance._uri = `/Sinks/${sid}/Validate`;\n  /* jshint ignore:start */\n  /**\n   * create a SinkValidateInstance\n   *\n   * @function create\n   * @memberof Twilio.Events.V1.SinkContext.SinkValidateList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.testId -\n   *          A string that uniquely identifies the test event for a Sink being validated.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed SinkValidateInstance\n   */\n  /* jshint ignore:end */\n  SinkValidateListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.testId)) {\n      throw new Error('Required parameter \"opts.testId\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({'TestId': _.get(opts, 'testId')});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SinkValidateInstance(this._version, payload));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Events.V1.SinkContext.SinkValidateList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SinkValidateListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SinkValidateListInstance[util.inspect.custom] = function inspect(depth, options)\n      {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SinkValidateListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SinkValidatePage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SinkContext.SinkValidatePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SinkValidateSolution} solution - Path solution\n *\n * @returns SinkValidatePage\n */\n/* jshint ignore:end */\nSinkValidatePage = function SinkValidatePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SinkValidatePage.prototype, Page.prototype);\nSinkValidatePage.prototype.constructor = SinkValidatePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SinkValidateInstance\n *\n * @function getInstance\n * @memberof Twilio.Events.V1.SinkContext.SinkValidatePage#\n *\n * @param {SinkValidatePayload} payload - Payload response from the API\n *\n * @returns SinkValidateInstance\n */\n/* jshint ignore:end */\nSinkValidatePage.prototype.getInstance = function getInstance(payload) {\n  return new SinkValidateInstance(this._version, payload, this._solution.sid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Events.V1.SinkContext.SinkValidatePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSinkValidatePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSinkValidatePage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SinkValidateContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SinkContext.SinkValidateInstance\n *\n * @property {string} result -\n *          Feedback indicating whether the given Sink was validated.\n *\n * @param {V1} version - Version of the resource\n * @param {SinkValidatePayload} payload - The instance payload\n * @param {sid} sid - A string that uniquely identifies this Sink.\n */\n/* jshint ignore:end */\nSinkValidateInstance = function SinkValidateInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.result = payload.result; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Events.V1.SinkContext.SinkValidateInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSinkValidateInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSinkValidateInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SinkValidateList: SinkValidateList,\n  SinkValidatePage: SinkValidatePage,\n  SinkValidateInstance: SinkValidateInstance\n};\n"]},"metadata":{},"sourceType":"script"}