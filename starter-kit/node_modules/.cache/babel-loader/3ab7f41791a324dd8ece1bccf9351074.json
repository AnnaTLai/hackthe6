{"ast":null,"code":"// Generated by CoffeeScript 2.4.1\n(function () {\n  var XMLStringWriter, XMLWriterBase;\n  XMLWriterBase = require('./XMLWriterBase'); // Prints XML nodes as plain text\n\n  module.exports = XMLStringWriter = class XMLStringWriter extends XMLWriterBase {\n    // Initializes a new instance of `XMLStringWriter`\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation string\n    // `options.newline` newline sequence\n    // `options.offset` a fixed number of indentations to add to every line\n    // `options.allowEmpty` do not self close empty element tags\n    // 'options.dontPrettyTextNodes' if any text is present in node, don't indent or LF\n    // `options.spaceBeforeSlash` add a space before the closing slash of empty elements\n    constructor(options) {\n      super(options);\n    }\n\n    document(doc, options) {\n      var child, i, len, r, ref;\n      options = this.filterOptions(options);\n      r = '';\n      ref = doc.children;\n\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += this.writeChildNode(child, options, 0);\n      } // remove trailing newline\n\n\n      if (options.pretty && r.slice(-options.newline.length) === options.newline) {\n        r = r.slice(0, -options.newline.length);\n      }\n\n      return r;\n    }\n\n  };\n}).call(this);","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/xmlbuilder/lib/XMLStringWriter.js"],"names":["XMLStringWriter","XMLWriterBase","require","module","exports","constructor","options","document","doc","child","i","len","r","ref","filterOptions","children","length","writeChildNode","pretty","slice","newline","call"],"mappings":"AAAA;AACA,CAAC,YAAW;AACV,MAAIA,eAAJ,EAAqBC,aAArB;AAEAA,EAAAA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAAvB,CAHU,CAKV;;AACAC,EAAAA,MAAM,CAACC,OAAP,GAAiBJ,eAAe,GAAG,MAAMA,eAAN,SAA8BC,aAA9B,CAA4C;AAC7E;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACAI,IAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,YAAMA,OAAN;AACD;;AAEDC,IAAAA,QAAQ,CAACC,GAAD,EAAMF,OAAN,EAAe;AACrB,UAAIG,KAAJ,EAAWC,CAAX,EAAcC,GAAd,EAAmBC,CAAnB,EAAsBC,GAAtB;AACAP,MAAAA,OAAO,GAAG,KAAKQ,aAAL,CAAmBR,OAAnB,CAAV;AACAM,MAAAA,CAAC,GAAG,EAAJ;AACAC,MAAAA,GAAG,GAAGL,GAAG,CAACO,QAAV;;AACA,WAAKL,CAAC,GAAG,CAAJ,EAAOC,GAAG,GAAGE,GAAG,CAACG,MAAtB,EAA8BN,CAAC,GAAGC,GAAlC,EAAuCD,CAAC,EAAxC,EAA4C;AAC1CD,QAAAA,KAAK,GAAGI,GAAG,CAACH,CAAD,CAAX;AACAE,QAAAA,CAAC,IAAI,KAAKK,cAAL,CAAoBR,KAApB,EAA2BH,OAA3B,EAAoC,CAApC,CAAL;AACD,OARoB,CASrB;;;AACA,UAAIA,OAAO,CAACY,MAAR,IAAkBN,CAAC,CAACO,KAAF,CAAQ,CAACb,OAAO,CAACc,OAAR,CAAgBJ,MAAzB,MAAqCV,OAAO,CAACc,OAAnE,EAA4E;AAC1ER,QAAAA,CAAC,GAAGA,CAAC,CAACO,KAAF,CAAQ,CAAR,EAAW,CAACb,OAAO,CAACc,OAAR,CAAgBJ,MAA5B,CAAJ;AACD;;AACD,aAAOJ,CAAP;AACD;;AA5B4E,GAA/E;AAgCD,CAtCD,EAsCGS,IAtCH,CAsCQ,IAtCR","sourcesContent":["// Generated by CoffeeScript 2.4.1\n(function() {\n  var XMLStringWriter, XMLWriterBase;\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  // Prints XML nodes as plain text\n  module.exports = XMLStringWriter = class XMLStringWriter extends XMLWriterBase {\n    // Initializes a new instance of `XMLStringWriter`\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation string\n    // `options.newline` newline sequence\n    // `options.offset` a fixed number of indentations to add to every line\n    // `options.allowEmpty` do not self close empty element tags\n    // 'options.dontPrettyTextNodes' if any text is present in node, don't indent or LF\n    // `options.spaceBeforeSlash` add a space before the closing slash of empty elements\n    constructor(options) {\n      super(options);\n    }\n\n    document(doc, options) {\n      var child, i, len, r, ref;\n      options = this.filterOptions(options);\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += this.writeChildNode(child, options, 0);\n      }\n      // remove trailing newline\n      if (options.pretty && r.slice(-options.newline.length) === options.newline) {\n        r = r.slice(0, -options.newline.length);\n      }\n      return r;\n    }\n\n  };\n\n}).call(this);\n"]},"metadata":{},"sourceType":"module"}