{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar TrustProductsEvaluationsList;\nvar TrustProductsEvaluationsPage;\nvar TrustProductsEvaluationsInstance;\nvar TrustProductsEvaluationsContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the TrustProductsEvaluationsList\n *\n * @constructor Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsList\n *\n * @param {Twilio.Trusthub.V1} version - Version of the resource\n * @param {string} trustProductSid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\nTrustProductsEvaluationsList = function TrustProductsEvaluationsList(version, trustProductSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function trustProductsEvaluations\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsContext}\n   */\n\n  /* jshint ignore:end */\n  function TrustProductsEvaluationsListInstance(sid) {\n    return TrustProductsEvaluationsListInstance.get(sid);\n  }\n\n  TrustProductsEvaluationsListInstance._version = version; // Path Solution\n\n  TrustProductsEvaluationsListInstance._solution = {\n    trustProductSid: trustProductSid\n  };\n  TrustProductsEvaluationsListInstance._uri = `/TrustProducts/${trustProductSid}/Evaluations`;\n  /* jshint ignore:start */\n\n  /**\n   * create a TrustProductsEvaluationsInstance\n   *\n   * @function create\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.policySid - The unique string of a policy\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed TrustProductsEvaluationsInstance\n   */\n\n  /* jshint ignore:end */\n\n  TrustProductsEvaluationsListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.policySid)) {\n      throw new Error('Required parameter \"opts.policySid\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PolicySid': _.get(opts, 'policySid')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new TrustProductsEvaluationsInstance(this._version, payload, this._solution.trustProductSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams TrustProductsEvaluationsInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  TrustProductsEvaluationsListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists TrustProductsEvaluationsInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  TrustProductsEvaluationsListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of TrustProductsEvaluationsInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  TrustProductsEvaluationsListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new TrustProductsEvaluationsPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of TrustProductsEvaluationsInstance records from\n   * the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  TrustProductsEvaluationsListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new TrustProductsEvaluationsPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a trust_products_evaluations\n   *\n   * @function get\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsList#\n   *\n   * @param {string} sid - The unique string that identifies the Evaluation resource\n   *\n   * @returns {Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  TrustProductsEvaluationsListInstance.get = function get(sid) {\n    return new TrustProductsEvaluationsContext(this._version, this._solution.trustProductSid, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  TrustProductsEvaluationsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TrustProductsEvaluationsListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TrustProductsEvaluationsListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TrustProductsEvaluationsPage\n *\n * @constructor Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TrustProductsEvaluationsSolution} solution - Path solution\n *\n * @returns TrustProductsEvaluationsPage\n */\n\n/* jshint ignore:end */\n\n\nTrustProductsEvaluationsPage = function TrustProductsEvaluationsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TrustProductsEvaluationsPage.prototype, Page.prototype);\n\nTrustProductsEvaluationsPage.prototype.constructor = TrustProductsEvaluationsPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of TrustProductsEvaluationsInstance\n *\n * @function getInstance\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsPage#\n *\n * @param {TrustProductsEvaluationsPayload} payload - Payload response from the API\n *\n * @returns TrustProductsEvaluationsInstance\n */\n\n/* jshint ignore:end */\n\nTrustProductsEvaluationsPage.prototype.getInstance = function getInstance(payload) {\n  return new TrustProductsEvaluationsInstance(this._version, payload, this._solution.trustProductSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTrustProductsEvaluationsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nTrustProductsEvaluationsPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TrustProductsEvaluationsContext\n *\n * @constructor Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsInstance\n *\n * @property {string} sid -\n *          The unique string that identifies the Evaluation resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} policySid - The unique string of a policy\n * @property {string} trustProductSid -\n *          The unique string that identifies the resource\n * @property {trust_products_evaluations.status} status -\n *          The compliance status of the Evaluation resource\n * @property {object} results - The results of the Evaluation resource\n * @property {Date} dateCreated - The date_created\n * @property {string} url - The url\n *\n * @param {V1} version - Version of the resource\n * @param {TrustProductsEvaluationsPayload} payload - The instance payload\n * @param {sid} trustProductSid - The unique string that identifies the resource\n * @param {sid} sid - The unique string that identifies the Evaluation resource\n */\n\n/* jshint ignore:end */\n\n\nTrustProductsEvaluationsInstance = function TrustProductsEvaluationsInstance(version, payload, trustProductSid, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.policySid = payload.policy_sid; // jshint ignore:line\n\n  this.trustProductSid = payload.trust_product_sid; // jshint ignore:line\n\n  this.status = payload.status; // jshint ignore:line\n\n  this.results = payload.results; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    trustProductSid: trustProductSid,\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(TrustProductsEvaluationsInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new TrustProductsEvaluationsContext(this._version, this._solution.trustProductSid, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a TrustProductsEvaluationsInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrustProductsEvaluationsInstance\n */\n\n/* jshint ignore:end */\n\nTrustProductsEvaluationsInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTrustProductsEvaluationsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nTrustProductsEvaluationsInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TrustProductsEvaluationsContext\n *\n * @constructor Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} trustProductSid - The unique string that identifies the resource\n * @param {sid} sid - The unique string that identifies the Evaluation resource\n */\n\n/* jshint ignore:end */\n\n\nTrustProductsEvaluationsContext = function TrustProductsEvaluationsContext(version, trustProductSid, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    trustProductSid: trustProductSid,\n    sid: sid\n  };\n  this._uri = `/TrustProducts/${trustProductSid}/Evaluations/${sid}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a TrustProductsEvaluationsInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrustProductsEvaluationsInstance\n */\n\n/* jshint ignore:end */\n\n\nTrustProductsEvaluationsContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new TrustProductsEvaluationsInstance(this._version, payload, this._solution.trustProductSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTrustProductsEvaluationsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nTrustProductsEvaluationsContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TrustProductsEvaluationsList: TrustProductsEvaluationsList,\n  TrustProductsEvaluationsPage: TrustProductsEvaluationsPage,\n  TrustProductsEvaluationsInstance: TrustProductsEvaluationsInstance,\n  TrustProductsEvaluationsContext: TrustProductsEvaluationsContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/rest/trusthub/v1/trustProducts/trustProductsEvaluations.js"],"names":["Q","require","_","util","Page","deserialize","values","TrustProductsEvaluationsList","TrustProductsEvaluationsPage","TrustProductsEvaluationsInstance","TrustProductsEvaluationsContext","version","trustProductSid","TrustProductsEvaluationsListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","policySid","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","policy_sid","trust_product_sid","status","results","dateCreated","iso8601DateTime","date_created","url","_context","undefined","Object","defineProperty","fetch","_proxy","module","exports"],"mappings":"AAAA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,GAAD,CAAf;AAAuB;;;AACvB,IAAIC,CAAC,GAAGD,OAAO,CAAC,QAAD,CAAf;AAA4B;;;AAC5B,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;AAA6B;;;AAC7B,IAAIG,IAAI,GAAGH,OAAO,CAAC,uBAAD,CAAlB;AAA8C;;;AAC9C,IAAII,WAAW,GAAGJ,OAAO,CACrB,8BADqB,CAAzB;AACsC;;;AACtC,IAAIK,MAAM,GAAGL,OAAO,CAAC,yBAAD,CAApB;AAAkD;;;AAElD,IAAIM,4BAAJ;AACA,IAAIC,4BAAJ;AACA,IAAIC,gCAAJ;AACA,IAAIC,+BAAJ;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAH,4BAA4B,GAAG,SAASA,4BAAT,CAAsCI,OAAtC,EAC3BC,eAD2B,EACV;AACnB;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACA,WAASC,oCAAT,CAA8CC,GAA9C,EAAmD;AACjD,WAAOD,oCAAoC,CAACE,GAArC,CAAyCD,GAAzC,CAAP;AACD;;AAEDD,EAAAA,oCAAoC,CAACG,QAArC,GAAgDL,OAAhD,CAfmB,CAgBnB;;AACAE,EAAAA,oCAAoC,CAACI,SAArC,GAAiD;AAACL,IAAAA,eAAe,EAAEA;AAAlB,GAAjD;AACAC,EAAAA,oCAAoC,CAACK,IAArC,GAA6C,kBAAiBN,eAAgB,cAA9E;AACA;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;;AACAC,EAAAA,oCAAoC,CAACM,MAArC,GAA8C,SAASA,MAAT,CAAgBC,IAAhB,EAAsBC,QAAtB,EAAgC;AAC5E,QAAInB,CAAC,CAACoB,WAAF,CAAcF,IAAd,CAAJ,EAAyB;AACvB,YAAM,IAAIG,KAAJ,CAAU,oCAAV,CAAN;AACD;;AACD,QAAIrB,CAAC,CAACoB,WAAF,CAAcF,IAAI,CAACI,SAAnB,CAAJ,EAAmC;AACjC,YAAM,IAAID,KAAJ,CAAU,8CAAV,CAAN;AACD;;AAED,QAAIE,QAAQ,GAAGzB,CAAC,CAAC0B,KAAF,EAAf;AACA,QAAIC,IAAI,GAAGrB,MAAM,CAACsB,EAAP,CAAU;AAAC,mBAAa1B,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,WAAZ;AAAd,KAAV,CAAX;;AAEA,QAAIS,OAAO,GAAG,KAAKb,QAAL,CAAcG,MAAd,CAAqB;AAACW,MAAAA,GAAG,EAAE,KAAKZ,IAAX;AAAiBa,MAAAA,MAAM,EAAE,MAAzB;AAAiCJ,MAAAA,IAAI,EAAEA;AAAvC,KAArB,CAAd;;AAEAE,IAAAA,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;AACvCR,MAAAA,QAAQ,CAACS,OAAT,CAAiB,IAAIzB,gCAAJ,CACf,KAAKO,QADU,EAEfiB,OAFe,EAGf,KAAKhB,SAAL,CAAeL,eAHA,EAIf,KAAKK,SAAL,CAAeH,GAJA,CAAjB;AAMD,KAPsB,CAOrBqB,IAPqB,CAOhB,IAPgB,CAAb,CAAV;AASAN,IAAAA,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;AAC5BZ,MAAAA,QAAQ,CAACa,MAAT,CAAgBD,KAAhB;AACD,KAFD;;AAIA,QAAInC,CAAC,CAACqC,UAAF,CAAalB,QAAb,CAAJ,EAA4B;AAC1BI,MAAAA,QAAQ,CAACI,OAAT,CAAiBW,OAAjB,CAAyBnB,QAAzB;AACD;;AAED,WAAOI,QAAQ,CAACI,OAAhB;AACD,GA/BD;AAiCA;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;;;AACAhB,EAAAA,oCAAoC,CAAC4B,IAArC,GAA4C,SAASA,IAAT,CAAcrB,IAAd,EAAoBC,QAApB,EAA8B;AACxE,QAAInB,CAAC,CAACqC,UAAF,CAAanB,IAAb,CAAJ,EAAwB;AACtBC,MAAAA,QAAQ,GAAGD,IAAX;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;;AACDA,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;;AACA,QAAIA,IAAI,CAACC,QAAT,EAAmB;AACjBA,MAAAA,QAAQ,GAAGD,IAAI,CAACC,QAAhB;AACD;;AACD,QAAInB,CAAC,CAACoB,WAAF,CAAcD,QAAd,CAAJ,EAA6B;AAC3B,YAAM,IAAIE,KAAJ,CAAU,oCAAV,CAAN;AACD;;AAED,QAAImB,IAAI,GAAG,KAAX;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,eAAe,GAAG,CAAtB;;AACA,QAAIC,MAAM,GAAG,KAAK7B,QAAL,CAAc8B,UAAd,CAAyB;AACpCC,MAAAA,KAAK,EAAE3B,IAAI,CAAC2B,KADwB;AAEpCC,MAAAA,QAAQ,EAAE5B,IAAI,CAAC4B;AAFqB,KAAzB,CAAb;;AAKA,aAASC,UAAT,CAAoBZ,KAApB,EAA2B;AACzBK,MAAAA,IAAI,GAAG,IAAP;;AACA,UAAIxC,CAAC,CAACqC,UAAF,CAAanB,IAAI,CAACsB,IAAlB,CAAJ,EAA6B;AAC3BtB,QAAAA,IAAI,CAACsB,IAAL,CAAUL,KAAV;AACD;AACF;;AAED,aAASa,aAAT,CAAuBC,EAAvB,EAA2B;AACzB,UAAItB,OAAO,GAAGsB,EAAE,EAAhB;;AACA,UAAIjD,CAAC,CAACoB,WAAF,CAAcO,OAAd,CAAJ,EAA4B;AAC1BoB,QAAAA,UAAU;AACV;AACD;;AAEDpB,MAAAA,OAAO,CAACG,IAAR,CAAa,UAASoB,IAAT,EAAe;AAC1BlD,QAAAA,CAAC,CAACuC,IAAF,CAAOW,IAAI,CAACC,SAAZ,EAAuB,UAASC,QAAT,EAAmB;AACxC,cAAIZ,IAAI,IAAK,CAACxC,CAAC,CAACoB,WAAF,CAAcF,IAAI,CAAC2B,KAAnB,CAAD,IAA8BH,eAAe,IAAIxB,IAAI,CAAC2B,KAAnE,EAA2E;AACzEL,YAAAA,IAAI,GAAG,IAAP;AACA,mBAAO,KAAP;AACD;;AAEDE,UAAAA,eAAe;AACfvB,UAAAA,QAAQ,CAACiC,QAAD,EAAWL,UAAX,CAAR;AACD,SARD;;AAUA,YAAI,CAACP,IAAL,EAAW;AACTC,UAAAA,WAAW;AACXO,UAAAA,aAAa,CAAChD,CAAC,CAACiC,IAAF,CAAOiB,IAAI,CAACG,QAAZ,EAAsBH,IAAtB,CAAD,CAAb;AACD;AACF,OAfD;AAiBAvB,MAAAA,OAAO,CAACO,KAAR,CAAca,UAAd;AACD;;AAEDC,IAAAA,aAAa,CAAChD,CAAC,CAACiC,IAAF,CAAO,KAAKiB,IAAZ,EAAkB,IAAlB,EAAwBlD,CAAC,CAACsD,KAAF,CAAQpC,IAAR,EAAcyB,MAAd,CAAxB,CAAD,CAAb;AACD,GAxDD;AA0DA;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;;;AACAhC,EAAAA,oCAAoC,CAAC4C,IAArC,GAA4C,SAASA,IAAT,CAAcrC,IAAd,EAAoBC,QAApB,EAA8B;AACxE,QAAInB,CAAC,CAACqC,UAAF,CAAanB,IAAb,CAAJ,EAAwB;AACtBC,MAAAA,QAAQ,GAAGD,IAAX;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;;AACDA,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACA,QAAIK,QAAQ,GAAGzB,CAAC,CAAC0B,KAAF,EAAf;AACA,QAAIgC,YAAY,GAAG,EAAnB;;AACAtC,IAAAA,IAAI,CAACC,QAAL,GAAgB,UAASsC,QAAT,EAAmBjB,IAAnB,EAAyB;AACvCgB,MAAAA,YAAY,CAACE,IAAb,CAAkBD,QAAlB;;AAEA,UAAI,CAACzD,CAAC,CAACoB,WAAF,CAAcF,IAAI,CAAC2B,KAAnB,CAAD,IAA8BW,YAAY,CAACG,MAAb,KAAwBzC,IAAI,CAAC2B,KAA/D,EAAsE;AACpEL,QAAAA,IAAI;AACL;AACF,KAND;;AAQAtB,IAAAA,IAAI,CAACsB,IAAL,GAAY,UAASL,KAAT,EAAgB;AAC1B,UAAInC,CAAC,CAACoB,WAAF,CAAce,KAAd,CAAJ,EAA0B;AACxBZ,QAAAA,QAAQ,CAACS,OAAT,CAAiBwB,YAAjB;AACD,OAFD,MAEO;AACLjC,QAAAA,QAAQ,CAACa,MAAT,CAAgBD,KAAhB;AACD;AACF,KAND;;AAQA,QAAInC,CAAC,CAACqC,UAAF,CAAalB,QAAb,CAAJ,EAA4B;AAC1BI,MAAAA,QAAQ,CAACI,OAAT,CAAiBW,OAAjB,CAAyBnB,QAAzB;AACD;;AAED,SAAKoB,IAAL,CAAUrB,IAAV;AACA,WAAOK,QAAQ,CAACI,OAAhB;AACD,GA9BD;AAgCA;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;;;AACAhB,EAAAA,oCAAoC,CAACuC,IAArC,GAA4C,SAASA,IAAT,CAAchC,IAAd,EAAoBC,QAApB,EAA8B;AACxE,QAAInB,CAAC,CAACqC,UAAF,CAAanB,IAAb,CAAJ,EAAwB;AACtBC,MAAAA,QAAQ,GAAGD,IAAX;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;;AACDA,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AAEA,QAAIK,QAAQ,GAAGzB,CAAC,CAAC0B,KAAF,EAAf;AACA,QAAIC,IAAI,GAAGrB,MAAM,CAACsB,EAAP,CAAU;AACnB,mBAAaR,IAAI,CAAC0C,SADC;AAEnB,cAAQ1C,IAAI,CAAC2C,UAFM;AAGnB,kBAAY3C,IAAI,CAAC4B;AAHE,KAAV,CAAX;;AAMA,QAAInB,OAAO,GAAG,KAAKb,QAAL,CAAcoC,IAAd,CAAmB;AAACtB,MAAAA,GAAG,EAAE,KAAKZ,IAAX;AAAiBa,MAAAA,MAAM,EAAE,KAAzB;AAAgCiC,MAAAA,MAAM,EAAErC;AAAxC,KAAnB,CAAd;;AAEAE,IAAAA,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;AACvCR,MAAAA,QAAQ,CAACS,OAAT,CAAiB,IAAI1B,4BAAJ,CAAiC,KAAKQ,QAAtC,EAAgDiB,OAAhD,EAAyD,KAAKhB,SAA9D,CAAjB;AACD,KAFsB,CAErBkB,IAFqB,CAEhB,IAFgB,CAAb,CAAV;AAIAN,IAAAA,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;AAC5BZ,MAAAA,QAAQ,CAACa,MAAT,CAAgBD,KAAhB;AACD,KAFD;;AAIA,QAAInC,CAAC,CAACqC,UAAF,CAAalB,QAAb,CAAJ,EAA4B;AAC1BI,MAAAA,QAAQ,CAACI,OAAT,CAAiBW,OAAjB,CAAyBnB,QAAzB;AACD;;AAED,WAAOI,QAAQ,CAACI,OAAhB;AACD,GA7BD;AA+BA;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;;;AACAhB,EAAAA,oCAAoC,CAACoD,OAArC,GAA+C,SAASA,OAAT,CAAiBC,SAAjB,EAC3C7C,QAD2C,EACjC;AACZ,QAAII,QAAQ,GAAGzB,CAAC,CAAC0B,KAAF,EAAf;;AAEA,QAAIG,OAAO,GAAG,KAAKb,QAAL,CAAcmD,OAAd,CAAsBC,MAAtB,CAA6BC,OAA7B,CAAqC;AAACtC,MAAAA,MAAM,EAAE,KAAT;AAAgBD,MAAAA,GAAG,EAAEoC;AAArB,KAArC,CAAd;;AAEArC,IAAAA,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;AACvCR,MAAAA,QAAQ,CAACS,OAAT,CAAiB,IAAI1B,4BAAJ,CAAiC,KAAKQ,QAAtC,EAAgDiB,OAAhD,EAAyD,KAAKhB,SAA9D,CAAjB;AACD,KAFsB,CAErBkB,IAFqB,CAEhB,IAFgB,CAAb,CAAV;AAIAN,IAAAA,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;AAC5BZ,MAAAA,QAAQ,CAACa,MAAT,CAAgBD,KAAhB;AACD,KAFD;;AAIA,QAAInC,CAAC,CAACqC,UAAF,CAAalB,QAAb,CAAJ,EAA4B;AAC1BI,MAAAA,QAAQ,CAACI,OAAT,CAAiBW,OAAjB,CAAyBnB,QAAzB;AACD;;AAED,WAAOI,QAAQ,CAACI,OAAhB;AACD,GAnBD;AAqBA;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;;;AACAhB,EAAAA,oCAAoC,CAACE,GAArC,GAA2C,SAASA,GAAT,CAAaD,GAAb,EAAkB;AAC3D,WAAO,IAAIJ,+BAAJ,CAAoC,KAAKM,QAAzC,EAAmD,KAAKC,SAAL,CAAeL,eAAlE,EAAmFE,GAAnF,CAAP;AACD,GAFD;AAIA;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;;;AACAD,EAAAA,oCAAoC,CAACyD,MAArC,GAA8C,SAASA,MAAT,GAAkB;AAC9D,WAAO,KAAKrD,SAAZ;AACD,GAFD;;AAIAJ,EAAAA,oCAAoC,CAACV,IAAI,CAACoE,OAAL,CAAaC,MAAd,CAApC,GAA4D,SACxDD,OADwD,CAChDE,KADgD,EACzCC,OADyC,EAChC;AAC1B,WAAOvE,IAAI,CAACoE,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,GAHD;;AAKA,SAAO7D,oCAAP;AACD,CA3VD;AA8VA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAL,4BAA4B,GAAG,SAASA,4BAAT,CAAsCG,OAAtC,EAC3BgE,QAD2B,EACjBC,QADiB,EACP;AACtB;AACA,OAAK3D,SAAL,GAAiB2D,QAAjB;AAEAxE,EAAAA,IAAI,CAACyE,SAAL,CAAeC,WAAf,CAA2BC,IAA3B,CAAgC,IAAhC,EAAsCpE,OAAtC,EAA+CgE,QAA/C,EAAyD,KAAK1D,SAA9D;AACD,CAND;;AAQAf,CAAC,CAAC8E,MAAF,CAASxE,4BAA4B,CAACqE,SAAtC,EAAiDzE,IAAI,CAACyE,SAAtD;;AACArE,4BAA4B,CAACqE,SAA7B,CAAuCC,WAAvC,GAAqDtE,4BAArD;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAA,4BAA4B,CAACqE,SAA7B,CAAuCI,WAAvC,GAAqD,SACjDA,WADiD,CACrChD,OADqC,EAC5B;AACvB,SAAO,IAAIxB,gCAAJ,CAAqC,KAAKO,QAA1C,EAAoDiB,OAApD,EAA6D,KAAKhB,SAAL,CAAeL,eAA5E,CAAP;AACD,CAHD;AAKA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAJ,4BAA4B,CAACqE,SAA7B,CAAuCP,MAAvC,GAAgD,SAASA,MAAT,GAAkB;AAChE,MAAIY,KAAK,GAAG,EAAZ;;AACAhF,EAAAA,CAAC,CAACiF,MAAF,CAAS,IAAT,EAAe,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;AAClC,QAAI,CAACnF,CAAC,CAACoF,UAAF,CAAaD,GAAb,EAAkB,GAAlB,CAAD,IAA2B,CAAEnF,CAAC,CAACqC,UAAF,CAAa6C,KAAb,CAAjC,EAAsD;AACpDF,MAAAA,KAAK,CAACG,GAAD,CAAL,GAAaD,KAAb;AACD;AACF,GAJD;;AAKA,SAAOF,KAAP;AACD,CARD;;AAUA1E,4BAA4B,CAACqE,SAA7B,CAAuC1E,IAAI,CAACoE,OAAL,CAAaC,MAApD,IAA8D,SAC1DD,OAD0D,CAClDE,KADkD,EAC3CC,OAD2C,EAClC;AAC1B,SAAOvE,IAAI,CAACoE,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAHD;AAMA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAjE,gCAAgC,GAAG,SAC/BA,gCAD+B,CACEE,OADF,EACWsB,OADX,EACoBrB,eADpB,EACqCE,GADrC,EAC0C;AAC3E,OAAKE,QAAL,GAAgBL,OAAhB,CAD2E,CAG3E;;AACA,OAAKG,GAAL,GAAWmB,OAAO,CAACnB,GAAnB,CAJ2E,CAInD;;AACxB,OAAKyE,UAAL,GAAkBtD,OAAO,CAACuD,WAA1B,CAL2E,CAKpC;;AACvC,OAAKhE,SAAL,GAAiBS,OAAO,CAACwD,UAAzB,CAN2E,CAMtC;;AACrC,OAAK7E,eAAL,GAAuBqB,OAAO,CAACyD,iBAA/B,CAP2E,CAOzB;;AAClD,OAAKC,MAAL,GAAc1D,OAAO,CAAC0D,MAAtB,CAR2E,CAQ7C;;AAC9B,OAAKC,OAAL,GAAe3D,OAAO,CAAC2D,OAAvB,CAT2E,CAS3C;;AAChC,OAAKC,WAAL,GAAmBxF,WAAW,CAACyF,eAAZ,CAA4B7D,OAAO,CAAC8D,YAApC,CAAnB,CAV2E,CAUL;;AACtE,OAAKC,GAAL,GAAW/D,OAAO,CAAC+D,GAAnB,CAX2E,CAWnD;AAExB;;AACA,OAAKC,QAAL,GAAgBC,SAAhB;AACA,OAAKjF,SAAL,GAAiB;AAACL,IAAAA,eAAe,EAAEA,eAAlB;AAAmCE,IAAAA,GAAG,EAAEA,GAAG,IAAI,KAAKA;AAApD,GAAjB;AACD,CAjBD;;AAmBAqF,MAAM,CAACC,cAAP,CAAsB3F,gCAAgC,CAACoE,SAAvD,EACE,QADF,EACY;AACR9D,EAAAA,GAAG,EAAE,YAAW;AACd,QAAI,CAAC,KAAKkF,QAAV,EAAoB;AAClB,WAAKA,QAAL,GAAgB,IAAIvF,+BAAJ,CACd,KAAKM,QADS,EAEd,KAAKC,SAAL,CAAeL,eAFD,EAGd,KAAKK,SAAL,CAAeH,GAHD,CAAhB;AAKD;;AAED,WAAO,KAAKmF,QAAZ;AACD;AAXO,CADZ;AAeA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAxF,gCAAgC,CAACoE,SAAjC,CAA2CwB,KAA3C,GAAmD,SAASA,KAAT,CAAehF,QAAf,EAAyB;AAC1E,SAAO,KAAKiF,MAAL,CAAYD,KAAZ,CAAkBhF,QAAlB,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAZ,gCAAgC,CAACoE,SAAjC,CAA2CP,MAA3C,GAAoD,SAASA,MAAT,GAAkB;AACpE,MAAIY,KAAK,GAAG,EAAZ;;AACAhF,EAAAA,CAAC,CAACiF,MAAF,CAAS,IAAT,EAAe,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;AAClC,QAAI,CAACnF,CAAC,CAACoF,UAAF,CAAaD,GAAb,EAAkB,GAAlB,CAAD,IAA2B,CAAEnF,CAAC,CAACqC,UAAF,CAAa6C,KAAb,CAAjC,EAAsD;AACpDF,MAAAA,KAAK,CAACG,GAAD,CAAL,GAAaD,KAAb;AACD;AACF,GAJD;;AAKA,SAAOF,KAAP;AACD,CARD;;AAUAzE,gCAAgC,CAACoE,SAAjC,CAA2C1E,IAAI,CAACoE,OAAL,CAAaC,MAAxD,IAAkE,SAC9DD,OAD8D,CACtDE,KADsD,EAC/CC,OAD+C,EACtC;AAC1B,SAAOvE,IAAI,CAACoE,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAHD;AAMA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAhE,+BAA+B,GAAG,SAC9BA,+BAD8B,CACEC,OADF,EACWC,eADX,EAC4BE,GAD5B,EACiC;AACjE,OAAKE,QAAL,GAAgBL,OAAhB,CADiE,CAGjE;;AACA,OAAKM,SAAL,GAAiB;AAACL,IAAAA,eAAe,EAAEA,eAAlB;AAAmCE,IAAAA,GAAG,EAAEA;AAAxC,GAAjB;AACA,OAAKI,IAAL,GAAa,kBAAiBN,eAAgB,gBAAeE,GAAI,EAAjE;AACD,CAPD;AASA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAJ,+BAA+B,CAACmE,SAAhC,CAA0CwB,KAA1C,GAAkD,SAASA,KAAT,CAAehF,QAAf,EAAyB;AACzE,MAAII,QAAQ,GAAGzB,CAAC,CAAC0B,KAAF,EAAf;;AACA,MAAIG,OAAO,GAAG,KAAKb,QAAL,CAAcqF,KAAd,CAAoB;AAACvE,IAAAA,GAAG,EAAE,KAAKZ,IAAX;AAAiBa,IAAAA,MAAM,EAAE;AAAzB,GAApB,CAAd;;AAEAF,EAAAA,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;AACvCR,IAAAA,QAAQ,CAACS,OAAT,CAAiB,IAAIzB,gCAAJ,CACf,KAAKO,QADU,EAEfiB,OAFe,EAGf,KAAKhB,SAAL,CAAeL,eAHA,EAIf,KAAKK,SAAL,CAAeH,GAJA,CAAjB;AAMD,GAPsB,CAOrBqB,IAPqB,CAOhB,IAPgB,CAAb,CAAV;AASAN,EAAAA,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;AAC5BZ,IAAAA,QAAQ,CAACa,MAAT,CAAgBD,KAAhB;AACD,GAFD;;AAIA,MAAInC,CAAC,CAACqC,UAAF,CAAalB,QAAb,CAAJ,EAA4B;AAC1BI,IAAAA,QAAQ,CAACI,OAAT,CAAiBW,OAAjB,CAAyBnB,QAAzB;AACD;;AAED,SAAOI,QAAQ,CAACI,OAAhB;AACD,CAtBD;AAwBA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAnB,+BAA+B,CAACmE,SAAhC,CAA0CP,MAA1C,GAAmD,SAASA,MAAT,GAAkB;AACnE,SAAO,KAAKrD,SAAZ;AACD,CAFD;;AAIAP,+BAA+B,CAACmE,SAAhC,CAA0C1E,IAAI,CAACoE,OAAL,CAAaC,MAAvD,IAAiE,SAC7DD,OAD6D,CACrDE,KADqD,EAC9CC,OAD8C,EACrC;AAC1B,SAAOvE,IAAI,CAACoE,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAHD;;AAKA6B,MAAM,CAACC,OAAP,GAAiB;AACfjG,EAAAA,4BAA4B,EAAEA,4BADf;AAEfC,EAAAA,4BAA4B,EAAEA,4BAFf;AAGfC,EAAAA,gCAAgC,EAAEA,gCAHnB;AAIfC,EAAAA,+BAA+B,EAAEA;AAJlB,CAAjB","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar TrustProductsEvaluationsList;\nvar TrustProductsEvaluationsPage;\nvar TrustProductsEvaluationsInstance;\nvar TrustProductsEvaluationsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the TrustProductsEvaluationsList\n *\n * @constructor Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsList\n *\n * @param {Twilio.Trusthub.V1} version - Version of the resource\n * @param {string} trustProductSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nTrustProductsEvaluationsList = function TrustProductsEvaluationsList(version,\n    trustProductSid) {\n  /* jshint ignore:start */\n  /**\n   * @function trustProductsEvaluations\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsContext}\n   */\n  /* jshint ignore:end */\n  function TrustProductsEvaluationsListInstance(sid) {\n    return TrustProductsEvaluationsListInstance.get(sid);\n  }\n\n  TrustProductsEvaluationsListInstance._version = version;\n  // Path Solution\n  TrustProductsEvaluationsListInstance._solution = {trustProductSid: trustProductSid};\n  TrustProductsEvaluationsListInstance._uri = `/TrustProducts/${trustProductSid}/Evaluations`;\n  /* jshint ignore:start */\n  /**\n   * create a TrustProductsEvaluationsInstance\n   *\n   * @function create\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.policySid - The unique string of a policy\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed TrustProductsEvaluationsInstance\n   */\n  /* jshint ignore:end */\n  TrustProductsEvaluationsListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.policySid)) {\n      throw new Error('Required parameter \"opts.policySid\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({'PolicySid': _.get(opts, 'policySid')});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new TrustProductsEvaluationsInstance(\n        this._version,\n        payload,\n        this._solution.trustProductSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams TrustProductsEvaluationsInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  TrustProductsEvaluationsListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists TrustProductsEvaluationsInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  TrustProductsEvaluationsListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of TrustProductsEvaluationsInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  TrustProductsEvaluationsListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new TrustProductsEvaluationsPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of TrustProductsEvaluationsInstance records from\n   * the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  TrustProductsEvaluationsListInstance.getPage = function getPage(targetUrl,\n      callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new TrustProductsEvaluationsPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a trust_products_evaluations\n   *\n   * @function get\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsList#\n   *\n   * @param {string} sid - The unique string that identifies the Evaluation resource\n   *\n   * @returns {Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsContext}\n   */\n  /* jshint ignore:end */\n  TrustProductsEvaluationsListInstance.get = function get(sid) {\n    return new TrustProductsEvaluationsContext(this._version, this._solution.trustProductSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  TrustProductsEvaluationsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TrustProductsEvaluationsListInstance[util.inspect.custom] = function\n      inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TrustProductsEvaluationsListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TrustProductsEvaluationsPage\n *\n * @constructor Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TrustProductsEvaluationsSolution} solution - Path solution\n *\n * @returns TrustProductsEvaluationsPage\n */\n/* jshint ignore:end */\nTrustProductsEvaluationsPage = function TrustProductsEvaluationsPage(version,\n    response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TrustProductsEvaluationsPage.prototype, Page.prototype);\nTrustProductsEvaluationsPage.prototype.constructor = TrustProductsEvaluationsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of TrustProductsEvaluationsInstance\n *\n * @function getInstance\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsPage#\n *\n * @param {TrustProductsEvaluationsPayload} payload - Payload response from the API\n *\n * @returns TrustProductsEvaluationsInstance\n */\n/* jshint ignore:end */\nTrustProductsEvaluationsPage.prototype.getInstance = function\n    getInstance(payload) {\n  return new TrustProductsEvaluationsInstance(this._version, payload, this._solution.trustProductSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTrustProductsEvaluationsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTrustProductsEvaluationsPage.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TrustProductsEvaluationsContext\n *\n * @constructor Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsInstance\n *\n * @property {string} sid -\n *          The unique string that identifies the Evaluation resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} policySid - The unique string of a policy\n * @property {string} trustProductSid -\n *          The unique string that identifies the resource\n * @property {trust_products_evaluations.status} status -\n *          The compliance status of the Evaluation resource\n * @property {object} results - The results of the Evaluation resource\n * @property {Date} dateCreated - The date_created\n * @property {string} url - The url\n *\n * @param {V1} version - Version of the resource\n * @param {TrustProductsEvaluationsPayload} payload - The instance payload\n * @param {sid} trustProductSid - The unique string that identifies the resource\n * @param {sid} sid - The unique string that identifies the Evaluation resource\n */\n/* jshint ignore:end */\nTrustProductsEvaluationsInstance = function\n    TrustProductsEvaluationsInstance(version, payload, trustProductSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.policySid = payload.policy_sid; // jshint ignore:line\n  this.trustProductSid = payload.trust_product_sid; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.results = payload.results; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {trustProductSid: trustProductSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(TrustProductsEvaluationsInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new TrustProductsEvaluationsContext(\n          this._version,\n          this._solution.trustProductSid,\n          this._solution.sid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a TrustProductsEvaluationsInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrustProductsEvaluationsInstance\n */\n/* jshint ignore:end */\nTrustProductsEvaluationsInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTrustProductsEvaluationsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTrustProductsEvaluationsInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TrustProductsEvaluationsContext\n *\n * @constructor Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} trustProductSid - The unique string that identifies the resource\n * @param {sid} sid - The unique string that identifies the Evaluation resource\n */\n/* jshint ignore:end */\nTrustProductsEvaluationsContext = function\n    TrustProductsEvaluationsContext(version, trustProductSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {trustProductSid: trustProductSid, sid: sid, };\n  this._uri = `/TrustProducts/${trustProductSid}/Evaluations/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a TrustProductsEvaluationsInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrustProductsEvaluationsInstance\n */\n/* jshint ignore:end */\nTrustProductsEvaluationsContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new TrustProductsEvaluationsInstance(\n      this._version,\n      payload,\n      this._solution.trustProductSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.TrustProductsContext.TrustProductsEvaluationsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTrustProductsEvaluationsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nTrustProductsEvaluationsContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TrustProductsEvaluationsList: TrustProductsEvaluationsList,\n  TrustProductsEvaluationsPage: TrustProductsEvaluationsPage,\n  TrustProductsEvaluationsInstance: TrustProductsEvaluationsInstance,\n  TrustProductsEvaluationsContext: TrustProductsEvaluationsContext\n};\n"]},"metadata":{},"sourceType":"module"}