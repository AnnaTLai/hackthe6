{"ast":null,"code":"'use strict';\n\nvar detectSilence = require('../webaudio/detectsilence');\n\nvar N_ATTEMPTS = 3;\nvar ATTEMPT_DURATION_MS = 250;\n/**\n * Detect whether the audio stream rendered by the given HTMLVideoElement is silent.\n * @param {HTMLAudioElement} el\n * @returns {Promise<boolean>} true if silent, false if not.\n */\n\nfunction detectSilentAudio(el) {\n  // NOTE(mmalavalli): We have to delay require-ing AudioContextFactory, because\n  // it exports a default instance whose constructor calls Object.assign.\n  var AudioContextFactory = require('../webaudio/audiocontext');\n\n  var holder = {};\n  var audioContext = AudioContextFactory.getOrCreate(holder);\n  var attemptsLeft = N_ATTEMPTS;\n\n  function doCheckSilence() {\n    attemptsLeft--;\n    return detectSilence(audioContext, el.srcObject, ATTEMPT_DURATION_MS).then(function (isSilent) {\n      if (!isSilent) {\n        return false;\n      }\n\n      if (attemptsLeft > 0) {\n        return doCheckSilence();\n      }\n\n      return true;\n    }).catch(function () {\n      // NOTE(mmalavalli): If an error is thrown while detect silence, the audio\n      // stream is assumed to be silent.\n      return true;\n    });\n  } // Resolve the returned Promise with true if 3 consecutive attempts\n  // to detect silent audio are successful.\n\n\n  return doCheckSilence().finally(function () {\n    AudioContextFactory.release(holder);\n  });\n}\n\nmodule.exports = detectSilentAudio;","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio-video/es5/util/detectsilentaudio.js"],"names":["detectSilence","require","N_ATTEMPTS","ATTEMPT_DURATION_MS","detectSilentAudio","el","AudioContextFactory","holder","audioContext","getOrCreate","attemptsLeft","doCheckSilence","srcObject","then","isSilent","catch","finally","release","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,2BAAD,CAA3B;;AAEA,IAAIC,UAAU,GAAG,CAAjB;AACA,IAAIC,mBAAmB,GAAG,GAA1B;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,iBAAT,CAA2BC,EAA3B,EAA+B;AAC7B;AACA;AACA,MAAIC,mBAAmB,GAAGL,OAAO,CAAC,0BAAD,CAAjC;;AACA,MAAIM,MAAM,GAAG,EAAb;AACA,MAAIC,YAAY,GAAGF,mBAAmB,CAACG,WAApB,CAAgCF,MAAhC,CAAnB;AAEA,MAAIG,YAAY,GAAGR,UAAnB;;AAEA,WAASS,cAAT,GAA0B;AACxBD,IAAAA,YAAY;AACZ,WAAOV,aAAa,CAACQ,YAAD,EAAeH,EAAE,CAACO,SAAlB,EAA6BT,mBAA7B,CAAb,CAA+DU,IAA/D,CAAoE,UAAUC,QAAV,EAAoB;AAC7F,UAAI,CAACA,QAAL,EAAe;AACb,eAAO,KAAP;AACD;;AACD,UAAIJ,YAAY,GAAG,CAAnB,EAAsB;AACpB,eAAOC,cAAc,EAArB;AACD;;AACD,aAAO,IAAP;AACD,KARM,EAQJI,KARI,CAQE,YAAY;AACnB;AACA;AACA,aAAO,IAAP;AACD,KAZM,CAAP;AAaD,GAxB4B,CA0B7B;AACA;;;AACA,SAAOJ,cAAc,GAAGK,OAAjB,CAAyB,YAAY;AAC1CV,IAAAA,mBAAmB,CAACW,OAApB,CAA4BV,MAA5B;AACD,GAFM,CAAP;AAGD;;AAEDW,MAAM,CAACC,OAAP,GAAiBf,iBAAjB","sourcesContent":["'use strict';\n\nvar detectSilence = require('../webaudio/detectsilence');\n\nvar N_ATTEMPTS = 3;\nvar ATTEMPT_DURATION_MS = 250;\n\n/**\n * Detect whether the audio stream rendered by the given HTMLVideoElement is silent.\n * @param {HTMLAudioElement} el\n * @returns {Promise<boolean>} true if silent, false if not.\n */\nfunction detectSilentAudio(el) {\n  // NOTE(mmalavalli): We have to delay require-ing AudioContextFactory, because\n  // it exports a default instance whose constructor calls Object.assign.\n  var AudioContextFactory = require('../webaudio/audiocontext');\n  var holder = {};\n  var audioContext = AudioContextFactory.getOrCreate(holder);\n\n  var attemptsLeft = N_ATTEMPTS;\n\n  function doCheckSilence() {\n    attemptsLeft--;\n    return detectSilence(audioContext, el.srcObject, ATTEMPT_DURATION_MS).then(function (isSilent) {\n      if (!isSilent) {\n        return false;\n      }\n      if (attemptsLeft > 0) {\n        return doCheckSilence();\n      }\n      return true;\n    }).catch(function () {\n      // NOTE(mmalavalli): If an error is thrown while detect silence, the audio\n      // stream is assumed to be silent.\n      return true;\n    });\n  }\n\n  // Resolve the returned Promise with true if 3 consecutive attempts\n  // to detect silent audio are successful.\n  return doCheckSilence().finally(function () {\n    AudioContextFactory.release(holder);\n  });\n}\n\nmodule.exports = detectSilentAudio;"]},"metadata":{},"sourceType":"script"}