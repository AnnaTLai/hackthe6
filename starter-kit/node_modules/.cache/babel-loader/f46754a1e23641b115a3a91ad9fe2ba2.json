{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar UsageList;\nvar UsagePage;\nvar UsageInstance;\nvar UsageContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the UsageList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.SimContext.UsageList\n *\n * @param {Twilio.Preview.Wireless} version - Version of the resource\n * @param {string} simSid - The sim_sid\n */\n\n/* jshint ignore:end */\n\nUsageList = function UsageList(version, simSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function usage\n   * @memberof Twilio.Preview.Wireless.SimContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Wireless.SimContext.UsageContext}\n   */\n\n  /* jshint ignore:end */\n  function UsageListInstance(sid) {\n    return UsageListInstance.get(sid);\n  }\n\n  UsageListInstance._version = version; // Path Solution\n\n  UsageListInstance._solution = {\n    simSid: simSid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a usage\n   *\n   * @function get\n   * @memberof Twilio.Preview.Wireless.SimContext.UsageList#\n   *\n   * @returns {Twilio.Preview.Wireless.SimContext.UsageContext}\n   */\n\n  /* jshint ignore:end */\n\n  UsageListInstance.get = function get() {\n    return new UsageContext(this._version, this._solution.simSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Wireless.SimContext.UsageList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  UsageListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  UsageListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return UsageListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the UsagePage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.SimContext.UsagePage\n *\n * @param {Wireless} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {UsageSolution} solution - Path solution\n *\n * @returns UsagePage\n */\n\n/* jshint ignore:end */\n\n\nUsagePage = function UsagePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(UsagePage.prototype, Page.prototype);\n\nUsagePage.prototype.constructor = UsagePage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of UsageInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Wireless.SimContext.UsagePage#\n *\n * @param {UsagePayload} payload - Payload response from the API\n *\n * @returns UsageInstance\n */\n\n/* jshint ignore:end */\n\nUsagePage.prototype.getInstance = function getInstance(payload) {\n  return new UsageInstance(this._version, payload, this._solution.simSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Wireless.SimContext.UsagePage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nUsagePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nUsagePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the UsageContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.SimContext.UsageInstance\n *\n * @property {string} simSid - The sim_sid\n * @property {string} simUniqueName - The sim_unique_name\n * @property {string} accountSid - The account_sid\n * @property {object} period - The period\n * @property {object} commandsUsage - The commands_usage\n * @property {object} commandsCosts - The commands_costs\n * @property {object} dataUsage - The data_usage\n * @property {object} dataCosts - The data_costs\n * @property {string} url - The url\n *\n * @param {Wireless} version - Version of the resource\n * @param {UsagePayload} payload - The instance payload\n * @param {sid} simSid - The sim_sid\n */\n\n/* jshint ignore:end */\n\n\nUsageInstance = function UsageInstance(version, payload, simSid) {\n  this._version = version; // Marshaled Properties\n\n  this.simSid = payload.sim_sid; // jshint ignore:line\n\n  this.simUniqueName = payload.sim_unique_name; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.period = payload.period; // jshint ignore:line\n\n  this.commandsUsage = payload.commands_usage; // jshint ignore:line\n\n  this.commandsCosts = payload.commands_costs; // jshint ignore:line\n\n  this.dataUsage = payload.data_usage; // jshint ignore:line\n\n  this.dataCosts = payload.data_costs; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    simSid: simSid\n  };\n};\n\nObject.defineProperty(UsageInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new UsageContext(this._version, this._solution.simSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a UsageInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Wireless.SimContext.UsageInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.end] - The end\n * @param {string} [opts.start] - The start\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsageInstance\n */\n\n/* jshint ignore:end */\n\nUsageInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Wireless.SimContext.UsageInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nUsageInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nUsageInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the UsageContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.SimContext.UsageContext\n *\n * @param {Wireless} version - Version of the resource\n * @param {sid_like} simSid - The sim_sid\n */\n\n/* jshint ignore:end */\n\n\nUsageContext = function UsageContext(version, simSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    simSid: simSid\n  };\n  this._uri = `/Sims/${simSid}/Usage`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a UsageInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Wireless.SimContext.UsageContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.end] - The end\n * @param {string} [opts.start] - The start\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsageInstance\n */\n\n/* jshint ignore:end */\n\n\nUsageContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'End': _.get(opts, 'end'),\n    'Start': _.get(opts, 'start')\n  });\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new UsageInstance(this._version, payload, this._solution.simSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Wireless.SimContext.UsageContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nUsageContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nUsageContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  UsageList: UsageList,\n  UsagePage: UsagePage,\n  UsageInstance: UsageInstance,\n  UsageContext: UsageContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/preview/wireless/sim/usage.js"],"names":["Q","require","_","util","Page","values","UsageList","UsagePage","UsageInstance","UsageContext","version","simSid","UsageListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","sim_sid","simUniqueName","sim_unique_name","accountSid","account_sid","period","commandsUsage","commands_usage","commandsCosts","commands_costs","dataUsage","data_usage","dataCosts","data_costs","url","_context","undefined","Object","defineProperty","fetch","opts","callback","_proxy","_uri","deferred","defer","data","of","promise","uri","method","params","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar UsageList;\nvar UsagePage;\nvar UsageInstance;\nvar UsageContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the UsageList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.SimContext.UsageList\n *\n * @param {Twilio.Preview.Wireless} version - Version of the resource\n * @param {string} simSid - The sim_sid\n */\n/* jshint ignore:end */\nUsageList = function UsageList(version, simSid) {\n  /* jshint ignore:start */\n  /**\n   * @function usage\n   * @memberof Twilio.Preview.Wireless.SimContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Wireless.SimContext.UsageContext}\n   */\n  /* jshint ignore:end */\n  function UsageListInstance(sid) {\n    return UsageListInstance.get(sid);\n  }\n\n  UsageListInstance._version = version;\n  // Path Solution\n  UsageListInstance._solution = {simSid: simSid};\n  /* jshint ignore:start */\n  /**\n   * Constructs a usage\n   *\n   * @function get\n   * @memberof Twilio.Preview.Wireless.SimContext.UsageList#\n   *\n   * @returns {Twilio.Preview.Wireless.SimContext.UsageContext}\n   */\n  /* jshint ignore:end */\n  UsageListInstance.get = function get() {\n    return new UsageContext(this._version, this._solution.simSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Wireless.SimContext.UsageList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  UsageListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  UsageListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return UsageListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UsagePage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.SimContext.UsagePage\n *\n * @param {Wireless} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {UsageSolution} solution - Path solution\n *\n * @returns UsagePage\n */\n/* jshint ignore:end */\nUsagePage = function UsagePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(UsagePage.prototype, Page.prototype);\nUsagePage.prototype.constructor = UsagePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of UsageInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Wireless.SimContext.UsagePage#\n *\n * @param {UsagePayload} payload - Payload response from the API\n *\n * @returns UsageInstance\n */\n/* jshint ignore:end */\nUsagePage.prototype.getInstance = function getInstance(payload) {\n  return new UsageInstance(this._version, payload, this._solution.simSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Wireless.SimContext.UsagePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsagePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nUsagePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UsageContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.SimContext.UsageInstance\n *\n * @property {string} simSid - The sim_sid\n * @property {string} simUniqueName - The sim_unique_name\n * @property {string} accountSid - The account_sid\n * @property {object} period - The period\n * @property {object} commandsUsage - The commands_usage\n * @property {object} commandsCosts - The commands_costs\n * @property {object} dataUsage - The data_usage\n * @property {object} dataCosts - The data_costs\n * @property {string} url - The url\n *\n * @param {Wireless} version - Version of the resource\n * @param {UsagePayload} payload - The instance payload\n * @param {sid} simSid - The sim_sid\n */\n/* jshint ignore:end */\nUsageInstance = function UsageInstance(version, payload, simSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.simSid = payload.sim_sid; // jshint ignore:line\n  this.simUniqueName = payload.sim_unique_name; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.period = payload.period; // jshint ignore:line\n  this.commandsUsage = payload.commands_usage; // jshint ignore:line\n  this.commandsCosts = payload.commands_costs; // jshint ignore:line\n  this.dataUsage = payload.data_usage; // jshint ignore:line\n  this.dataCosts = payload.data_costs; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {simSid: simSid, };\n};\n\nObject.defineProperty(UsageInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new UsageContext(this._version, this._solution.simSid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a UsageInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Wireless.SimContext.UsageInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.end] - The end\n * @param {string} [opts.start] - The start\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsageInstance\n */\n/* jshint ignore:end */\nUsageInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Wireless.SimContext.UsageInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsageInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nUsageInstance.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UsageContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.SimContext.UsageContext\n *\n * @param {Wireless} version - Version of the resource\n * @param {sid_like} simSid - The sim_sid\n */\n/* jshint ignore:end */\nUsageContext = function UsageContext(version, simSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {simSid: simSid, };\n  this._uri = `/Sims/${simSid}/Usage`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a UsageInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Wireless.SimContext.UsageContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.end] - The end\n * @param {string} [opts.start] - The start\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsageInstance\n */\n/* jshint ignore:end */\nUsageContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({'End': _.get(opts, 'end'), 'Start': _.get(opts, 'start')});\n\n  var promise = this._version.fetch({uri: this._uri, method: 'GET', params: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new UsageInstance(this._version, payload, this._solution.simSid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Wireless.SimContext.UsageContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsageContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nUsageContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  UsageList: UsageList,\n  UsagePage: UsagePage,\n  UsageInstance: UsageInstance,\n  UsageContext: UsageContext\n};\n"]},"metadata":{},"sourceType":"script"}