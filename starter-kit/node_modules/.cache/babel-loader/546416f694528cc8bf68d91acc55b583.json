{"ast":null,"code":"exports.handler = function (context, event, callback) {\n  const twilioAccountSid = context.ACCOUNT_SID;\n  const twilioApiKey = context.API_KEY;\n  const twilioApiSecret = context.API_SECRET;\n  const identity = event.identity;\n\n  const AccessToken = require('twilio').jwt.AccessToken;\n\n  const token = new AccessToken(twilioAccountSid, twilioApiKey, twilioApiSecret, {\n    identity: identity\n  });\n  const VideoGrant = AccessToken.VideoGrant;\n  const videoGrant = new VideoGrant({\n    // room: 'cool room', // the specific room's name\n    room: event.identity\n  });\n  token.addGrant(videoGrant); //const ChatGrant = AccessToken.ChatGrant;\n  //const chatGrant = new chatGrant({\n  //    serviceSid: context.SERVICE_SID\n  //});\n  //token.addGrant(chatGrant);\n\n  const response = new require('twilio').Response();\n  const headers = {\n    \"Access-Control-Allow-Origin\": \"*\",\n    // change this to your client-side URL\n    \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,OPTIONS\",\n    \"Access-Control-Allow-Headers\": \"Content-Type\",\n    \"Content-Type\": \"application/json\"\n  };\n  response.setHeaders(headers);\n  response.setBody({\n    accessToken: token.toJwt()\n  });\n  return callback(null, response);\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/functions/token.js"],"names":["exports","handler","context","event","callback","twilioAccountSid","ACCOUNT_SID","twilioApiKey","API_KEY","twilioApiSecret","API_SECRET","identity","AccessToken","require","jwt","token","VideoGrant","videoGrant","room","addGrant","response","Response","headers","setHeaders","setBody","accessToken","toJwt"],"mappings":"AAAAA,OAAO,CAACC,OAAR,GAAkB,UAASC,OAAT,EAAkBC,KAAlB,EAAyBC,QAAzB,EAAmC;AACjD,QAAMC,gBAAgB,GAAGH,OAAO,CAACI,WAAjC;AACA,QAAMC,YAAY,GAAGL,OAAO,CAACM,OAA7B;AACA,QAAMC,eAAe,GAAGP,OAAO,CAACQ,UAAhC;AACA,QAAMC,QAAQ,GAAGR,KAAK,CAACQ,QAAvB;;AAEA,QAAMC,WAAW,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBC,GAAlB,CAAsBF,WAA1C;;AAEA,QAAMG,KAAK,GAAG,IAAIH,WAAJ,CACVP,gBADU,EAEVE,YAFU,EAGVE,eAHU,EAIV;AAACE,IAAAA,QAAQ,EAAEA;AAAX,GAJU,CAAd;AAOA,QAAMK,UAAU,GAAGJ,WAAW,CAACI,UAA/B;AACA,QAAMC,UAAU,GAAG,IAAID,UAAJ,CAAe;AAC9B;AACAE,IAAAA,IAAI,EAAEf,KAAK,CAACQ;AAFkB,GAAf,CAAnB;AAIAI,EAAAA,KAAK,CAACI,QAAN,CAAeF,UAAf,EApBiD,CAsBjD;AACA;AACA;AACA;AACA;;AAEA,QAAMG,QAAQ,GAAG,IAAIP,OAAJ,CAAY,QAAZ,EAAsBQ,QAAtB,EAAjB;AACA,QAAMC,OAAO,GAAG;AACZ,mCAA+B,GADnB;AACwB;AACpC,oCAAgC,6BAFpB;AAGZ,oCAAgC,cAHpB;AAIZ,oBAAgB;AAJJ,GAAhB;AAOAF,EAAAA,QAAQ,CAACG,UAAT,CAAoBD,OAApB;AACAF,EAAAA,QAAQ,CAACI,OAAT,CAAiB;AACbC,IAAAA,WAAW,EAAEV,KAAK,CAACW,KAAN;AADA,GAAjB;AAGA,SAAOtB,QAAQ,CAAC,IAAD,EAAOgB,QAAP,CAAf;AAEH,CA1CD","sourcesContent":["exports.handler = function(context, event, callback) {\n    const twilioAccountSid = context.ACCOUNT_SID;\n    const twilioApiKey = context.API_KEY;\n    const twilioApiSecret = context.API_SECRET;\n    const identity = event.identity;\n\n    const AccessToken = require('twilio').jwt.AccessToken;\n    \n    const token = new AccessToken(\n        twilioAccountSid,\n        twilioApiKey,\n        twilioApiSecret,\n        {identity: identity}\n    );\n    \n    const VideoGrant = AccessToken.VideoGrant;\n    const videoGrant = new VideoGrant({\n        // room: 'cool room', // the specific room's name\n        room: event.identity\n    });    \n    token.addGrant(videoGrant);\n\n    //const ChatGrant = AccessToken.ChatGrant;\n    //const chatGrant = new chatGrant({\n    //    serviceSid: context.SERVICE_SID\n    //});\n    //token.addGrant(chatGrant);\n\n    const response = new require('twilio').Response();\n    const headers = {\n        \"Access-Control-Allow-Origin\": \"*\", // change this to your client-side URL\n        \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,OPTIONS\",\n        \"Access-Control-Allow-Headers\": \"Content-Type\",\n        \"Content-Type\": \"application/json\"\n    };\n        \n    response.setHeaders(headers);\n    response.setBody({\n        accessToken: token.toJwt()\n    });\n    return callback(null, response);\n\n}"]},"metadata":{},"sourceType":"module"}