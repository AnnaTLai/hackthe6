{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar OriginationUrlList;\nvar OriginationUrlPage;\nvar OriginationUrlInstance;\nvar OriginationUrlContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the OriginationUrlList\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.OriginationUrlList\n *\n * @param {Twilio.Trunking.V1} version - Version of the resource\n * @param {string} trunkSid - The SID of the Trunk that owns the Origination URL\n */\n\n/* jshint ignore:end */\n\nOriginationUrlList = function OriginationUrlList(version, trunkSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function originationUrls\n   * @memberof Twilio.Trunking.V1.TrunkContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.OriginationUrlContext}\n   */\n\n  /* jshint ignore:end */\n  function OriginationUrlListInstance(sid) {\n    return OriginationUrlListInstance.get(sid);\n  }\n\n  OriginationUrlListInstance._version = version; // Path Solution\n\n  OriginationUrlListInstance._solution = {\n    trunkSid: trunkSid\n  };\n  OriginationUrlListInstance._uri = `/Trunks/${trunkSid}/OriginationUrls`;\n  /* jshint ignore:start */\n\n  /**\n   * create a OriginationUrlInstance\n   *\n   * @function create\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {object} opts - Options for request\n   * @param {number} opts.weight -\n   *          The value that determines the relative load the URI should receive compared to others with the same priority\n   * @param {number} opts.priority - The relative importance of the URI\n   * @param {boolean} opts.enabled - Whether the URL is enabled\n   * @param {string} opts.friendlyName - A string to describe the resource\n   * @param {string} opts.sipUrl -\n   *          The SIP address you want Twilio to route your Origination calls to\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed OriginationUrlInstance\n   */\n\n  /* jshint ignore:end */\n\n  OriginationUrlListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.weight)) {\n      throw new Error('Required parameter \"opts.weight\" missing.');\n    }\n\n    if (_.isUndefined(opts.priority)) {\n      throw new Error('Required parameter \"opts.priority\" missing.');\n    }\n\n    if (_.isUndefined(opts.enabled)) {\n      throw new Error('Required parameter \"opts.enabled\" missing.');\n    }\n\n    if (_.isUndefined(opts.friendlyName)) {\n      throw new Error('Required parameter \"opts.friendlyName\" missing.');\n    }\n\n    if (_.isUndefined(opts.sipUrl)) {\n      throw new Error('Required parameter \"opts.sipUrl\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Weight': _.get(opts, 'weight'),\n      'Priority': _.get(opts, 'priority'),\n      'Enabled': serialize.bool(_.get(opts, 'enabled')),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'SipUrl': _.get(opts, 'sipUrl')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new OriginationUrlInstance(this._version, payload, this._solution.trunkSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams OriginationUrlInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  OriginationUrlListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists OriginationUrlInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  OriginationUrlListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of OriginationUrlInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  OriginationUrlListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new OriginationUrlPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of OriginationUrlInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  OriginationUrlListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new OriginationUrlPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a origination_url\n   *\n   * @function get\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.OriginationUrlContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  OriginationUrlListInstance.get = function get(sid) {\n    return new OriginationUrlContext(this._version, this._solution.trunkSid, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  OriginationUrlListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  OriginationUrlListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return OriginationUrlListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the OriginationUrlPage\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.OriginationUrlPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {OriginationUrlSolution} solution - Path solution\n *\n * @returns OriginationUrlPage\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlPage = function OriginationUrlPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(OriginationUrlPage.prototype, Page.prototype);\n\nOriginationUrlPage.prototype.constructor = OriginationUrlPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of OriginationUrlInstance\n *\n * @function getInstance\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlPage#\n *\n * @param {OriginationUrlPayload} payload - Payload response from the API\n *\n * @returns OriginationUrlInstance\n */\n\n/* jshint ignore:end */\n\nOriginationUrlPage.prototype.getInstance = function getInstance(payload) {\n  return new OriginationUrlInstance(this._version, payload, this._solution.trunkSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nOriginationUrlPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the OriginationUrlContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} trunkSid - The SID of the Trunk that owns the Origination URL\n * @property {number} weight -\n *          The value that determines the relative load the URI should receive compared to others with the same priority\n * @property {boolean} enabled - Whether the URL is enabled\n * @property {string} sipUrl -\n *          The SIP address you want Twilio to route your Origination calls to\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {number} priority - The relative importance of the URI\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT when the resource was last updated\n * @property {string} url - The absolute URL of the resource\n *\n * @param {V1} version - Version of the resource\n * @param {OriginationUrlPayload} payload - The instance payload\n * @param {sid} trunkSid - The SID of the Trunk that owns the Origination URL\n * @param {sid} sid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlInstance = function OriginationUrlInstance(version, payload, trunkSid, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.trunkSid = payload.trunk_sid; // jshint ignore:line\n\n  this.weight = deserialize.integer(payload.weight); // jshint ignore:line\n\n  this.enabled = payload.enabled; // jshint ignore:line\n\n  this.sipUrl = payload.sip_url; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.priority = deserialize.integer(payload.priority); // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    trunkSid: trunkSid,\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(OriginationUrlInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new OriginationUrlContext(this._version, this._solution.trunkSid, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a OriginationUrlInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n\n/* jshint ignore:end */\n\nOriginationUrlInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a OriginationUrlInstance\n *\n * @function remove\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a OriginationUrlInstance\n *\n * @function update\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.weight] -\n *          The value that determines the relative load the URI should receive compared to others with the same priority\n * @param {number} [opts.priority] - The relative importance of the URI\n * @param {boolean} [opts.enabled] - Whether the URL is enabled\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.sipUrl] -\n *          The SIP address you want Twilio to route your Origination calls to\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nOriginationUrlInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the OriginationUrlContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.OriginationUrlContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} trunkSid -\n *          The SID of the Trunk from which to fetch the OriginationUrl\n * @param {sid} sid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlContext = function OriginationUrlContext(version, trunkSid, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    trunkSid: trunkSid,\n    sid: sid\n  };\n  this._uri = `/Trunks/${trunkSid}/OriginationUrls/${sid}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a OriginationUrlInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new OriginationUrlInstance(this._version, payload, this._solution.trunkSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a OriginationUrlInstance\n *\n * @function remove\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a OriginationUrlInstance\n *\n * @function update\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.weight] -\n *          The value that determines the relative load the URI should receive compared to others with the same priority\n * @param {number} [opts.priority] - The relative importance of the URI\n * @param {boolean} [opts.enabled] - Whether the URL is enabled\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.sipUrl] -\n *          The SIP address you want Twilio to route your Origination calls to\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Weight': _.get(opts, 'weight'),\n    'Priority': _.get(opts, 'priority'),\n    'Enabled': serialize.bool(_.get(opts, 'enabled')),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'SipUrl': _.get(opts, 'sipUrl')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new OriginationUrlInstance(this._version, payload, this._solution.trunkSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nOriginationUrlContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  OriginationUrlList: OriginationUrlList,\n  OriginationUrlPage: OriginationUrlPage,\n  OriginationUrlInstance: OriginationUrlInstance,\n  OriginationUrlContext: OriginationUrlContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/rest/trunking/v1/trunk/originationUrl.js"],"names":["Q","require","_","util","Page","deserialize","serialize","values","OriginationUrlList","OriginationUrlPage","OriginationUrlInstance","OriginationUrlContext","version","trunkSid","OriginationUrlListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","weight","priority","enabled","friendlyName","sipUrl","deferred","defer","data","of","bool","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","trunk_sid","integer","sip_url","friendly_name","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","_context","undefined","Object","defineProperty","fetch","_proxy","remove","update","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar OriginationUrlList;\nvar OriginationUrlPage;\nvar OriginationUrlInstance;\nvar OriginationUrlContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the OriginationUrlList\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.OriginationUrlList\n *\n * @param {Twilio.Trunking.V1} version - Version of the resource\n * @param {string} trunkSid - The SID of the Trunk that owns the Origination URL\n */\n/* jshint ignore:end */\nOriginationUrlList = function OriginationUrlList(version, trunkSid) {\n  /* jshint ignore:start */\n  /**\n   * @function originationUrls\n   * @memberof Twilio.Trunking.V1.TrunkContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.OriginationUrlContext}\n   */\n  /* jshint ignore:end */\n  function OriginationUrlListInstance(sid) {\n    return OriginationUrlListInstance.get(sid);\n  }\n\n  OriginationUrlListInstance._version = version;\n  // Path Solution\n  OriginationUrlListInstance._solution = {trunkSid: trunkSid};\n  OriginationUrlListInstance._uri = `/Trunks/${trunkSid}/OriginationUrls`;\n  /* jshint ignore:start */\n  /**\n   * create a OriginationUrlInstance\n   *\n   * @function create\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {object} opts - Options for request\n   * @param {number} opts.weight -\n   *          The value that determines the relative load the URI should receive compared to others with the same priority\n   * @param {number} opts.priority - The relative importance of the URI\n   * @param {boolean} opts.enabled - Whether the URL is enabled\n   * @param {string} opts.friendlyName - A string to describe the resource\n   * @param {string} opts.sipUrl -\n   *          The SIP address you want Twilio to route your Origination calls to\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed OriginationUrlInstance\n   */\n  /* jshint ignore:end */\n  OriginationUrlListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.weight)) {\n      throw new Error('Required parameter \"opts.weight\" missing.');\n    }\n    if (_.isUndefined(opts.priority)) {\n      throw new Error('Required parameter \"opts.priority\" missing.');\n    }\n    if (_.isUndefined(opts.enabled)) {\n      throw new Error('Required parameter \"opts.enabled\" missing.');\n    }\n    if (_.isUndefined(opts.friendlyName)) {\n      throw new Error('Required parameter \"opts.friendlyName\" missing.');\n    }\n    if (_.isUndefined(opts.sipUrl)) {\n      throw new Error('Required parameter \"opts.sipUrl\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Weight': _.get(opts, 'weight'),\n      'Priority': _.get(opts, 'priority'),\n      'Enabled': serialize.bool(_.get(opts, 'enabled')),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'SipUrl': _.get(opts, 'sipUrl')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new OriginationUrlInstance(\n        this._version,\n        payload,\n        this._solution.trunkSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams OriginationUrlInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  OriginationUrlListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists OriginationUrlInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  OriginationUrlListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of OriginationUrlInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  OriginationUrlListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new OriginationUrlPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of OriginationUrlInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  OriginationUrlListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new OriginationUrlPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a origination_url\n   *\n   * @function get\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.OriginationUrlContext}\n   */\n  /* jshint ignore:end */\n  OriginationUrlListInstance.get = function get(sid) {\n    return new OriginationUrlContext(this._version, this._solution.trunkSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  OriginationUrlListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  OriginationUrlListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return OriginationUrlListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the OriginationUrlPage\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.OriginationUrlPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {OriginationUrlSolution} solution - Path solution\n *\n * @returns OriginationUrlPage\n */\n/* jshint ignore:end */\nOriginationUrlPage = function OriginationUrlPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(OriginationUrlPage.prototype, Page.prototype);\nOriginationUrlPage.prototype.constructor = OriginationUrlPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of OriginationUrlInstance\n *\n * @function getInstance\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlPage#\n *\n * @param {OriginationUrlPayload} payload - Payload response from the API\n *\n * @returns OriginationUrlInstance\n */\n/* jshint ignore:end */\nOriginationUrlPage.prototype.getInstance = function getInstance(payload) {\n  return new OriginationUrlInstance(this._version, payload, this._solution.trunkSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nOriginationUrlPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nOriginationUrlPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the OriginationUrlContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} trunkSid - The SID of the Trunk that owns the Origination URL\n * @property {number} weight -\n *          The value that determines the relative load the URI should receive compared to others with the same priority\n * @property {boolean} enabled - Whether the URL is enabled\n * @property {string} sipUrl -\n *          The SIP address you want Twilio to route your Origination calls to\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {number} priority - The relative importance of the URI\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT when the resource was last updated\n * @property {string} url - The absolute URL of the resource\n *\n * @param {V1} version - Version of the resource\n * @param {OriginationUrlPayload} payload - The instance payload\n * @param {sid} trunkSid - The SID of the Trunk that owns the Origination URL\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nOriginationUrlInstance = function OriginationUrlInstance(version, payload,\n                                                          trunkSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.trunkSid = payload.trunk_sid; // jshint ignore:line\n  this.weight = deserialize.integer(payload.weight); // jshint ignore:line\n  this.enabled = payload.enabled; // jshint ignore:line\n  this.sipUrl = payload.sip_url; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.priority = deserialize.integer(payload.priority); // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {trunkSid: trunkSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(OriginationUrlInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new OriginationUrlContext(\n          this._version,\n          this._solution.trunkSid,\n          this._solution.sid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a OriginationUrlInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n/* jshint ignore:end */\nOriginationUrlInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a OriginationUrlInstance\n *\n * @function remove\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n/* jshint ignore:end */\nOriginationUrlInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a OriginationUrlInstance\n *\n * @function update\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.weight] -\n *          The value that determines the relative load the URI should receive compared to others with the same priority\n * @param {number} [opts.priority] - The relative importance of the URI\n * @param {boolean} [opts.enabled] - Whether the URL is enabled\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.sipUrl] -\n *          The SIP address you want Twilio to route your Origination calls to\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n/* jshint ignore:end */\nOriginationUrlInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nOriginationUrlInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nOriginationUrlInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the OriginationUrlContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.OriginationUrlContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} trunkSid -\n *          The SID of the Trunk from which to fetch the OriginationUrl\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nOriginationUrlContext = function OriginationUrlContext(version, trunkSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {trunkSid: trunkSid, sid: sid, };\n  this._uri = `/Trunks/${trunkSid}/OriginationUrls/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a OriginationUrlInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n/* jshint ignore:end */\nOriginationUrlContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new OriginationUrlInstance(\n      this._version,\n      payload,\n      this._solution.trunkSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a OriginationUrlInstance\n *\n * @function remove\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n/* jshint ignore:end */\nOriginationUrlContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a OriginationUrlInstance\n *\n * @function update\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.weight] -\n *          The value that determines the relative load the URI should receive compared to others with the same priority\n * @param {number} [opts.priority] - The relative importance of the URI\n * @param {boolean} [opts.enabled] - Whether the URL is enabled\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.sipUrl] -\n *          The SIP address you want Twilio to route your Origination calls to\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n/* jshint ignore:end */\nOriginationUrlContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Weight': _.get(opts, 'weight'),\n    'Priority': _.get(opts, 'priority'),\n    'Enabled': serialize.bool(_.get(opts, 'enabled')),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'SipUrl': _.get(opts, 'sipUrl')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new OriginationUrlInstance(\n      this._version,\n      payload,\n      this._solution.trunkSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nOriginationUrlContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nOriginationUrlContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  OriginationUrlList: OriginationUrlList,\n  OriginationUrlPage: OriginationUrlPage,\n  OriginationUrlInstance: OriginationUrlInstance,\n  OriginationUrlContext: OriginationUrlContext\n};\n"]},"metadata":{},"sourceType":"module"}