{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar DependentPhoneNumberList;\nvar DependentPhoneNumberPage;\nvar DependentPhoneNumberInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the DependentPhoneNumberList\n *\n * @constructor Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n * @param {string} addressSid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\nDependentPhoneNumberList = function DependentPhoneNumberList(version, accountSid, addressSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function dependentPhoneNumbers\n   * @memberof Twilio.Api.V2010.AccountContext.AddressContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberContext}\n   */\n\n  /* jshint ignore:end */\n  function DependentPhoneNumberListInstance(sid) {\n    return DependentPhoneNumberListInstance.get(sid);\n  }\n\n  DependentPhoneNumberListInstance._version = version; // Path Solution\n\n  DependentPhoneNumberListInstance._solution = {\n    accountSid: accountSid,\n    addressSid: addressSid\n  };\n  DependentPhoneNumberListInstance._uri = `/Accounts/${accountSid}/Addresses/${addressSid}/DependentPhoneNumbers.json`;\n  /* jshint ignore:start */\n\n  /**\n   * Streams DependentPhoneNumberInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n  DependentPhoneNumberListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists DependentPhoneNumberInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  DependentPhoneNumberListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of DependentPhoneNumberInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  DependentPhoneNumberListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new DependentPhoneNumberPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of DependentPhoneNumberInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  DependentPhoneNumberListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new DependentPhoneNumberPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  DependentPhoneNumberListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  DependentPhoneNumberListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return DependentPhoneNumberListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the DependentPhoneNumberPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {DependentPhoneNumberSolution} solution - Path solution\n *\n * @returns DependentPhoneNumberPage\n */\n\n/* jshint ignore:end */\n\n\nDependentPhoneNumberPage = function DependentPhoneNumberPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(DependentPhoneNumberPage.prototype, Page.prototype);\n\nDependentPhoneNumberPage.prototype.constructor = DependentPhoneNumberPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of DependentPhoneNumberInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberPage#\n *\n * @param {DependentPhoneNumberPayload} payload - Payload response from the API\n *\n * @returns DependentPhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\nDependentPhoneNumberPage.prototype.getInstance = function getInstance(payload) {\n  return new DependentPhoneNumberInstance(this._version, payload, this._solution.accountSid, this._solution.addressSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nDependentPhoneNumberPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nDependentPhoneNumberPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the DependentPhoneNumberContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} phoneNumber - The phone number in E.164 format\n * @property {string} voiceUrl -\n *          The URL we call when the phone number receives a call\n * @property {string} voiceMethod - The HTTP method used with the voice_url\n * @property {string} voiceFallbackMethod -\n *          The HTTP method used with voice_fallback_url\n * @property {string} voiceFallbackUrl -\n *          The URL we call when an error occurs in TwiML\n * @property {boolean} voiceCallerIdLookup - Whether to lookup the caller's name\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} smsFallbackMethod -\n *          The HTTP method used with sms_fallback_url\n * @property {string} smsFallbackUrl -\n *          The URL that we call when an error occurs while retrieving or executing the TwiML\n * @property {string} smsMethod - The HTTP method to use with sms_url\n * @property {string} smsUrl -\n *          The URL we call when the phone number receives an incoming SMS message\n * @property {dependent_phone_number.address_requirement} addressRequirements -\n *          Whether the phone number requires an Address registered with Twilio\n * @property {object} capabilities -\n *          Indicate if a phone can receive calls or messages\n * @property {string} statusCallback -\n *          The URL to send status information to your application\n * @property {string} statusCallbackMethod -\n *          The HTTP method we use to call status_callback\n * @property {string} apiVersion -\n *          The API version used to start a new TwiML session\n * @property {string} smsApplicationSid -\n *          The SID of the application that handles SMS messages sent to the phone number\n * @property {string} voiceApplicationSid -\n *          The SID of the application that handles calls to the phone number\n * @property {string} trunkSid -\n *          The SID of the Trunk that handles calls to the phone number\n * @property {dependent_phone_number.emergency_status} emergencyStatus -\n *          Whether the phone number is enabled for emergency calling\n * @property {string} emergencyAddressSid -\n *          The emergency address configuration to use for emergency calling\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n *\n * @param {V2010} version - Version of the resource\n * @param {DependentPhoneNumberPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created the resource\n * @param {sid} addressSid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nDependentPhoneNumberInstance = function DependentPhoneNumberInstance(version, payload, accountSid, addressSid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n\n  this.voiceUrl = payload.voice_url; // jshint ignore:line\n\n  this.voiceMethod = payload.voice_method; // jshint ignore:line\n\n  this.voiceFallbackMethod = payload.voice_fallback_method; // jshint ignore:line\n\n  this.voiceFallbackUrl = payload.voice_fallback_url; // jshint ignore:line\n\n  this.voiceCallerIdLookup = payload.voice_caller_id_lookup; // jshint ignore:line\n\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n\n  this.smsFallbackMethod = payload.sms_fallback_method; // jshint ignore:line\n\n  this.smsFallbackUrl = payload.sms_fallback_url; // jshint ignore:line\n\n  this.smsMethod = payload.sms_method; // jshint ignore:line\n\n  this.smsUrl = payload.sms_url; // jshint ignore:line\n\n  this.addressRequirements = payload.address_requirements; // jshint ignore:line\n\n  this.capabilities = payload.capabilities; // jshint ignore:line\n\n  this.statusCallback = payload.status_callback; // jshint ignore:line\n\n  this.statusCallbackMethod = payload.status_callback_method; // jshint ignore:line\n\n  this.apiVersion = payload.api_version; // jshint ignore:line\n\n  this.smsApplicationSid = payload.sms_application_sid; // jshint ignore:line\n\n  this.voiceApplicationSid = payload.voice_application_sid; // jshint ignore:line\n\n  this.trunkSid = payload.trunk_sid; // jshint ignore:line\n\n  this.emergencyStatus = payload.emergency_status; // jshint ignore:line\n\n  this.emergencyAddressSid = payload.emergency_address_sid; // jshint ignore:line\n\n  this.uri = payload.uri; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    accountSid: accountSid,\n    addressSid: addressSid\n  };\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nDependentPhoneNumberInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nDependentPhoneNumberInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  DependentPhoneNumberList: DependentPhoneNumberList,\n  DependentPhoneNumberPage: DependentPhoneNumberPage,\n  DependentPhoneNumberInstance: DependentPhoneNumberInstance\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/api/v2010/account/address/dependentPhoneNumber.js"],"names":["Q","require","_","util","Page","deserialize","values","DependentPhoneNumberList","DependentPhoneNumberPage","DependentPhoneNumberInstance","version","accountSid","addressSid","DependentPhoneNumberListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","account_sid","friendlyName","friendly_name","phoneNumber","phone_number","voiceUrl","voice_url","voiceMethod","voice_method","voiceFallbackMethod","voice_fallback_method","voiceFallbackUrl","voice_fallback_url","voiceCallerIdLookup","voice_caller_id_lookup","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","smsFallbackMethod","sms_fallback_method","smsFallbackUrl","sms_fallback_url","smsMethod","sms_method","smsUrl","sms_url","addressRequirements","address_requirements","capabilities","statusCallback","status_callback","statusCallbackMethod","status_callback_method","apiVersion","api_version","smsApplicationSid","sms_application_sid","voiceApplicationSid","voice_application_sid","trunkSid","trunk_sid","emergencyStatus","emergency_status","emergencyAddressSid","emergency_address_sid","_context","undefined","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar DependentPhoneNumberList;\nvar DependentPhoneNumberPage;\nvar DependentPhoneNumberInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the DependentPhoneNumberList\n *\n * @constructor Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n * @param {string} addressSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nDependentPhoneNumberList = function DependentPhoneNumberList(version,\n    accountSid, addressSid) {\n  /* jshint ignore:start */\n  /**\n   * @function dependentPhoneNumbers\n   * @memberof Twilio.Api.V2010.AccountContext.AddressContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberContext}\n   */\n  /* jshint ignore:end */\n  function DependentPhoneNumberListInstance(sid) {\n    return DependentPhoneNumberListInstance.get(sid);\n  }\n\n  DependentPhoneNumberListInstance._version = version;\n  // Path Solution\n  DependentPhoneNumberListInstance._solution = {accountSid: accountSid, addressSid: addressSid};\n  DependentPhoneNumberListInstance._uri = `/Accounts/${accountSid}/Addresses/${addressSid}/DependentPhoneNumbers.json`;\n  /* jshint ignore:start */\n  /**\n   * Streams DependentPhoneNumberInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  DependentPhoneNumberListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists DependentPhoneNumberInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  DependentPhoneNumberListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of DependentPhoneNumberInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  DependentPhoneNumberListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new DependentPhoneNumberPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of DependentPhoneNumberInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  DependentPhoneNumberListInstance.getPage = function getPage(targetUrl, callback)\n                                                               {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new DependentPhoneNumberPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  DependentPhoneNumberListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  DependentPhoneNumberListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return DependentPhoneNumberListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the DependentPhoneNumberPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {DependentPhoneNumberSolution} solution - Path solution\n *\n * @returns DependentPhoneNumberPage\n */\n/* jshint ignore:end */\nDependentPhoneNumberPage = function DependentPhoneNumberPage(version, response,\n    solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(DependentPhoneNumberPage.prototype, Page.prototype);\nDependentPhoneNumberPage.prototype.constructor = DependentPhoneNumberPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of DependentPhoneNumberInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberPage#\n *\n * @param {DependentPhoneNumberPayload} payload - Payload response from the API\n *\n * @returns DependentPhoneNumberInstance\n */\n/* jshint ignore:end */\nDependentPhoneNumberPage.prototype.getInstance = function getInstance(payload) {\n  return new DependentPhoneNumberInstance(\n    this._version,\n    payload,\n    this._solution.accountSid,\n    this._solution.addressSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nDependentPhoneNumberPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nDependentPhoneNumberPage.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the DependentPhoneNumberContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} phoneNumber - The phone number in E.164 format\n * @property {string} voiceUrl -\n *          The URL we call when the phone number receives a call\n * @property {string} voiceMethod - The HTTP method used with the voice_url\n * @property {string} voiceFallbackMethod -\n *          The HTTP method used with voice_fallback_url\n * @property {string} voiceFallbackUrl -\n *          The URL we call when an error occurs in TwiML\n * @property {boolean} voiceCallerIdLookup - Whether to lookup the caller's name\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} smsFallbackMethod -\n *          The HTTP method used with sms_fallback_url\n * @property {string} smsFallbackUrl -\n *          The URL that we call when an error occurs while retrieving or executing the TwiML\n * @property {string} smsMethod - The HTTP method to use with sms_url\n * @property {string} smsUrl -\n *          The URL we call when the phone number receives an incoming SMS message\n * @property {dependent_phone_number.address_requirement} addressRequirements -\n *          Whether the phone number requires an Address registered with Twilio\n * @property {object} capabilities -\n *          Indicate if a phone can receive calls or messages\n * @property {string} statusCallback -\n *          The URL to send status information to your application\n * @property {string} statusCallbackMethod -\n *          The HTTP method we use to call status_callback\n * @property {string} apiVersion -\n *          The API version used to start a new TwiML session\n * @property {string} smsApplicationSid -\n *          The SID of the application that handles SMS messages sent to the phone number\n * @property {string} voiceApplicationSid -\n *          The SID of the application that handles calls to the phone number\n * @property {string} trunkSid -\n *          The SID of the Trunk that handles calls to the phone number\n * @property {dependent_phone_number.emergency_status} emergencyStatus -\n *          Whether the phone number is enabled for emergency calling\n * @property {string} emergencyAddressSid -\n *          The emergency address configuration to use for emergency calling\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n *\n * @param {V2010} version - Version of the resource\n * @param {DependentPhoneNumberPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created the resource\n * @param {sid} addressSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nDependentPhoneNumberInstance = function DependentPhoneNumberInstance(version,\n    payload, accountSid, addressSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n  this.voiceUrl = payload.voice_url; // jshint ignore:line\n  this.voiceMethod = payload.voice_method; // jshint ignore:line\n  this.voiceFallbackMethod = payload.voice_fallback_method; // jshint ignore:line\n  this.voiceFallbackUrl = payload.voice_fallback_url; // jshint ignore:line\n  this.voiceCallerIdLookup = payload.voice_caller_id_lookup; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.smsFallbackMethod = payload.sms_fallback_method; // jshint ignore:line\n  this.smsFallbackUrl = payload.sms_fallback_url; // jshint ignore:line\n  this.smsMethod = payload.sms_method; // jshint ignore:line\n  this.smsUrl = payload.sms_url; // jshint ignore:line\n  this.addressRequirements = payload.address_requirements; // jshint ignore:line\n  this.capabilities = payload.capabilities; // jshint ignore:line\n  this.statusCallback = payload.status_callback; // jshint ignore:line\n  this.statusCallbackMethod = payload.status_callback_method; // jshint ignore:line\n  this.apiVersion = payload.api_version; // jshint ignore:line\n  this.smsApplicationSid = payload.sms_application_sid; // jshint ignore:line\n  this.voiceApplicationSid = payload.voice_application_sid; // jshint ignore:line\n  this.trunkSid = payload.trunk_sid; // jshint ignore:line\n  this.emergencyStatus = payload.emergency_status; // jshint ignore:line\n  this.emergencyAddressSid = payload.emergency_address_sid; // jshint ignore:line\n  this.uri = payload.uri; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {accountSid: accountSid, addressSid: addressSid, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.AddressContext.DependentPhoneNumberInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nDependentPhoneNumberInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nDependentPhoneNumberInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  DependentPhoneNumberList: DependentPhoneNumberList,\n  DependentPhoneNumberPage: DependentPhoneNumberPage,\n  DependentPhoneNumberInstance: DependentPhoneNumberInstance\n};\n"]},"metadata":{},"sourceType":"script"}