{"ast":null,"code":"'use strict';\n/**\n * Monitor the network connection status to detect interruptions and handoffs.\n */\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar NetworkMonitor = function () {\n  /**\n   * Construct a {@link NetworkMonitor}.\n   * @param {function} onNetworkChanged\n   * @param {*} [options]\n   */\n  function NetworkMonitor(onNetworkChanged, options) {\n    var _this = this;\n\n    _classCallCheck(this, NetworkMonitor);\n\n    options = Object.assign({\n      navigator: navigator,\n      window: window\n    }, options);\n    var nav = options.navigator;\n    var connection = nav.connection || {\n      type: null\n    };\n    var type = connection.type;\n\n    var _ref = connection.type ? {\n      _events: {\n        value: ['change', 'typechange']\n      },\n      _listener: {\n        value: function value() {\n          var networkChanged = type !== _this.type && _this.isOnline;\n          type = _this.type;\n\n          if (networkChanged) {\n            onNetworkChanged();\n          }\n        }\n      },\n      _target: {\n        value: connection\n      }\n    } : {\n      _events: {\n        value: ['online']\n      },\n      _listener: {\n        value: onNetworkChanged\n      },\n      _target: {\n        value: options.window\n      }\n    },\n        _events = _ref._events,\n        _listener = _ref._listener,\n        _target = _ref._target;\n\n    Object.defineProperties(this, {\n      isOnline: {\n        enumerable: true,\n        get: function get() {\n          return typeof nav.onLine === 'boolean' ? nav.onLine : true;\n        }\n      },\n      type: {\n        enumerable: true,\n        get: function get() {\n          return connection.type || null;\n        }\n      },\n      _listener: _listener,\n      _events: _events,\n      _target: _target\n    });\n  }\n  /**\n   * Start the {@link NetworkMonitor}.\n   */\n\n\n  _createClass(NetworkMonitor, [{\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      this._events.forEach(function (event) {\n        _this2._target.addEventListener(event, _this2._listener);\n      });\n    }\n    /**\n     * Stop the {@link NetworkMonitor}.\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var _this3 = this;\n\n      this._events.forEach(function (event) {\n        _this3._target.removeEventListener(event, _this3._listener);\n      });\n    }\n  }]);\n\n  return NetworkMonitor;\n}();\n\nmodule.exports = NetworkMonitor;","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio-video/es5/util/networkmonitor.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","NetworkMonitor","onNetworkChanged","options","_this","assign","navigator","window","nav","connection","type","_ref","_events","value","_listener","networkChanged","isOnline","_target","get","onLine","start","_this2","forEach","event","addEventListener","stop","_this3","removeEventListener","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/**\n * Monitor the network connection status to detect interruptions and handoffs.\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar NetworkMonitor = function () {\n  /**\n   * Construct a {@link NetworkMonitor}.\n   * @param {function} onNetworkChanged\n   * @param {*} [options]\n   */\n  function NetworkMonitor(onNetworkChanged, options) {\n    var _this = this;\n\n    _classCallCheck(this, NetworkMonitor);\n\n    options = Object.assign({\n      navigator: navigator,\n      window: window\n    }, options);\n\n    var nav = options.navigator;\n    var connection = nav.connection || { type: null };\n    var type = connection.type;\n\n    var _ref = connection.type ? {\n      _events: {\n        value: ['change', 'typechange']\n      },\n      _listener: {\n        value: function value() {\n          var networkChanged = type !== _this.type && _this.isOnline;\n          type = _this.type;\n          if (networkChanged) {\n            onNetworkChanged();\n          }\n        }\n      },\n      _target: {\n        value: connection\n      }\n    } : {\n      _events: {\n        value: ['online']\n      },\n      _listener: {\n        value: onNetworkChanged\n      },\n      _target: {\n        value: options.window\n      }\n    },\n        _events = _ref._events,\n        _listener = _ref._listener,\n        _target = _ref._target;\n\n    Object.defineProperties(this, {\n      isOnline: {\n        enumerable: true,\n        get: function get() {\n          return typeof nav.onLine === 'boolean' ? nav.onLine : true;\n        }\n      },\n      type: {\n        enumerable: true,\n        get: function get() {\n          return connection.type || null;\n        }\n      },\n      _listener: _listener,\n      _events: _events,\n      _target: _target\n    });\n  }\n\n  /**\n   * Start the {@link NetworkMonitor}.\n   */\n\n\n  _createClass(NetworkMonitor, [{\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      this._events.forEach(function (event) {\n        _this2._target.addEventListener(event, _this2._listener);\n      });\n    }\n\n    /**\n     * Stop the {@link NetworkMonitor}.\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var _this3 = this;\n\n      this._events.forEach(function (event) {\n        _this3._target.removeEventListener(event, _this3._listener);\n      });\n    }\n  }]);\n\n  return NetworkMonitor;\n}();\n\nmodule.exports = NetworkMonitor;"]},"metadata":{},"sourceType":"script"}