{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar ConfigurationList;\nvar ConfigurationPage;\nvar ConfigurationInstance;\nvar ConfigurationContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the ConfigurationList\n *\n * @constructor Twilio.FlexApi.V1.ConfigurationList\n *\n * @param {Twilio.FlexApi.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nConfigurationList = function ConfigurationList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function configuration\n   * @memberof Twilio.FlexApi.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.FlexApi.V1.ConfigurationContext}\n   */\n\n  /* jshint ignore:end */\n  function ConfigurationListInstance(sid) {\n    return ConfigurationListInstance.get(sid);\n  }\n\n  ConfigurationListInstance._version = version; // Path Solution\n\n  ConfigurationListInstance._solution = {};\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a configuration\n   *\n   * @function get\n   * @memberof Twilio.FlexApi.V1.ConfigurationList#\n   *\n   * @returns {Twilio.FlexApi.V1.ConfigurationContext}\n   */\n\n  /* jshint ignore:end */\n\n  ConfigurationListInstance.get = function get() {\n    return new ConfigurationContext(this._version);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.FlexApi.V1.ConfigurationList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  ConfigurationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ConfigurationListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ConfigurationListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ConfigurationPage\n *\n * @constructor Twilio.FlexApi.V1.ConfigurationPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ConfigurationSolution} solution - Path solution\n *\n * @returns ConfigurationPage\n */\n\n/* jshint ignore:end */\n\n\nConfigurationPage = function ConfigurationPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ConfigurationPage.prototype, Page.prototype);\n\nConfigurationPage.prototype.constructor = ConfigurationPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of ConfigurationInstance\n *\n * @function getInstance\n * @memberof Twilio.FlexApi.V1.ConfigurationPage#\n *\n * @param {ConfigurationPayload} payload - Payload response from the API\n *\n * @returns ConfigurationInstance\n */\n\n/* jshint ignore:end */\n\nConfigurationPage.prototype.getInstance = function getInstance(payload) {\n  return new ConfigurationInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.FlexApi.V1.ConfigurationPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nConfigurationPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nConfigurationPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ConfigurationContext\n *\n * @constructor Twilio.FlexApi.V1.ConfigurationInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the Configuration resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the Configuration resource was last updated\n * @property {object} attributes -\n *          An object that contains application-specific data\n * @property {configuration.status} status - The status of the Flex onboarding\n * @property {string} taskrouterWorkspaceSid - The SID of the TaskRouter Workspace\n * @property {string} taskrouterTargetWorkflowSid -\n *          The SID of the TaskRouter target Workflow\n * @property {string} taskrouterTargetTaskqueueSid -\n *          The SID of the TaskRouter Target TaskQueue\n * @property {object} taskrouterTaskqueues - The list of TaskRouter TaskQueues\n * @property {object} taskrouterSkills -\n *          The Skill description for TaskRouter workers\n * @property {object} taskrouterWorkerChannels -\n *          The TaskRouter default channel capacities and availability for workers\n * @property {object} taskrouterWorkerAttributes - The TaskRouter Worker attributes\n * @property {string} taskrouterOfflineActivitySid -\n *          The TaskRouter SID of the offline activity\n * @property {string} runtimeDomain - The URL where the Flex instance is hosted\n * @property {string} messagingServiceInstanceSid -\n *          The SID of the Messaging service instance\n * @property {string} chatServiceInstanceSid -\n *          The SID of the chat service this user belongs to\n * @property {string} flexServiceInstanceSid - The SID of the Flex service instance\n * @property {string} uiLanguage - The primary language of the Flex UI\n * @property {object} uiAttributes -\n *          The object that describes Flex UI characteristics and settings\n * @property {object} uiDependencies -\n *          The object that defines the NPM packages and versions to be used in Hosted Flex\n * @property {string} uiVersion - The Pinned UI version\n * @property {string} serviceVersion - The Flex Service version\n * @property {boolean} callRecordingEnabled - Whether call recording is enabled\n * @property {string} callRecordingWebhookUrl - The call recording webhook URL\n * @property {boolean} crmEnabled - Whether CRM is present for Flex\n * @property {string} crmType - The CRM Type\n * @property {string} crmCallbackUrl - The CRM Callback URL\n * @property {string} crmFallbackUrl - The CRM Fallback URL\n * @property {object} crmAttributes - An object that contains the CRM attributes\n * @property {object} publicAttributes - The list of public attributes\n * @property {boolean} pluginServiceEnabled - Whether the plugin service enabled\n * @property {object} pluginServiceAttributes - The plugin service attributes\n * @property {object} integrations -\n *          A list of objects that contain the configurations for the Integrations supported in this configuration\n * @property {object} outboundCallFlows - The list of outbound call flows\n * @property {string} serverlessServiceSids - The list of serverless service SIDs\n * @property {object} queueStatsConfiguration -\n *          Configurable parameters for Queues Statistics\n * @property {object} notifications - Configurable parameters for Notifications\n * @property {object} markdown - Configurable parameters for Markdown\n * @property {string} url - The absolute URL of the Configuration resource\n *\n * @param {V1} version - Version of the resource\n * @param {ConfigurationPayload} payload - The instance payload\n */\n\n/* jshint ignore:end */\n\n\nConfigurationInstance = function ConfigurationInstance(version, payload) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.attributes = payload.attributes; // jshint ignore:line\n\n  this.status = payload.status; // jshint ignore:line\n\n  this.taskrouterWorkspaceSid = payload.taskrouter_workspace_sid; // jshint ignore:line\n\n  this.taskrouterTargetWorkflowSid = payload.taskrouter_target_workflow_sid; // jshint ignore:line\n\n  this.taskrouterTargetTaskqueueSid = payload.taskrouter_target_taskqueue_sid; // jshint ignore:line\n\n  this.taskrouterTaskqueues = payload.taskrouter_taskqueues; // jshint ignore:line\n\n  this.taskrouterSkills = payload.taskrouter_skills; // jshint ignore:line\n\n  this.taskrouterWorkerChannels = payload.taskrouter_worker_channels; // jshint ignore:line\n\n  this.taskrouterWorkerAttributes = payload.taskrouter_worker_attributes; // jshint ignore:line\n\n  this.taskrouterOfflineActivitySid = payload.taskrouter_offline_activity_sid; // jshint ignore:line\n\n  this.runtimeDomain = payload.runtime_domain; // jshint ignore:line\n\n  this.messagingServiceInstanceSid = payload.messaging_service_instance_sid; // jshint ignore:line\n\n  this.chatServiceInstanceSid = payload.chat_service_instance_sid; // jshint ignore:line\n\n  this.flexServiceInstanceSid = payload.flex_service_instance_sid; // jshint ignore:line\n\n  this.uiLanguage = payload.ui_language; // jshint ignore:line\n\n  this.uiAttributes = payload.ui_attributes; // jshint ignore:line\n\n  this.uiDependencies = payload.ui_dependencies; // jshint ignore:line\n\n  this.uiVersion = payload.ui_version; // jshint ignore:line\n\n  this.serviceVersion = payload.service_version; // jshint ignore:line\n\n  this.callRecordingEnabled = payload.call_recording_enabled; // jshint ignore:line\n\n  this.callRecordingWebhookUrl = payload.call_recording_webhook_url; // jshint ignore:line\n\n  this.crmEnabled = payload.crm_enabled; // jshint ignore:line\n\n  this.crmType = payload.crm_type; // jshint ignore:line\n\n  this.crmCallbackUrl = payload.crm_callback_url; // jshint ignore:line\n\n  this.crmFallbackUrl = payload.crm_fallback_url; // jshint ignore:line\n\n  this.crmAttributes = payload.crm_attributes; // jshint ignore:line\n\n  this.publicAttributes = payload.public_attributes; // jshint ignore:line\n\n  this.pluginServiceEnabled = payload.plugin_service_enabled; // jshint ignore:line\n\n  this.pluginServiceAttributes = payload.plugin_service_attributes; // jshint ignore:line\n\n  this.integrations = payload.integrations; // jshint ignore:line\n\n  this.outboundCallFlows = payload.outbound_call_flows; // jshint ignore:line\n\n  this.serverlessServiceSids = payload.serverless_service_sids; // jshint ignore:line\n\n  this.queueStatsConfiguration = payload.queue_stats_configuration; // jshint ignore:line\n\n  this.notifications = payload.notifications; // jshint ignore:line\n\n  this.markdown = payload.markdown; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {};\n};\n\nObject.defineProperty(ConfigurationInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new ConfigurationContext(this._version);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a ConfigurationInstance\n *\n * @function fetch\n * @memberof Twilio.FlexApi.V1.ConfigurationInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uiVersion] -\n *          The Pinned UI version of the Configuration resource to fetch\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n\n/* jshint ignore:end */\n\nConfigurationInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * create a ConfigurationInstance\n *\n * @function create\n * @memberof Twilio.FlexApi.V1.ConfigurationInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n\n/* jshint ignore:end */\n\n\nConfigurationInstance.prototype.create = function create(callback) {\n  return this._proxy.create(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a ConfigurationInstance\n *\n * @function update\n * @memberof Twilio.FlexApi.V1.ConfigurationInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n\n/* jshint ignore:end */\n\n\nConfigurationInstance.prototype.update = function update(callback) {\n  return this._proxy.update(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.FlexApi.V1.ConfigurationInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nConfigurationInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nConfigurationInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ConfigurationContext\n *\n * @constructor Twilio.FlexApi.V1.ConfigurationContext\n *\n * @param {V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\n\nConfigurationContext = function ConfigurationContext(version) {\n  this._version = version; // Path Solution\n\n  this._solution = {};\n  this._uri = `/Configuration`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a ConfigurationInstance\n *\n * @function fetch\n * @memberof Twilio.FlexApi.V1.ConfigurationContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uiVersion] -\n *          The Pinned UI version of the Configuration resource to fetch\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n\n/* jshint ignore:end */\n\n\nConfigurationContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'UiVersion': _.get(opts, 'uiVersion')\n  });\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ConfigurationInstance(this._version, payload));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * create a ConfigurationInstance\n *\n * @function create\n * @memberof Twilio.FlexApi.V1.ConfigurationContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n\n/* jshint ignore:end */\n\n\nConfigurationContext.prototype.create = function create(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.create({\n    uri: this._uri,\n    method: 'POST'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ConfigurationInstance(this._version, payload));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a ConfigurationInstance\n *\n * @function update\n * @memberof Twilio.FlexApi.V1.ConfigurationContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n\n/* jshint ignore:end */\n\n\nConfigurationContext.prototype.update = function update(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ConfigurationInstance(this._version, payload));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.FlexApi.V1.ConfigurationContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nConfigurationContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nConfigurationContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ConfigurationList: ConfigurationList,\n  ConfigurationPage: ConfigurationPage,\n  ConfigurationInstance: ConfigurationInstance,\n  ConfigurationContext: ConfigurationContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/flexApi/v1/configuration.js"],"names":["Q","require","_","util","Page","deserialize","values","ConfigurationList","ConfigurationPage","ConfigurationInstance","ConfigurationContext","version","ConfigurationListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","attributes","status","taskrouterWorkspaceSid","taskrouter_workspace_sid","taskrouterTargetWorkflowSid","taskrouter_target_workflow_sid","taskrouterTargetTaskqueueSid","taskrouter_target_taskqueue_sid","taskrouterTaskqueues","taskrouter_taskqueues","taskrouterSkills","taskrouter_skills","taskrouterWorkerChannels","taskrouter_worker_channels","taskrouterWorkerAttributes","taskrouter_worker_attributes","taskrouterOfflineActivitySid","taskrouter_offline_activity_sid","runtimeDomain","runtime_domain","messagingServiceInstanceSid","messaging_service_instance_sid","chatServiceInstanceSid","chat_service_instance_sid","flexServiceInstanceSid","flex_service_instance_sid","uiLanguage","ui_language","uiAttributes","ui_attributes","uiDependencies","ui_dependencies","uiVersion","ui_version","serviceVersion","service_version","callRecordingEnabled","call_recording_enabled","callRecordingWebhookUrl","call_recording_webhook_url","crmEnabled","crm_enabled","crmType","crm_type","crmCallbackUrl","crm_callback_url","crmFallbackUrl","crm_fallback_url","crmAttributes","crm_attributes","publicAttributes","public_attributes","pluginServiceEnabled","plugin_service_enabled","pluginServiceAttributes","plugin_service_attributes","integrations","outboundCallFlows","outbound_call_flows","serverlessServiceSids","serverless_service_sids","queueStatsConfiguration","queue_stats_configuration","notifications","markdown","url","_context","undefined","Object","defineProperty","fetch","opts","callback","_proxy","create","update","_uri","deferred","defer","data","of","promise","uri","method","params","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar ConfigurationList;\nvar ConfigurationPage;\nvar ConfigurationInstance;\nvar ConfigurationContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationList\n *\n * @constructor Twilio.FlexApi.V1.ConfigurationList\n *\n * @param {Twilio.FlexApi.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nConfigurationList = function ConfigurationList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function configuration\n   * @memberof Twilio.FlexApi.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.FlexApi.V1.ConfigurationContext}\n   */\n  /* jshint ignore:end */\n  function ConfigurationListInstance(sid) {\n    return ConfigurationListInstance.get(sid);\n  }\n\n  ConfigurationListInstance._version = version;\n  // Path Solution\n  ConfigurationListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a configuration\n   *\n   * @function get\n   * @memberof Twilio.FlexApi.V1.ConfigurationList#\n   *\n   * @returns {Twilio.FlexApi.V1.ConfigurationContext}\n   */\n  /* jshint ignore:end */\n  ConfigurationListInstance.get = function get() {\n    return new ConfigurationContext(this._version);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.FlexApi.V1.ConfigurationList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ConfigurationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ConfigurationListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ConfigurationListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationPage\n *\n * @constructor Twilio.FlexApi.V1.ConfigurationPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ConfigurationSolution} solution - Path solution\n *\n * @returns ConfigurationPage\n */\n/* jshint ignore:end */\nConfigurationPage = function ConfigurationPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ConfigurationPage.prototype, Page.prototype);\nConfigurationPage.prototype.constructor = ConfigurationPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ConfigurationInstance\n *\n * @function getInstance\n * @memberof Twilio.FlexApi.V1.ConfigurationPage#\n *\n * @param {ConfigurationPayload} payload - Payload response from the API\n *\n * @returns ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationPage.prototype.getInstance = function getInstance(payload) {\n  return new ConfigurationInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.FlexApi.V1.ConfigurationPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nConfigurationPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nConfigurationPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationContext\n *\n * @constructor Twilio.FlexApi.V1.ConfigurationInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the Configuration resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the Configuration resource was last updated\n * @property {object} attributes -\n *          An object that contains application-specific data\n * @property {configuration.status} status - The status of the Flex onboarding\n * @property {string} taskrouterWorkspaceSid - The SID of the TaskRouter Workspace\n * @property {string} taskrouterTargetWorkflowSid -\n *          The SID of the TaskRouter target Workflow\n * @property {string} taskrouterTargetTaskqueueSid -\n *          The SID of the TaskRouter Target TaskQueue\n * @property {object} taskrouterTaskqueues - The list of TaskRouter TaskQueues\n * @property {object} taskrouterSkills -\n *          The Skill description for TaskRouter workers\n * @property {object} taskrouterWorkerChannels -\n *          The TaskRouter default channel capacities and availability for workers\n * @property {object} taskrouterWorkerAttributes - The TaskRouter Worker attributes\n * @property {string} taskrouterOfflineActivitySid -\n *          The TaskRouter SID of the offline activity\n * @property {string} runtimeDomain - The URL where the Flex instance is hosted\n * @property {string} messagingServiceInstanceSid -\n *          The SID of the Messaging service instance\n * @property {string} chatServiceInstanceSid -\n *          The SID of the chat service this user belongs to\n * @property {string} flexServiceInstanceSid - The SID of the Flex service instance\n * @property {string} uiLanguage - The primary language of the Flex UI\n * @property {object} uiAttributes -\n *          The object that describes Flex UI characteristics and settings\n * @property {object} uiDependencies -\n *          The object that defines the NPM packages and versions to be used in Hosted Flex\n * @property {string} uiVersion - The Pinned UI version\n * @property {string} serviceVersion - The Flex Service version\n * @property {boolean} callRecordingEnabled - Whether call recording is enabled\n * @property {string} callRecordingWebhookUrl - The call recording webhook URL\n * @property {boolean} crmEnabled - Whether CRM is present for Flex\n * @property {string} crmType - The CRM Type\n * @property {string} crmCallbackUrl - The CRM Callback URL\n * @property {string} crmFallbackUrl - The CRM Fallback URL\n * @property {object} crmAttributes - An object that contains the CRM attributes\n * @property {object} publicAttributes - The list of public attributes\n * @property {boolean} pluginServiceEnabled - Whether the plugin service enabled\n * @property {object} pluginServiceAttributes - The plugin service attributes\n * @property {object} integrations -\n *          A list of objects that contain the configurations for the Integrations supported in this configuration\n * @property {object} outboundCallFlows - The list of outbound call flows\n * @property {string} serverlessServiceSids - The list of serverless service SIDs\n * @property {object} queueStatsConfiguration -\n *          Configurable parameters for Queues Statistics\n * @property {object} notifications - Configurable parameters for Notifications\n * @property {object} markdown - Configurable parameters for Markdown\n * @property {string} url - The absolute URL of the Configuration resource\n *\n * @param {V1} version - Version of the resource\n * @param {ConfigurationPayload} payload - The instance payload\n */\n/* jshint ignore:end */\nConfigurationInstance = function ConfigurationInstance(version, payload) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.attributes = payload.attributes; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.taskrouterWorkspaceSid = payload.taskrouter_workspace_sid; // jshint ignore:line\n  this.taskrouterTargetWorkflowSid = payload.taskrouter_target_workflow_sid; // jshint ignore:line\n  this.taskrouterTargetTaskqueueSid = payload.taskrouter_target_taskqueue_sid; // jshint ignore:line\n  this.taskrouterTaskqueues = payload.taskrouter_taskqueues; // jshint ignore:line\n  this.taskrouterSkills = payload.taskrouter_skills; // jshint ignore:line\n  this.taskrouterWorkerChannels = payload.taskrouter_worker_channels; // jshint ignore:line\n  this.taskrouterWorkerAttributes = payload.taskrouter_worker_attributes; // jshint ignore:line\n  this.taskrouterOfflineActivitySid = payload.taskrouter_offline_activity_sid; // jshint ignore:line\n  this.runtimeDomain = payload.runtime_domain; // jshint ignore:line\n  this.messagingServiceInstanceSid = payload.messaging_service_instance_sid; // jshint ignore:line\n  this.chatServiceInstanceSid = payload.chat_service_instance_sid; // jshint ignore:line\n  this.flexServiceInstanceSid = payload.flex_service_instance_sid; // jshint ignore:line\n  this.uiLanguage = payload.ui_language; // jshint ignore:line\n  this.uiAttributes = payload.ui_attributes; // jshint ignore:line\n  this.uiDependencies = payload.ui_dependencies; // jshint ignore:line\n  this.uiVersion = payload.ui_version; // jshint ignore:line\n  this.serviceVersion = payload.service_version; // jshint ignore:line\n  this.callRecordingEnabled = payload.call_recording_enabled; // jshint ignore:line\n  this.callRecordingWebhookUrl = payload.call_recording_webhook_url; // jshint ignore:line\n  this.crmEnabled = payload.crm_enabled; // jshint ignore:line\n  this.crmType = payload.crm_type; // jshint ignore:line\n  this.crmCallbackUrl = payload.crm_callback_url; // jshint ignore:line\n  this.crmFallbackUrl = payload.crm_fallback_url; // jshint ignore:line\n  this.crmAttributes = payload.crm_attributes; // jshint ignore:line\n  this.publicAttributes = payload.public_attributes; // jshint ignore:line\n  this.pluginServiceEnabled = payload.plugin_service_enabled; // jshint ignore:line\n  this.pluginServiceAttributes = payload.plugin_service_attributes; // jshint ignore:line\n  this.integrations = payload.integrations; // jshint ignore:line\n  this.outboundCallFlows = payload.outbound_call_flows; // jshint ignore:line\n  this.serverlessServiceSids = payload.serverless_service_sids; // jshint ignore:line\n  this.queueStatsConfiguration = payload.queue_stats_configuration; // jshint ignore:line\n  this.notifications = payload.notifications; // jshint ignore:line\n  this.markdown = payload.markdown; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {};\n};\n\nObject.defineProperty(ConfigurationInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new ConfigurationContext(this._version);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a ConfigurationInstance\n *\n * @function fetch\n * @memberof Twilio.FlexApi.V1.ConfigurationInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uiVersion] -\n *          The Pinned UI version of the Configuration resource to fetch\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * create a ConfigurationInstance\n *\n * @function create\n * @memberof Twilio.FlexApi.V1.ConfigurationInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationInstance.prototype.create = function create(callback) {\n  return this._proxy.create(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a ConfigurationInstance\n *\n * @function update\n * @memberof Twilio.FlexApi.V1.ConfigurationInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationInstance.prototype.update = function update(callback) {\n  return this._proxy.update(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.FlexApi.V1.ConfigurationInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nConfigurationInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nConfigurationInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationContext\n *\n * @constructor Twilio.FlexApi.V1.ConfigurationContext\n *\n * @param {V1} version - Version of the resource\n */\n/* jshint ignore:end */\nConfigurationContext = function ConfigurationContext(version) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {};\n  this._uri = `/Configuration`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ConfigurationInstance\n *\n * @function fetch\n * @memberof Twilio.FlexApi.V1.ConfigurationContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uiVersion] -\n *          The Pinned UI version of the Configuration resource to fetch\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({'UiVersion': _.get(opts, 'uiVersion')});\n\n  var promise = this._version.fetch({uri: this._uri, method: 'GET', params: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ConfigurationInstance(this._version, payload));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * create a ConfigurationInstance\n *\n * @function create\n * @memberof Twilio.FlexApi.V1.ConfigurationContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationContext.prototype.create = function create(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.create({uri: this._uri, method: 'POST'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ConfigurationInstance(this._version, payload));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a ConfigurationInstance\n *\n * @function update\n * @memberof Twilio.FlexApi.V1.ConfigurationContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationContext.prototype.update = function update(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.update({uri: this._uri, method: 'POST'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ConfigurationInstance(this._version, payload));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.FlexApi.V1.ConfigurationContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nConfigurationContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nConfigurationContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ConfigurationList: ConfigurationList,\n  ConfigurationPage: ConfigurationPage,\n  ConfigurationInstance: ConfigurationInstance,\n  ConfigurationContext: ConfigurationContext\n};\n"]},"metadata":{},"sourceType":"script"}