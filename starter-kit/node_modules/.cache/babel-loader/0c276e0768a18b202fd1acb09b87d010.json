{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar BucketList;\nvar BucketPage;\nvar BucketInstance;\nvar BucketContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the BucketList\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList\n *\n * @param {Twilio.Verify.V2} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @param {string} rateLimitSid - Rate Limit Sid.\n */\n\n/* jshint ignore:end */\n\nBucketList = function BucketList(version, serviceSid, rateLimitSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function buckets\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext}\n   */\n\n  /* jshint ignore:end */\n  function BucketListInstance(sid) {\n    return BucketListInstance.get(sid);\n  }\n\n  BucketListInstance._version = version; // Path Solution\n\n  BucketListInstance._solution = {\n    serviceSid: serviceSid,\n    rateLimitSid: rateLimitSid\n  };\n  BucketListInstance._uri = `/Services/${serviceSid}/RateLimits/${rateLimitSid}/Buckets`;\n  /* jshint ignore:start */\n\n  /**\n   * create a BucketInstance\n   *\n   * @function create\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {object} opts - Options for request\n   * @param {number} opts.max - Max number of requests.\n   * @param {number} opts.interval -\n   *          Number of seconds that the rate limit will be enforced over.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed BucketInstance\n   */\n\n  /* jshint ignore:end */\n\n  BucketListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.max)) {\n      throw new Error('Required parameter \"opts.max\" missing.');\n    }\n\n    if (_.isUndefined(opts.interval)) {\n      throw new Error('Required parameter \"opts.interval\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Max': _.get(opts, 'max'),\n      'Interval': _.get(opts, 'interval')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new BucketInstance(this._version, payload, this._solution.serviceSid, this._solution.rateLimitSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams BucketInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  BucketListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists BucketInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  BucketListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of BucketInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  BucketListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new BucketPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of BucketInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  BucketListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new BucketPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a bucket\n   *\n   * @function get\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {string} sid - A string that uniquely identifies this Bucket.\n   *\n   * @returns {Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  BucketListInstance.get = function get(sid) {\n    return new BucketContext(this._version, this._solution.serviceSid, this._solution.rateLimitSid, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  BucketListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  BucketListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return BucketListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the BucketPage\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {BucketSolution} solution - Path solution\n *\n * @returns BucketPage\n */\n\n/* jshint ignore:end */\n\n\nBucketPage = function BucketPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(BucketPage.prototype, Page.prototype);\n\nBucketPage.prototype.constructor = BucketPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of BucketInstance\n *\n * @function getInstance\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketPage#\n *\n * @param {BucketPayload} payload - Payload response from the API\n *\n * @returns BucketInstance\n */\n\n/* jshint ignore:end */\n\nBucketPage.prototype.getInstance = function getInstance(payload) {\n  return new BucketInstance(this._version, payload, this._solution.serviceSid, this._solution.rateLimitSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nBucketPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nBucketPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the BucketContext\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance\n *\n * @property {string} sid - A string that uniquely identifies this Bucket.\n * @property {string} rateLimitSid - Rate Limit Sid.\n * @property {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {number} max - Max number of requests.\n * @property {number} interval -\n *          Number of seconds that the rate limit will be enforced over.\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT when the resource was last updated\n * @property {string} url - The URL of this resource.\n *\n * @param {V2} version - Version of the resource\n * @param {BucketPayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @param {sid} rateLimitSid - Rate Limit Sid.\n * @param {sid} sid - A string that uniquely identifies this Bucket.\n */\n\n/* jshint ignore:end */\n\n\nBucketInstance = function BucketInstance(version, payload, serviceSid, rateLimitSid, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.rateLimitSid = payload.rate_limit_sid; // jshint ignore:line\n\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.max = deserialize.integer(payload.max); // jshint ignore:line\n\n  this.interval = deserialize.integer(payload.interval); // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid,\n    rateLimitSid: rateLimitSid,\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(BucketInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new BucketContext(this._version, this._solution.serviceSid, this._solution.rateLimitSid, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * update a BucketInstance\n *\n * @function update\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.max] - Max number of requests.\n * @param {number} [opts.interval] -\n *          Number of seconds that the rate limit will be enforced over.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n\n/* jshint ignore:end */\n\nBucketInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * fetch a BucketInstance\n *\n * @function fetch\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n\n/* jshint ignore:end */\n\n\nBucketInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a BucketInstance\n *\n * @function remove\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n\n/* jshint ignore:end */\n\n\nBucketInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nBucketInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nBucketInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the BucketContext\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext\n *\n * @param {V2} version - Version of the resource\n * @param {sid} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @param {sid} rateLimitSid - Rate Limit Sid.\n * @param {sid} sid - A string that uniquely identifies this Bucket.\n */\n\n/* jshint ignore:end */\n\n\nBucketContext = function BucketContext(version, serviceSid, rateLimitSid, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    serviceSid: serviceSid,\n    rateLimitSid: rateLimitSid,\n    sid: sid\n  };\n  this._uri = `/Services/${serviceSid}/RateLimits/${rateLimitSid}/Buckets/${sid}`;\n};\n/* jshint ignore:start */\n\n/**\n * update a BucketInstance\n *\n * @function update\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.max] - Max number of requests.\n * @param {number} [opts.interval] -\n *          Number of seconds that the rate limit will be enforced over.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n\n/* jshint ignore:end */\n\n\nBucketContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Max': _.get(opts, 'max'),\n    'Interval': _.get(opts, 'interval')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new BucketInstance(this._version, payload, this._solution.serviceSid, this._solution.rateLimitSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a BucketInstance\n *\n * @function fetch\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n\n/* jshint ignore:end */\n\n\nBucketContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new BucketInstance(this._version, payload, this._solution.serviceSid, this._solution.rateLimitSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a BucketInstance\n *\n * @function remove\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n\n/* jshint ignore:end */\n\n\nBucketContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nBucketContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nBucketContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  BucketList: BucketList,\n  BucketPage: BucketPage,\n  BucketInstance: BucketInstance,\n  BucketContext: BucketContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/rest/verify/v2/service/rateLimit/bucket.js"],"names":["Q","require","_","util","Page","deserialize","values","BucketList","BucketPage","BucketInstance","BucketContext","version","serviceSid","rateLimitSid","BucketListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","max","interval","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","rate_limit_sid","service_sid","accountSid","account_sid","integer","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","_context","undefined","Object","defineProperty","update","_proxy","fetch","remove","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar BucketList;\nvar BucketPage;\nvar BucketInstance;\nvar BucketContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the BucketList\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList\n *\n * @param {Twilio.Verify.V2} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @param {string} rateLimitSid - Rate Limit Sid.\n */\n/* jshint ignore:end */\nBucketList = function BucketList(version, serviceSid, rateLimitSid) {\n  /* jshint ignore:start */\n  /**\n   * @function buckets\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext}\n   */\n  /* jshint ignore:end */\n  function BucketListInstance(sid) {\n    return BucketListInstance.get(sid);\n  }\n\n  BucketListInstance._version = version;\n  // Path Solution\n  BucketListInstance._solution = {serviceSid: serviceSid, rateLimitSid: rateLimitSid};\n  BucketListInstance._uri = `/Services/${serviceSid}/RateLimits/${rateLimitSid}/Buckets`;\n  /* jshint ignore:start */\n  /**\n   * create a BucketInstance\n   *\n   * @function create\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {object} opts - Options for request\n   * @param {number} opts.max - Max number of requests.\n   * @param {number} opts.interval -\n   *          Number of seconds that the rate limit will be enforced over.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed BucketInstance\n   */\n  /* jshint ignore:end */\n  BucketListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.max)) {\n      throw new Error('Required parameter \"opts.max\" missing.');\n    }\n    if (_.isUndefined(opts.interval)) {\n      throw new Error('Required parameter \"opts.interval\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({'Max': _.get(opts, 'max'), 'Interval': _.get(opts, 'interval')});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new BucketInstance(\n        this._version,\n        payload,\n        this._solution.serviceSid,\n        this._solution.rateLimitSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams BucketInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  BucketListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists BucketInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  BucketListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of BucketInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  BucketListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new BucketPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of BucketInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  BucketListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new BucketPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a bucket\n   *\n   * @function get\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {string} sid - A string that uniquely identifies this Bucket.\n   *\n   * @returns {Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext}\n   */\n  /* jshint ignore:end */\n  BucketListInstance.get = function get(sid) {\n    return new BucketContext(\n      this._version,\n      this._solution.serviceSid,\n      this._solution.rateLimitSid,\n      sid\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  BucketListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  BucketListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return BucketListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the BucketPage\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {BucketSolution} solution - Path solution\n *\n * @returns BucketPage\n */\n/* jshint ignore:end */\nBucketPage = function BucketPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(BucketPage.prototype, Page.prototype);\nBucketPage.prototype.constructor = BucketPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of BucketInstance\n *\n * @function getInstance\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketPage#\n *\n * @param {BucketPayload} payload - Payload response from the API\n *\n * @returns BucketInstance\n */\n/* jshint ignore:end */\nBucketPage.prototype.getInstance = function getInstance(payload) {\n  return new BucketInstance(\n    this._version,\n    payload,\n    this._solution.serviceSid,\n    this._solution.rateLimitSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBucketPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nBucketPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the BucketContext\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance\n *\n * @property {string} sid - A string that uniquely identifies this Bucket.\n * @property {string} rateLimitSid - Rate Limit Sid.\n * @property {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {number} max - Max number of requests.\n * @property {number} interval -\n *          Number of seconds that the rate limit will be enforced over.\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT when the resource was last updated\n * @property {string} url - The URL of this resource.\n *\n * @param {V2} version - Version of the resource\n * @param {BucketPayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @param {sid} rateLimitSid - Rate Limit Sid.\n * @param {sid} sid - A string that uniquely identifies this Bucket.\n */\n/* jshint ignore:end */\nBucketInstance = function BucketInstance(version, payload, serviceSid,\n                                          rateLimitSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.rateLimitSid = payload.rate_limit_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.max = deserialize.integer(payload.max); // jshint ignore:line\n  this.interval = deserialize.integer(payload.interval); // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {serviceSid: serviceSid, rateLimitSid: rateLimitSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(BucketInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new BucketContext(\n          this._version,\n          this._solution.serviceSid,\n          this._solution.rateLimitSid,\n          this._solution.sid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * update a BucketInstance\n *\n * @function update\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.max] - Max number of requests.\n * @param {number} [opts.interval] -\n *          Number of seconds that the rate limit will be enforced over.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n/* jshint ignore:end */\nBucketInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a BucketInstance\n *\n * @function fetch\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n/* jshint ignore:end */\nBucketInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a BucketInstance\n *\n * @function remove\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n/* jshint ignore:end */\nBucketInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBucketInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nBucketInstance.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the BucketContext\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext\n *\n * @param {V2} version - Version of the resource\n * @param {sid} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @param {sid} rateLimitSid - Rate Limit Sid.\n * @param {sid} sid - A string that uniquely identifies this Bucket.\n */\n/* jshint ignore:end */\nBucketContext = function BucketContext(version, serviceSid, rateLimitSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {serviceSid: serviceSid, rateLimitSid: rateLimitSid, sid: sid, };\n  this._uri = `/Services/${serviceSid}/RateLimits/${rateLimitSid}/Buckets/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * update a BucketInstance\n *\n * @function update\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.max] - Max number of requests.\n * @param {number} [opts.interval] -\n *          Number of seconds that the rate limit will be enforced over.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n/* jshint ignore:end */\nBucketContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({'Max': _.get(opts, 'max'), 'Interval': _.get(opts, 'interval')});\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new BucketInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.rateLimitSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a BucketInstance\n *\n * @function fetch\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n/* jshint ignore:end */\nBucketContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new BucketInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.rateLimitSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a BucketInstance\n *\n * @function remove\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n/* jshint ignore:end */\nBucketContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBucketContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nBucketContext.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  BucketList: BucketList,\n  BucketPage: BucketPage,\n  BucketInstance: BucketInstance,\n  BucketContext: BucketContext\n};\n"]},"metadata":{},"sourceType":"module"}