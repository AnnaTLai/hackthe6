{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar CallSummaryList = require('./call/summary').CallSummaryList;\n\nvar EventList = require('./call/event').EventList;\n\nvar MetricList = require('./call/metric').MetricList;\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar CallList;\nvar CallPage;\nvar CallInstance;\nvar CallContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the CallList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Insights.V1.CallList\n *\n * @param {Twilio.Insights.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nCallList = function CallList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function calls\n   * @memberof Twilio.Insights.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Insights.V1.CallContext}\n   */\n\n  /* jshint ignore:end */\n  function CallListInstance(sid) {\n    return CallListInstance.get(sid);\n  }\n\n  CallListInstance._version = version; // Path Solution\n\n  CallListInstance._solution = {};\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a call\n   *\n   * @function get\n   * @memberof Twilio.Insights.V1.CallList#\n   *\n   * @param {string} sid - The sid\n   *\n   * @returns {Twilio.Insights.V1.CallContext}\n   */\n\n  /* jshint ignore:end */\n\n  CallListInstance.get = function get(sid) {\n    return new CallContext(this._version, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Insights.V1.CallList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  CallListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  CallListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return CallListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the CallPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Insights.V1.CallPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {CallSolution} solution - Path solution\n *\n * @returns CallPage\n */\n\n/* jshint ignore:end */\n\n\nCallPage = function CallPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(CallPage.prototype, Page.prototype);\n\nCallPage.prototype.constructor = CallPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of CallInstance\n *\n * @function getInstance\n * @memberof Twilio.Insights.V1.CallPage#\n *\n * @param {CallPayload} payload - Payload response from the API\n *\n * @returns CallInstance\n */\n\n/* jshint ignore:end */\n\nCallPage.prototype.getInstance = function getInstance(payload) {\n  return new CallInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.CallPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nCallPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nCallPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the CallContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Insights.V1.CallInstance\n *\n * @property {string} sid - The sid\n * @property {string} url - The url\n * @property {string} links - The links\n *\n * @param {V1} version - Version of the resource\n * @param {CallPayload} payload - The instance payload\n * @param {sid} sid - The sid\n */\n\n/* jshint ignore:end */\n\n\nCallInstance = function CallInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.links = payload.links; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(CallInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new CallContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a CallInstance\n *\n * @function fetch\n * @memberof Twilio.Insights.V1.CallInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CallInstance\n */\n\n/* jshint ignore:end */\n\nCallInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Access the events\n *\n * @function events\n * @memberof Twilio.Insights.V1.CallInstance#\n *\n * @returns {Twilio.Insights.V1.CallContext.EventList}\n */\n\n/* jshint ignore:end */\n\n\nCallInstance.prototype.events = function events() {\n  return this._proxy.events;\n};\n/* jshint ignore:start */\n\n/**\n * Access the metrics\n *\n * @function metrics\n * @memberof Twilio.Insights.V1.CallInstance#\n *\n * @returns {Twilio.Insights.V1.CallContext.MetricList}\n */\n\n/* jshint ignore:end */\n\n\nCallInstance.prototype.metrics = function metrics() {\n  return this._proxy.metrics;\n};\n/* jshint ignore:start */\n\n/**\n * Access the summary\n *\n * @function summary\n * @memberof Twilio.Insights.V1.CallInstance#\n *\n * @returns {Twilio.Insights.V1.CallContext.CallSummaryList}\n */\n\n/* jshint ignore:end */\n\n\nCallInstance.prototype.summary = function summary() {\n  return this._proxy.summary;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.CallInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nCallInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nCallInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the CallContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Insights.V1.CallContext\n *\n * @property {Twilio.Insights.V1.CallContext.EventList} events - events resource\n * @property {Twilio.Insights.V1.CallContext.MetricList} metrics - metrics resource\n * @property {Twilio.Insights.V1.CallContext.CallSummaryList} summary -\n *          summary resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The sid\n */\n\n/* jshint ignore:end */\n\n\nCallContext = function CallContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/Voice/${sid}`; // Dependents\n\n  this._events = undefined;\n  this._metrics = undefined;\n  this._summary = undefined;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a CallInstance\n *\n * @function fetch\n * @memberof Twilio.Insights.V1.CallContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CallInstance\n */\n\n/* jshint ignore:end */\n\n\nCallContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new CallInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(CallContext.prototype, 'events', {\n  get: function () {\n    if (!this._events) {\n      this._events = new EventList(this._version, this._solution.sid);\n    }\n\n    return this._events;\n  }\n});\nObject.defineProperty(CallContext.prototype, 'metrics', {\n  get: function () {\n    if (!this._metrics) {\n      this._metrics = new MetricList(this._version, this._solution.sid);\n    }\n\n    return this._metrics;\n  }\n});\nObject.defineProperty(CallContext.prototype, 'summary', {\n  get: function () {\n    if (!this._summary) {\n      this._summary = new CallSummaryList(this._version, this._solution.sid);\n    }\n\n    return this._summary;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.CallContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\nCallContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nCallContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  CallList: CallList,\n  CallPage: CallPage,\n  CallInstance: CallInstance,\n  CallContext: CallContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/insights/v1/call.js"],"names":["Q","require","_","util","CallSummaryList","EventList","MetricList","Page","values","CallList","CallPage","CallInstance","CallContext","version","CallListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","url","links","_context","undefined","Object","defineProperty","fetch","callback","_proxy","events","metrics","summary","_uri","_events","_metrics","_summary","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar CallSummaryList = require('./call/summary').CallSummaryList;\nvar EventList = require('./call/event').EventList;\nvar MetricList = require('./call/metric').MetricList;\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar CallList;\nvar CallPage;\nvar CallInstance;\nvar CallContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the CallList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Insights.V1.CallList\n *\n * @param {Twilio.Insights.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nCallList = function CallList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function calls\n   * @memberof Twilio.Insights.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Insights.V1.CallContext}\n   */\n  /* jshint ignore:end */\n  function CallListInstance(sid) {\n    return CallListInstance.get(sid);\n  }\n\n  CallListInstance._version = version;\n  // Path Solution\n  CallListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a call\n   *\n   * @function get\n   * @memberof Twilio.Insights.V1.CallList#\n   *\n   * @param {string} sid - The sid\n   *\n   * @returns {Twilio.Insights.V1.CallContext}\n   */\n  /* jshint ignore:end */\n  CallListInstance.get = function get(sid) {\n    return new CallContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Insights.V1.CallList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  CallListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  CallListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return CallListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the CallPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Insights.V1.CallPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {CallSolution} solution - Path solution\n *\n * @returns CallPage\n */\n/* jshint ignore:end */\nCallPage = function CallPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(CallPage.prototype, Page.prototype);\nCallPage.prototype.constructor = CallPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of CallInstance\n *\n * @function getInstance\n * @memberof Twilio.Insights.V1.CallPage#\n *\n * @param {CallPayload} payload - Payload response from the API\n *\n * @returns CallInstance\n */\n/* jshint ignore:end */\nCallPage.prototype.getInstance = function getInstance(payload) {\n  return new CallInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.CallPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nCallPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nCallPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the CallContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Insights.V1.CallInstance\n *\n * @property {string} sid - The sid\n * @property {string} url - The url\n * @property {string} links - The links\n *\n * @param {V1} version - Version of the resource\n * @param {CallPayload} payload - The instance payload\n * @param {sid} sid - The sid\n */\n/* jshint ignore:end */\nCallInstance = function CallInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(CallInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new CallContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a CallInstance\n *\n * @function fetch\n * @memberof Twilio.Insights.V1.CallInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CallInstance\n */\n/* jshint ignore:end */\nCallInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the events\n *\n * @function events\n * @memberof Twilio.Insights.V1.CallInstance#\n *\n * @returns {Twilio.Insights.V1.CallContext.EventList}\n */\n/* jshint ignore:end */\nCallInstance.prototype.events = function events() {\n  return this._proxy.events;\n};\n\n/* jshint ignore:start */\n/**\n * Access the metrics\n *\n * @function metrics\n * @memberof Twilio.Insights.V1.CallInstance#\n *\n * @returns {Twilio.Insights.V1.CallContext.MetricList}\n */\n/* jshint ignore:end */\nCallInstance.prototype.metrics = function metrics() {\n  return this._proxy.metrics;\n};\n\n/* jshint ignore:start */\n/**\n * Access the summary\n *\n * @function summary\n * @memberof Twilio.Insights.V1.CallInstance#\n *\n * @returns {Twilio.Insights.V1.CallContext.CallSummaryList}\n */\n/* jshint ignore:end */\nCallInstance.prototype.summary = function summary() {\n  return this._proxy.summary;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.CallInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nCallInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nCallInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the CallContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Insights.V1.CallContext\n *\n * @property {Twilio.Insights.V1.CallContext.EventList} events - events resource\n * @property {Twilio.Insights.V1.CallContext.MetricList} metrics - metrics resource\n * @property {Twilio.Insights.V1.CallContext.CallSummaryList} summary -\n *          summary resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The sid\n */\n/* jshint ignore:end */\nCallContext = function CallContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/Voice/${sid}`;\n\n  // Dependents\n  this._events = undefined;\n  this._metrics = undefined;\n  this._summary = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a CallInstance\n *\n * @function fetch\n * @memberof Twilio.Insights.V1.CallContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CallInstance\n */\n/* jshint ignore:end */\nCallContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new CallInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(CallContext.prototype,\n  'events', {\n    get: function() {\n      if (!this._events) {\n        this._events = new EventList(this._version, this._solution.sid);\n      }\n      return this._events;\n    }\n});\n\nObject.defineProperty(CallContext.prototype,\n  'metrics', {\n    get: function() {\n      if (!this._metrics) {\n        this._metrics = new MetricList(this._version, this._solution.sid);\n      }\n      return this._metrics;\n    }\n});\n\nObject.defineProperty(CallContext.prototype,\n  'summary', {\n    get: function() {\n      if (!this._summary) {\n        this._summary = new CallSummaryList(this._version, this._solution.sid);\n      }\n      return this._summary;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.CallContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nCallContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nCallContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  CallList: CallList,\n  CallPage: CallPage,\n  CallInstance: CallInstance,\n  CallContext: CallContext\n};\n"]},"metadata":{},"sourceType":"script"}