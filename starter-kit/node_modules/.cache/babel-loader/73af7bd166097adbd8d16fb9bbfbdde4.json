{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar ExportConfigurationList;\nvar ExportConfigurationPage;\nvar ExportConfigurationInstance;\nvar ExportConfigurationContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the ExportConfigurationList\n *\n * @constructor Twilio.Bulkexports.V1.ExportConfigurationList\n *\n * @param {Twilio.Bulkexports.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nExportConfigurationList = function ExportConfigurationList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function exportConfiguration\n   * @memberof Twilio.Bulkexports.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Bulkexports.V1.ExportConfigurationContext}\n   */\n\n  /* jshint ignore:end */\n  function ExportConfigurationListInstance(sid) {\n    return ExportConfigurationListInstance.get(sid);\n  }\n\n  ExportConfigurationListInstance._version = version; // Path Solution\n\n  ExportConfigurationListInstance._solution = {};\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a export_configuration\n   *\n   * @function get\n   * @memberof Twilio.Bulkexports.V1.ExportConfigurationList#\n   *\n   * @param {string} resourceType -\n   *          The type of communication – Messages, Calls, Conferences, and Participants\n   *\n   * @returns {Twilio.Bulkexports.V1.ExportConfigurationContext}\n   */\n\n  /* jshint ignore:end */\n\n  ExportConfigurationListInstance.get = function get(resourceType) {\n    return new ExportConfigurationContext(this._version, resourceType);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Bulkexports.V1.ExportConfigurationList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  ExportConfigurationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ExportConfigurationListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ExportConfigurationListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ExportConfigurationPage\n *\n * @constructor Twilio.Bulkexports.V1.ExportConfigurationPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ExportConfigurationSolution} solution - Path solution\n *\n * @returns ExportConfigurationPage\n */\n\n/* jshint ignore:end */\n\n\nExportConfigurationPage = function ExportConfigurationPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ExportConfigurationPage.prototype, Page.prototype);\n\nExportConfigurationPage.prototype.constructor = ExportConfigurationPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of ExportConfigurationInstance\n *\n * @function getInstance\n * @memberof Twilio.Bulkexports.V1.ExportConfigurationPage#\n *\n * @param {ExportConfigurationPayload} payload - Payload response from the API\n *\n * @returns ExportConfigurationInstance\n */\n\n/* jshint ignore:end */\n\nExportConfigurationPage.prototype.getInstance = function getInstance(payload) {\n  return new ExportConfigurationInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Bulkexports.V1.ExportConfigurationPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nExportConfigurationPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nExportConfigurationPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ExportConfigurationContext\n *\n * @constructor Twilio.Bulkexports.V1.ExportConfigurationInstance\n *\n * @property {boolean} enabled - Whether files are automatically generated\n * @property {string} webhookUrl - URL targeted at export\n * @property {string} webhookMethod - Whether to GET or POST to the webhook url\n * @property {string} resourceType -\n *          The type of communication – Messages, Calls, Conferences, and Participants\n * @property {string} url - The URL of this resource.\n *\n * @param {V1} version - Version of the resource\n * @param {ExportConfigurationPayload} payload - The instance payload\n * @param {string} resourceType -\n *          The type of communication – Messages, Calls, Conferences, and Participants\n */\n\n/* jshint ignore:end */\n\n\nExportConfigurationInstance = function ExportConfigurationInstance(version, payload, resourceType) {\n  this._version = version; // Marshaled Properties\n\n  this.enabled = payload.enabled; // jshint ignore:line\n\n  this.webhookUrl = payload.webhook_url; // jshint ignore:line\n\n  this.webhookMethod = payload.webhook_method; // jshint ignore:line\n\n  this.resourceType = payload.resource_type; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    resourceType: resourceType || this.resourceType\n  };\n};\n\nObject.defineProperty(ExportConfigurationInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new ExportConfigurationContext(this._version, this._solution.resourceType);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a ExportConfigurationInstance\n *\n * @function fetch\n * @memberof Twilio.Bulkexports.V1.ExportConfigurationInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ExportConfigurationInstance\n */\n\n/* jshint ignore:end */\n\nExportConfigurationInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a ExportConfigurationInstance\n *\n * @function update\n * @memberof Twilio.Bulkexports.V1.ExportConfigurationInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {boolean} [opts.enabled] - Whether files are automatically generated\n * @param {string} [opts.webhookUrl] - URL targeted at export\n * @param {string} [opts.webhookMethod] - Whether to GET or POST to the webhook url\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ExportConfigurationInstance\n */\n\n/* jshint ignore:end */\n\n\nExportConfigurationInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Bulkexports.V1.ExportConfigurationInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nExportConfigurationInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nExportConfigurationInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ExportConfigurationContext\n *\n * @constructor Twilio.Bulkexports.V1.ExportConfigurationContext\n *\n * @param {V1} version - Version of the resource\n * @param {string} resourceType -\n *          The type of communication – Messages, Calls, Conferences, and Participants\n */\n\n/* jshint ignore:end */\n\n\nExportConfigurationContext = function ExportConfigurationContext(version, resourceType) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    resourceType: resourceType\n  };\n  this._uri = `/Exports/${resourceType}/Configuration`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a ExportConfigurationInstance\n *\n * @function fetch\n * @memberof Twilio.Bulkexports.V1.ExportConfigurationContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ExportConfigurationInstance\n */\n\n/* jshint ignore:end */\n\n\nExportConfigurationContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ExportConfigurationInstance(this._version, payload, this._solution.resourceType));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a ExportConfigurationInstance\n *\n * @function update\n * @memberof Twilio.Bulkexports.V1.ExportConfigurationContext#\n *\n * @param {object} [opts] - Options for request\n * @param {boolean} [opts.enabled] - Whether files are automatically generated\n * @param {string} [opts.webhookUrl] - URL targeted at export\n * @param {string} [opts.webhookMethod] - Whether to GET or POST to the webhook url\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ExportConfigurationInstance\n */\n\n/* jshint ignore:end */\n\n\nExportConfigurationContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Enabled': serialize.bool(_.get(opts, 'enabled')),\n    'WebhookUrl': _.get(opts, 'webhookUrl'),\n    'WebhookMethod': _.get(opts, 'webhookMethod')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ExportConfigurationInstance(this._version, payload, this._solution.resourceType));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Bulkexports.V1.ExportConfigurationContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nExportConfigurationContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nExportConfigurationContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ExportConfigurationList: ExportConfigurationList,\n  ExportConfigurationPage: ExportConfigurationPage,\n  ExportConfigurationInstance: ExportConfigurationInstance,\n  ExportConfigurationContext: ExportConfigurationContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/rest/bulkexports/v1/exportConfiguration.js"],"names":["Q","require","_","util","Page","serialize","values","ExportConfigurationList","ExportConfigurationPage","ExportConfigurationInstance","ExportConfigurationContext","version","ExportConfigurationListInstance","sid","get","_version","_solution","resourceType","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","enabled","webhookUrl","webhook_url","webhookMethod","webhook_method","resource_type","url","_context","undefined","Object","defineProperty","fetch","callback","_proxy","update","opts","_uri","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","data","of","bool","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar ExportConfigurationList;\nvar ExportConfigurationPage;\nvar ExportConfigurationInstance;\nvar ExportConfigurationContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ExportConfigurationList\n *\n * @constructor Twilio.Bulkexports.V1.ExportConfigurationList\n *\n * @param {Twilio.Bulkexports.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nExportConfigurationList = function ExportConfigurationList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function exportConfiguration\n   * @memberof Twilio.Bulkexports.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Bulkexports.V1.ExportConfigurationContext}\n   */\n  /* jshint ignore:end */\n  function ExportConfigurationListInstance(sid) {\n    return ExportConfigurationListInstance.get(sid);\n  }\n\n  ExportConfigurationListInstance._version = version;\n  // Path Solution\n  ExportConfigurationListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a export_configuration\n   *\n   * @function get\n   * @memberof Twilio.Bulkexports.V1.ExportConfigurationList#\n   *\n   * @param {string} resourceType -\n   *          The type of communication – Messages, Calls, Conferences, and Participants\n   *\n   * @returns {Twilio.Bulkexports.V1.ExportConfigurationContext}\n   */\n  /* jshint ignore:end */\n  ExportConfigurationListInstance.get = function get(resourceType) {\n    return new ExportConfigurationContext(this._version, resourceType);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Bulkexports.V1.ExportConfigurationList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ExportConfigurationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ExportConfigurationListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ExportConfigurationListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ExportConfigurationPage\n *\n * @constructor Twilio.Bulkexports.V1.ExportConfigurationPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ExportConfigurationSolution} solution - Path solution\n *\n * @returns ExportConfigurationPage\n */\n/* jshint ignore:end */\nExportConfigurationPage = function ExportConfigurationPage(version, response,\n                                                            solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ExportConfigurationPage.prototype, Page.prototype);\nExportConfigurationPage.prototype.constructor = ExportConfigurationPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ExportConfigurationInstance\n *\n * @function getInstance\n * @memberof Twilio.Bulkexports.V1.ExportConfigurationPage#\n *\n * @param {ExportConfigurationPayload} payload - Payload response from the API\n *\n * @returns ExportConfigurationInstance\n */\n/* jshint ignore:end */\nExportConfigurationPage.prototype.getInstance = function getInstance(payload) {\n  return new ExportConfigurationInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Bulkexports.V1.ExportConfigurationPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nExportConfigurationPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nExportConfigurationPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ExportConfigurationContext\n *\n * @constructor Twilio.Bulkexports.V1.ExportConfigurationInstance\n *\n * @property {boolean} enabled - Whether files are automatically generated\n * @property {string} webhookUrl - URL targeted at export\n * @property {string} webhookMethod - Whether to GET or POST to the webhook url\n * @property {string} resourceType -\n *          The type of communication – Messages, Calls, Conferences, and Participants\n * @property {string} url - The URL of this resource.\n *\n * @param {V1} version - Version of the resource\n * @param {ExportConfigurationPayload} payload - The instance payload\n * @param {string} resourceType -\n *          The type of communication – Messages, Calls, Conferences, and Participants\n */\n/* jshint ignore:end */\nExportConfigurationInstance = function ExportConfigurationInstance(version,\n    payload, resourceType) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.enabled = payload.enabled; // jshint ignore:line\n  this.webhookUrl = payload.webhook_url; // jshint ignore:line\n  this.webhookMethod = payload.webhook_method; // jshint ignore:line\n  this.resourceType = payload.resource_type; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {resourceType: resourceType || this.resourceType, };\n};\n\nObject.defineProperty(ExportConfigurationInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new ExportConfigurationContext(this._version, this._solution.resourceType);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a ExportConfigurationInstance\n *\n * @function fetch\n * @memberof Twilio.Bulkexports.V1.ExportConfigurationInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ExportConfigurationInstance\n */\n/* jshint ignore:end */\nExportConfigurationInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a ExportConfigurationInstance\n *\n * @function update\n * @memberof Twilio.Bulkexports.V1.ExportConfigurationInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {boolean} [opts.enabled] - Whether files are automatically generated\n * @param {string} [opts.webhookUrl] - URL targeted at export\n * @param {string} [opts.webhookMethod] - Whether to GET or POST to the webhook url\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ExportConfigurationInstance\n */\n/* jshint ignore:end */\nExportConfigurationInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Bulkexports.V1.ExportConfigurationInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nExportConfigurationInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nExportConfigurationInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ExportConfigurationContext\n *\n * @constructor Twilio.Bulkexports.V1.ExportConfigurationContext\n *\n * @param {V1} version - Version of the resource\n * @param {string} resourceType -\n *          The type of communication – Messages, Calls, Conferences, and Participants\n */\n/* jshint ignore:end */\nExportConfigurationContext = function ExportConfigurationContext(version,\n    resourceType) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {resourceType: resourceType, };\n  this._uri = `/Exports/${resourceType}/Configuration`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ExportConfigurationInstance\n *\n * @function fetch\n * @memberof Twilio.Bulkexports.V1.ExportConfigurationContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ExportConfigurationInstance\n */\n/* jshint ignore:end */\nExportConfigurationContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ExportConfigurationInstance(\n      this._version,\n      payload,\n      this._solution.resourceType\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a ExportConfigurationInstance\n *\n * @function update\n * @memberof Twilio.Bulkexports.V1.ExportConfigurationContext#\n *\n * @param {object} [opts] - Options for request\n * @param {boolean} [opts.enabled] - Whether files are automatically generated\n * @param {string} [opts.webhookUrl] - URL targeted at export\n * @param {string} [opts.webhookMethod] - Whether to GET or POST to the webhook url\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ExportConfigurationInstance\n */\n/* jshint ignore:end */\nExportConfigurationContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Enabled': serialize.bool(_.get(opts, 'enabled')),\n    'WebhookUrl': _.get(opts, 'webhookUrl'),\n    'WebhookMethod': _.get(opts, 'webhookMethod')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ExportConfigurationInstance(\n      this._version,\n      payload,\n      this._solution.resourceType\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Bulkexports.V1.ExportConfigurationContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nExportConfigurationContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nExportConfigurationContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ExportConfigurationList: ExportConfigurationList,\n  ExportConfigurationPage: ExportConfigurationPage,\n  ExportConfigurationInstance: ExportConfigurationInstance,\n  ExportConfigurationContext: ExportConfigurationContext\n};\n"]},"metadata":{},"sourceType":"module"}