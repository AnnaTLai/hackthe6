{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar WorkspaceStatisticsList;\nvar WorkspaceStatisticsPage;\nvar WorkspaceStatisticsInstance;\nvar WorkspaceStatisticsContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkspaceStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid - The SID of the Workspace\n */\n\n/* jshint ignore:end */\n\nWorkspaceStatisticsList = function WorkspaceStatisticsList(version, workspaceSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function statistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsContext}\n   */\n\n  /* jshint ignore:end */\n  function WorkspaceStatisticsListInstance(sid) {\n    return WorkspaceStatisticsListInstance.get(sid);\n  }\n\n  WorkspaceStatisticsListInstance._version = version; // Path Solution\n\n  WorkspaceStatisticsListInstance._solution = {\n    workspaceSid: workspaceSid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a workspace_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsContext}\n   */\n\n  /* jshint ignore:end */\n\n  WorkspaceStatisticsListInstance.get = function get() {\n    return new WorkspaceStatisticsContext(this._version, this._solution.workspaceSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  WorkspaceStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WorkspaceStatisticsListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WorkspaceStatisticsListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkspaceStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkspaceStatisticsSolution} solution - Path solution\n *\n * @returns WorkspaceStatisticsPage\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceStatisticsPage = function WorkspaceStatisticsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WorkspaceStatisticsPage.prototype, Page.prototype);\n\nWorkspaceStatisticsPage.prototype.constructor = WorkspaceStatisticsPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of WorkspaceStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsPage#\n *\n * @param {WorkspaceStatisticsPayload} payload - Payload response from the API\n *\n * @returns WorkspaceStatisticsInstance\n */\n\n/* jshint ignore:end */\n\nWorkspaceStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new WorkspaceStatisticsInstance(this._version, payload, this._solution.workspaceSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nWorkspaceStatisticsPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkspaceStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsInstance\n *\n * @property {object} realtime -\n *          n object that contains the real-time statistics for the Workspace\n * @property {object} cumulative -\n *          An object that contains the cumulative statistics for the Workspace\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} workspaceSid - The SID of the Workspace\n * @property {string} url - The absolute URL of the Workspace statistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {WorkspaceStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The SID of the Workspace\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceStatisticsInstance = function WorkspaceStatisticsInstance(version, payload, workspaceSid) {\n  this._version = version; // Marshaled Properties\n\n  this.realtime = payload.realtime; // jshint ignore:line\n\n  this.cumulative = payload.cumulative; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    workspaceSid: workspaceSid\n  };\n};\n\nObject.defineProperty(WorkspaceStatisticsInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new WorkspaceStatisticsContext(this._version, this._solution.workspaceSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a WorkspaceStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {Date} [opts.endDate] -\n *          Only calculate statistics from this date and time and earlier\n * @param {string} [opts.taskChannel] -\n *          Only calculate statistics on this TaskChannel.\n * @param {string} [opts.splitByWaitTime] -\n *          A comma separated list of values that describes the thresholds to calculate statistics on\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceStatisticsInstance\n */\n\n/* jshint ignore:end */\n\nWorkspaceStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nWorkspaceStatisticsInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkspaceStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The SID of the Workspace to fetch\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceStatisticsContext = function WorkspaceStatisticsContext(version, workspaceSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    workspaceSid: workspaceSid\n  };\n  this._uri = `/Workspaces/${workspaceSid}/Statistics`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a WorkspaceStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {Date} [opts.endDate] -\n *          Only calculate statistics from this date and time and earlier\n * @param {string} [opts.taskChannel] -\n *          Only calculate statistics on this TaskChannel.\n * @param {string} [opts.splitByWaitTime] -\n *          A comma separated list of values that describes the thresholds to calculate statistics on\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceStatisticsInstance\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Minutes': _.get(opts, 'minutes'),\n    'StartDate': serialize.iso8601DateTime(_.get(opts, 'startDate')),\n    'EndDate': serialize.iso8601DateTime(_.get(opts, 'endDate')),\n    'TaskChannel': _.get(opts, 'taskChannel'),\n    'SplitByWaitTime': _.get(opts, 'splitByWaitTime')\n  });\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new WorkspaceStatisticsInstance(this._version, payload, this._solution.workspaceSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkspaceStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWorkspaceStatisticsContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WorkspaceStatisticsList: WorkspaceStatisticsList,\n  WorkspaceStatisticsPage: WorkspaceStatisticsPage,\n  WorkspaceStatisticsInstance: WorkspaceStatisticsInstance,\n  WorkspaceStatisticsContext: WorkspaceStatisticsContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/rest/taskrouter/v1/workspace/workspaceStatistics.js"],"names":["Q","require","_","util","Page","serialize","values","WorkspaceStatisticsList","WorkspaceStatisticsPage","WorkspaceStatisticsInstance","WorkspaceStatisticsContext","version","workspaceSid","WorkspaceStatisticsListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","realtime","cumulative","accountSid","account_sid","workspace_sid","url","_context","undefined","Object","defineProperty","fetch","opts","callback","_proxy","_uri","deferred","defer","data","of","iso8601DateTime","promise","uri","method","params","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar WorkspaceStatisticsList;\nvar WorkspaceStatisticsPage;\nvar WorkspaceStatisticsInstance;\nvar WorkspaceStatisticsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkspaceStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid - The SID of the Workspace\n */\n/* jshint ignore:end */\nWorkspaceStatisticsList = function WorkspaceStatisticsList(version,\n                                                            workspaceSid) {\n  /* jshint ignore:start */\n  /**\n   * @function statistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsContext}\n   */\n  /* jshint ignore:end */\n  function WorkspaceStatisticsListInstance(sid) {\n    return WorkspaceStatisticsListInstance.get(sid);\n  }\n\n  WorkspaceStatisticsListInstance._version = version;\n  // Path Solution\n  WorkspaceStatisticsListInstance._solution = {workspaceSid: workspaceSid};\n  /* jshint ignore:start */\n  /**\n   * Constructs a workspace_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsContext}\n   */\n  /* jshint ignore:end */\n  WorkspaceStatisticsListInstance.get = function get() {\n    return new WorkspaceStatisticsContext(this._version, this._solution.workspaceSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  WorkspaceStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WorkspaceStatisticsListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WorkspaceStatisticsListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkspaceStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkspaceStatisticsSolution} solution - Path solution\n *\n * @returns WorkspaceStatisticsPage\n */\n/* jshint ignore:end */\nWorkspaceStatisticsPage = function WorkspaceStatisticsPage(version, response,\n                                                            solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WorkspaceStatisticsPage.prototype, Page.prototype);\nWorkspaceStatisticsPage.prototype.constructor = WorkspaceStatisticsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of WorkspaceStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsPage#\n *\n * @param {WorkspaceStatisticsPayload} payload - Payload response from the API\n *\n * @returns WorkspaceStatisticsInstance\n */\n/* jshint ignore:end */\nWorkspaceStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new WorkspaceStatisticsInstance(this._version, payload, this._solution.workspaceSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkspaceStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkspaceStatisticsPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkspaceStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsInstance\n *\n * @property {object} realtime -\n *          n object that contains the real-time statistics for the Workspace\n * @property {object} cumulative -\n *          An object that contains the cumulative statistics for the Workspace\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} workspaceSid - The SID of the Workspace\n * @property {string} url - The absolute URL of the Workspace statistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {WorkspaceStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The SID of the Workspace\n */\n/* jshint ignore:end */\nWorkspaceStatisticsInstance = function WorkspaceStatisticsInstance(version,\n    payload, workspaceSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.realtime = payload.realtime; // jshint ignore:line\n  this.cumulative = payload.cumulative; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {workspaceSid: workspaceSid, };\n};\n\nObject.defineProperty(WorkspaceStatisticsInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new WorkspaceStatisticsContext(this._version, this._solution.workspaceSid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a WorkspaceStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {Date} [opts.endDate] -\n *          Only calculate statistics from this date and time and earlier\n * @param {string} [opts.taskChannel] -\n *          Only calculate statistics on this TaskChannel.\n * @param {string} [opts.splitByWaitTime] -\n *          A comma separated list of values that describes the thresholds to calculate statistics on\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceStatisticsInstance\n */\n/* jshint ignore:end */\nWorkspaceStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkspaceStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkspaceStatisticsInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkspaceStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The SID of the Workspace to fetch\n */\n/* jshint ignore:end */\nWorkspaceStatisticsContext = function WorkspaceStatisticsContext(version,\n    workspaceSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {workspaceSid: workspaceSid, };\n  this._uri = `/Workspaces/${workspaceSid}/Statistics`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a WorkspaceStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {Date} [opts.endDate] -\n *          Only calculate statistics from this date and time and earlier\n * @param {string} [opts.taskChannel] -\n *          Only calculate statistics on this TaskChannel.\n * @param {string} [opts.splitByWaitTime] -\n *          A comma separated list of values that describes the thresholds to calculate statistics on\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceStatisticsInstance\n */\n/* jshint ignore:end */\nWorkspaceStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Minutes': _.get(opts, 'minutes'),\n    'StartDate': serialize.iso8601DateTime(_.get(opts, 'startDate')),\n    'EndDate': serialize.iso8601DateTime(_.get(opts, 'endDate')),\n    'TaskChannel': _.get(opts, 'taskChannel'),\n    'SplitByWaitTime': _.get(opts, 'splitByWaitTime')\n  });\n\n  var promise = this._version.fetch({uri: this._uri, method: 'GET', params: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new WorkspaceStatisticsInstance(\n      this._version,\n      payload,\n      this._solution.workspaceSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkspaceStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWorkspaceStatisticsContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WorkspaceStatisticsList: WorkspaceStatisticsList,\n  WorkspaceStatisticsPage: WorkspaceStatisticsPage,\n  WorkspaceStatisticsInstance: WorkspaceStatisticsInstance,\n  WorkspaceStatisticsContext: WorkspaceStatisticsContext\n};\n"]},"metadata":{},"sourceType":"module"}