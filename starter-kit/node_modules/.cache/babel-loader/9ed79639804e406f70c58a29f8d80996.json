{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar FlowTestUserList;\nvar FlowTestUserPage;\nvar FlowTestUserInstance;\nvar FlowTestUserContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the FlowTestUserList\n *\n * @constructor Twilio.Studio.V2.FlowContext.FlowTestUserList\n *\n * @param {Twilio.Studio.V2} version - Version of the resource\n * @param {string} sid - Unique identifier of the flow.\n */\n\n/* jshint ignore:end */\n\nFlowTestUserList = function FlowTestUserList(version, sid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function testUsers\n   * @memberof Twilio.Studio.V2.FlowContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Studio.V2.FlowContext.FlowTestUserContext}\n   */\n\n  /* jshint ignore:end */\n  function FlowTestUserListInstance(sid) {\n    return FlowTestUserListInstance.get(sid);\n  }\n\n  FlowTestUserListInstance._version = version; // Path Solution\n\n  FlowTestUserListInstance._solution = {\n    sid: sid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a flow_test_user\n   *\n   * @function get\n   * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserList#\n   *\n   * @returns {Twilio.Studio.V2.FlowContext.FlowTestUserContext}\n   */\n\n  /* jshint ignore:end */\n\n  FlowTestUserListInstance.get = function get() {\n    return new FlowTestUserContext(this._version, this._solution.sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  FlowTestUserListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  FlowTestUserListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return FlowTestUserListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FlowTestUserPage\n *\n * @constructor Twilio.Studio.V2.FlowContext.FlowTestUserPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FlowTestUserSolution} solution - Path solution\n *\n * @returns FlowTestUserPage\n */\n\n/* jshint ignore:end */\n\n\nFlowTestUserPage = function FlowTestUserPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(FlowTestUserPage.prototype, Page.prototype);\n\nFlowTestUserPage.prototype.constructor = FlowTestUserPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of FlowTestUserInstance\n *\n * @function getInstance\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserPage#\n *\n * @param {FlowTestUserPayload} payload - Payload response from the API\n *\n * @returns FlowTestUserInstance\n */\n\n/* jshint ignore:end */\n\nFlowTestUserPage.prototype.getInstance = function getInstance(payload) {\n  return new FlowTestUserInstance(this._version, payload, this._solution.sid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFlowTestUserPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nFlowTestUserPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FlowTestUserContext\n *\n * @constructor Twilio.Studio.V2.FlowContext.FlowTestUserInstance\n *\n * @property {string} sid - Unique identifier of the flow.\n * @property {string} testUsers -\n *          List of test user identities that can test draft versions of the flow.\n * @property {string} url - The URL of this resource.\n *\n * @param {V2} version - Version of the resource\n * @param {FlowTestUserPayload} payload - The instance payload\n * @param {sid} sid - Unique identifier of the flow.\n */\n\n/* jshint ignore:end */\n\n\nFlowTestUserInstance = function FlowTestUserInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.testUsers = payload.test_users; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid\n  };\n};\n\nObject.defineProperty(FlowTestUserInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new FlowTestUserContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a FlowTestUserInstance\n *\n * @function fetch\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FlowTestUserInstance\n */\n\n/* jshint ignore:end */\n\nFlowTestUserInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a FlowTestUserInstance\n *\n * @function update\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserInstance#\n *\n * @param {object} opts - Options for request\n * @param {string|list} opts.testUsers -\n *          List of test user identities that can test draft versions of the flow.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FlowTestUserInstance\n */\n\n/* jshint ignore:end */\n\n\nFlowTestUserInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFlowTestUserInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nFlowTestUserInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FlowTestUserContext\n *\n * @constructor Twilio.Studio.V2.FlowContext.FlowTestUserContext\n *\n * @param {V2} version - Version of the resource\n * @param {sid} sid - Unique identifier of the flow.\n */\n\n/* jshint ignore:end */\n\n\nFlowTestUserContext = function FlowTestUserContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/Flows/${sid}/TestUsers`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a FlowTestUserInstance\n *\n * @function fetch\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FlowTestUserInstance\n */\n\n/* jshint ignore:end */\n\n\nFlowTestUserContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new FlowTestUserInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a FlowTestUserInstance\n *\n * @function update\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserContext#\n *\n * @param {object} opts - Options for request\n * @param {string|list} opts.testUsers -\n *          List of test user identities that can test draft versions of the flow.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FlowTestUserInstance\n */\n\n/* jshint ignore:end */\n\n\nFlowTestUserContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n\n  if (_.isUndefined(opts.testUsers)) {\n    throw new Error('Required parameter \"opts.testUsers\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'TestUsers': serialize.map(_.get(opts, 'testUsers'), function (e) {\n      return e;\n    })\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new FlowTestUserInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFlowTestUserContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nFlowTestUserContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  FlowTestUserList: FlowTestUserList,\n  FlowTestUserPage: FlowTestUserPage,\n  FlowTestUserInstance: FlowTestUserInstance,\n  FlowTestUserContext: FlowTestUserContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/studio/v2/flow/testUser.js"],"names":["Q","require","_","util","Page","serialize","values","FlowTestUserList","FlowTestUserPage","FlowTestUserInstance","FlowTestUserContext","version","sid","FlowTestUserListInstance","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","testUsers","test_users","url","_context","undefined","Object","defineProperty","fetch","callback","_proxy","update","opts","_uri","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","isUndefined","Error","data","of","map","e","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar FlowTestUserList;\nvar FlowTestUserPage;\nvar FlowTestUserInstance;\nvar FlowTestUserContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the FlowTestUserList\n *\n * @constructor Twilio.Studio.V2.FlowContext.FlowTestUserList\n *\n * @param {Twilio.Studio.V2} version - Version of the resource\n * @param {string} sid - Unique identifier of the flow.\n */\n/* jshint ignore:end */\nFlowTestUserList = function FlowTestUserList(version, sid) {\n  /* jshint ignore:start */\n  /**\n   * @function testUsers\n   * @memberof Twilio.Studio.V2.FlowContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Studio.V2.FlowContext.FlowTestUserContext}\n   */\n  /* jshint ignore:end */\n  function FlowTestUserListInstance(sid) {\n    return FlowTestUserListInstance.get(sid);\n  }\n\n  FlowTestUserListInstance._version = version;\n  // Path Solution\n  FlowTestUserListInstance._solution = {sid: sid};\n  /* jshint ignore:start */\n  /**\n   * Constructs a flow_test_user\n   *\n   * @function get\n   * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserList#\n   *\n   * @returns {Twilio.Studio.V2.FlowContext.FlowTestUserContext}\n   */\n  /* jshint ignore:end */\n  FlowTestUserListInstance.get = function get() {\n    return new FlowTestUserContext(this._version, this._solution.sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  FlowTestUserListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  FlowTestUserListInstance[util.inspect.custom] = function inspect(depth, options)\n      {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return FlowTestUserListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FlowTestUserPage\n *\n * @constructor Twilio.Studio.V2.FlowContext.FlowTestUserPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FlowTestUserSolution} solution - Path solution\n *\n * @returns FlowTestUserPage\n */\n/* jshint ignore:end */\nFlowTestUserPage = function FlowTestUserPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(FlowTestUserPage.prototype, Page.prototype);\nFlowTestUserPage.prototype.constructor = FlowTestUserPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of FlowTestUserInstance\n *\n * @function getInstance\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserPage#\n *\n * @param {FlowTestUserPayload} payload - Payload response from the API\n *\n * @returns FlowTestUserInstance\n */\n/* jshint ignore:end */\nFlowTestUserPage.prototype.getInstance = function getInstance(payload) {\n  return new FlowTestUserInstance(this._version, payload, this._solution.sid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFlowTestUserPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nFlowTestUserPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FlowTestUserContext\n *\n * @constructor Twilio.Studio.V2.FlowContext.FlowTestUserInstance\n *\n * @property {string} sid - Unique identifier of the flow.\n * @property {string} testUsers -\n *          List of test user identities that can test draft versions of the flow.\n * @property {string} url - The URL of this resource.\n *\n * @param {V2} version - Version of the resource\n * @param {FlowTestUserPayload} payload - The instance payload\n * @param {sid} sid - Unique identifier of the flow.\n */\n/* jshint ignore:end */\nFlowTestUserInstance = function FlowTestUserInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.testUsers = payload.test_users; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid, };\n};\n\nObject.defineProperty(FlowTestUserInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new FlowTestUserContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a FlowTestUserInstance\n *\n * @function fetch\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FlowTestUserInstance\n */\n/* jshint ignore:end */\nFlowTestUserInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a FlowTestUserInstance\n *\n * @function update\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserInstance#\n *\n * @param {object} opts - Options for request\n * @param {string|list} opts.testUsers -\n *          List of test user identities that can test draft versions of the flow.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FlowTestUserInstance\n */\n/* jshint ignore:end */\nFlowTestUserInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFlowTestUserInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nFlowTestUserInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FlowTestUserContext\n *\n * @constructor Twilio.Studio.V2.FlowContext.FlowTestUserContext\n *\n * @param {V2} version - Version of the resource\n * @param {sid} sid - Unique identifier of the flow.\n */\n/* jshint ignore:end */\nFlowTestUserContext = function FlowTestUserContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/Flows/${sid}/TestUsers`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a FlowTestUserInstance\n *\n * @function fetch\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FlowTestUserInstance\n */\n/* jshint ignore:end */\nFlowTestUserContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new FlowTestUserInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a FlowTestUserInstance\n *\n * @function update\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserContext#\n *\n * @param {object} opts - Options for request\n * @param {string|list} opts.testUsers -\n *          List of test user identities that can test draft versions of the flow.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FlowTestUserInstance\n */\n/* jshint ignore:end */\nFlowTestUserContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n  if (_.isUndefined(opts.testUsers)) {\n    throw new Error('Required parameter \"opts.testUsers\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'TestUsers': serialize.map(_.get(opts, 'testUsers'), function(e) { return e; })\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new FlowTestUserInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFlowTestUserContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nFlowTestUserContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  FlowTestUserList: FlowTestUserList,\n  FlowTestUserPage: FlowTestUserPage,\n  FlowTestUserInstance: FlowTestUserInstance,\n  FlowTestUserContext: FlowTestUserContext\n};\n"]},"metadata":{},"sourceType":"script"}