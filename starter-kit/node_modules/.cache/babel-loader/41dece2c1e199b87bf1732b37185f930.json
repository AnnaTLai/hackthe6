{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar CustomerProfilesChannelEndpointAssignmentList = require('./customerProfiles/customerProfilesChannelEndpointAssignment').CustomerProfilesChannelEndpointAssignmentList;\n\nvar CustomerProfilesEntityAssignmentsList = require('./customerProfiles/customerProfilesEntityAssignments').CustomerProfilesEntityAssignmentsList;\n\nvar CustomerProfilesEvaluationsList = require('./customerProfiles/customerProfilesEvaluations').CustomerProfilesEvaluationsList;\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar CustomerProfilesList;\nvar CustomerProfilesPage;\nvar CustomerProfilesInstance;\nvar CustomerProfilesContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the CustomerProfilesList\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesList\n *\n * @param {Twilio.Trusthub.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nCustomerProfilesList = function CustomerProfilesList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function customerProfiles\n   * @memberof Twilio.Trusthub.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trusthub.V1.CustomerProfilesContext}\n   */\n\n  /* jshint ignore:end */\n  function CustomerProfilesListInstance(sid) {\n    return CustomerProfilesListInstance.get(sid);\n  }\n\n  CustomerProfilesListInstance._version = version; // Path Solution\n\n  CustomerProfilesListInstance._solution = {};\n  CustomerProfilesListInstance._uri = `/CustomerProfiles`;\n  /* jshint ignore:start */\n\n  /**\n   * create a CustomerProfilesInstance\n   *\n   * @function create\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.friendlyName -\n   *          The string that you assigned to describe the resource\n   * @param {string} opts.email - The email address\n   * @param {string} opts.policySid - The unique string of a policy.\n   * @param {string} [opts.statusCallback] -\n   *          The URL we call to inform your application of status changes.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed CustomerProfilesInstance\n   */\n\n  /* jshint ignore:end */\n\n  CustomerProfilesListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.friendlyName)) {\n      throw new Error('Required parameter \"opts.friendlyName\" missing.');\n    }\n\n    if (_.isUndefined(opts.email)) {\n      throw new Error('Required parameter \"opts.email\" missing.');\n    }\n\n    if (_.isUndefined(opts.policySid)) {\n      throw new Error('Required parameter \"opts.policySid\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'Email': _.get(opts, 'email'),\n      'PolicySid': _.get(opts, 'policySid'),\n      'StatusCallback': _.get(opts, 'statusCallback')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new CustomerProfilesInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams CustomerProfilesInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {customer_profiles.status} [opts.status] -\n   *          The verification status of the Customer-Profile resource\n   * @param {string} [opts.friendlyName] -\n   *          The string that you assigned to describe the resource\n   * @param {string} [opts.policySid] - The unique string of a policy.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  CustomerProfilesListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists CustomerProfilesInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {customer_profiles.status} [opts.status] -\n   *          The verification status of the Customer-Profile resource\n   * @param {string} [opts.friendlyName] -\n   *          The string that you assigned to describe the resource\n   * @param {string} [opts.policySid] - The unique string of a policy.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  CustomerProfilesListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of CustomerProfilesInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {customer_profiles.status} [opts.status] -\n   *          The verification status of the Customer-Profile resource\n   * @param {string} [opts.friendlyName] -\n   *          The string that you assigned to describe the resource\n   * @param {string} [opts.policySid] - The unique string of a policy.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  CustomerProfilesListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Status': _.get(opts, 'status'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'PolicySid': _.get(opts, 'policySid'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new CustomerProfilesPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of CustomerProfilesInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  CustomerProfilesListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new CustomerProfilesPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a customer_profiles\n   *\n   * @function get\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {string} sid - The unique string that identifies the resource.\n   *\n   * @returns {Twilio.Trusthub.V1.CustomerProfilesContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  CustomerProfilesListInstance.get = function get(sid) {\n    return new CustomerProfilesContext(this._version, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  CustomerProfilesListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  CustomerProfilesListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return CustomerProfilesListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the CustomerProfilesPage\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {CustomerProfilesSolution} solution - Path solution\n *\n * @returns CustomerProfilesPage\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesPage = function CustomerProfilesPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(CustomerProfilesPage.prototype, Page.prototype);\n\nCustomerProfilesPage.prototype.constructor = CustomerProfilesPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of CustomerProfilesInstance\n *\n * @function getInstance\n * @memberof Twilio.Trusthub.V1.CustomerProfilesPage#\n *\n * @param {CustomerProfilesPayload} payload - Payload response from the API\n *\n * @returns CustomerProfilesInstance\n */\n\n/* jshint ignore:end */\n\nCustomerProfilesPage.prototype.getInstance = function getInstance(payload) {\n  return new CustomerProfilesInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.CustomerProfilesPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nCustomerProfilesPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the CustomerProfilesContext\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesInstance\n *\n * @property {string} sid - The unique string that identifies the resource.\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} policySid - The unique string of a policy.\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {customer_profiles.status} status -\n *          The verification status of the Customer-Profile resource\n * @property {Date} validUntil -\n *          The ISO 8601 date and time in GMT when the resource will be valid until.\n * @property {string} email - The email address\n * @property {string} statusCallback -\n *          The URL we call to inform your application of status changes.\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} url - The absolute URL of the Customer-Profile resource\n * @property {string} links -\n *          The URLs of the Assigned Items of the Customer-Profile resource\n *\n * @param {V1} version - Version of the resource\n * @param {CustomerProfilesPayload} payload - The instance payload\n * @param {sid} sid - The unique string that identifies the resource.\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesInstance = function CustomerProfilesInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.policySid = payload.policy_sid; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.status = payload.status; // jshint ignore:line\n\n  this.validUntil = deserialize.iso8601DateTime(payload.valid_until); // jshint ignore:line\n\n  this.email = payload.email; // jshint ignore:line\n\n  this.statusCallback = payload.status_callback; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.links = payload.links; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(CustomerProfilesInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new CustomerProfilesContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a CustomerProfilesInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n\n/* jshint ignore:end */\n\nCustomerProfilesInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a CustomerProfilesInstance\n *\n * @function update\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {customer_profiles.status} [opts.status] -\n *          The verification status of the Customer-Profile resource\n * @param {string} [opts.statusCallback] -\n *          The URL we call to inform your application of status changes.\n * @param {string} [opts.friendlyName] -\n *          The string that you assigned to describe the resource\n * @param {string} [opts.email] - The email address\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a CustomerProfilesInstance\n *\n * @function remove\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Access the customerProfilesEntityAssignments\n *\n * @function customerProfilesEntityAssignments\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @returns {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList}\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesInstance.prototype.customerProfilesEntityAssignments = function customerProfilesEntityAssignments() {\n  return this._proxy.customerProfilesEntityAssignments;\n};\n/* jshint ignore:start */\n\n/**\n * Access the customerProfilesEvaluations\n *\n * @function customerProfilesEvaluations\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @returns {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEvaluationsList}\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesInstance.prototype.customerProfilesEvaluations = function customerProfilesEvaluations() {\n  return this._proxy.customerProfilesEvaluations;\n};\n/* jshint ignore:start */\n\n/**\n * Access the customerProfilesChannelEndpointAssignment\n *\n * @function customerProfilesChannelEndpointAssignment\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @returns {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesChannelEndpointAssignmentList}\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesInstance.prototype.customerProfilesChannelEndpointAssignment = function customerProfilesChannelEndpointAssignment() {\n  return this._proxy.customerProfilesChannelEndpointAssignment;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nCustomerProfilesInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the CustomerProfilesContext\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesContext\n *\n * @property {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList} customerProfilesEntityAssignments -\n *          customerProfilesEntityAssignments resource\n * @property {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEvaluationsList} customerProfilesEvaluations -\n *          customerProfilesEvaluations resource\n * @property {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesChannelEndpointAssignmentList} customerProfilesChannelEndpointAssignment -\n *          customerProfilesChannelEndpointAssignment resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The unique string that identifies the resource.\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesContext = function CustomerProfilesContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/CustomerProfiles/${sid}`; // Dependents\n\n  this._customerProfilesEntityAssignments = undefined;\n  this._customerProfilesEvaluations = undefined;\n  this._customerProfilesChannelEndpointAssignment = undefined;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a CustomerProfilesInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new CustomerProfilesInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a CustomerProfilesInstance\n *\n * @function update\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext#\n *\n * @param {object} [opts] - Options for request\n * @param {customer_profiles.status} [opts.status] -\n *          The verification status of the Customer-Profile resource\n * @param {string} [opts.statusCallback] -\n *          The URL we call to inform your application of status changes.\n * @param {string} [opts.friendlyName] -\n *          The string that you assigned to describe the resource\n * @param {string} [opts.email] - The email address\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Status': _.get(opts, 'status'),\n    'StatusCallback': _.get(opts, 'statusCallback'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'Email': _.get(opts, 'email')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new CustomerProfilesInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a CustomerProfilesInstance\n *\n * @function remove\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(CustomerProfilesContext.prototype, 'customerProfilesEntityAssignments', {\n  get: function () {\n    if (!this._customerProfilesEntityAssignments) {\n      this._customerProfilesEntityAssignments = new CustomerProfilesEntityAssignmentsList(this._version, this._solution.sid);\n    }\n\n    return this._customerProfilesEntityAssignments;\n  }\n});\nObject.defineProperty(CustomerProfilesContext.prototype, 'customerProfilesEvaluations', {\n  get: function () {\n    if (!this._customerProfilesEvaluations) {\n      this._customerProfilesEvaluations = new CustomerProfilesEvaluationsList(this._version, this._solution.sid);\n    }\n\n    return this._customerProfilesEvaluations;\n  }\n});\nObject.defineProperty(CustomerProfilesContext.prototype, 'customerProfilesChannelEndpointAssignment', {\n  get: function () {\n    if (!this._customerProfilesChannelEndpointAssignment) {\n      this._customerProfilesChannelEndpointAssignment = new CustomerProfilesChannelEndpointAssignmentList(this._version, this._solution.sid);\n    }\n\n    return this._customerProfilesChannelEndpointAssignment;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\nCustomerProfilesContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nCustomerProfilesContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  CustomerProfilesList: CustomerProfilesList,\n  CustomerProfilesPage: CustomerProfilesPage,\n  CustomerProfilesInstance: CustomerProfilesInstance,\n  CustomerProfilesContext: CustomerProfilesContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/rest/trusthub/v1/customerProfiles.js"],"names":["Q","require","_","util","CustomerProfilesChannelEndpointAssignmentList","CustomerProfilesEntityAssignmentsList","CustomerProfilesEvaluationsList","Page","deserialize","values","CustomerProfilesList","CustomerProfilesPage","CustomerProfilesInstance","CustomerProfilesContext","version","CustomerProfilesListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","friendlyName","email","policySid","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","policy_sid","friendly_name","status","validUntil","iso8601DateTime","valid_until","statusCallback","status_callback","dateCreated","date_created","dateUpdated","date_updated","url","links","_context","undefined","Object","defineProperty","fetch","_proxy","update","remove","customerProfilesEntityAssignments","customerProfilesEvaluations","customerProfilesChannelEndpointAssignment","_customerProfilesEntityAssignments","_customerProfilesEvaluations","_customerProfilesChannelEndpointAssignment","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar CustomerProfilesChannelEndpointAssignmentList = require(\n    './customerProfiles/customerProfilesChannelEndpointAssignment').CustomerProfilesChannelEndpointAssignmentList;\nvar CustomerProfilesEntityAssignmentsList = require(\n    './customerProfiles/customerProfilesEntityAssignments').CustomerProfilesEntityAssignmentsList;\nvar CustomerProfilesEvaluationsList = require(\n    './customerProfiles/customerProfilesEvaluations').CustomerProfilesEvaluationsList;\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar CustomerProfilesList;\nvar CustomerProfilesPage;\nvar CustomerProfilesInstance;\nvar CustomerProfilesContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the CustomerProfilesList\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesList\n *\n * @param {Twilio.Trusthub.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nCustomerProfilesList = function CustomerProfilesList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function customerProfiles\n   * @memberof Twilio.Trusthub.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trusthub.V1.CustomerProfilesContext}\n   */\n  /* jshint ignore:end */\n  function CustomerProfilesListInstance(sid) {\n    return CustomerProfilesListInstance.get(sid);\n  }\n\n  CustomerProfilesListInstance._version = version;\n  // Path Solution\n  CustomerProfilesListInstance._solution = {};\n  CustomerProfilesListInstance._uri = `/CustomerProfiles`;\n  /* jshint ignore:start */\n  /**\n   * create a CustomerProfilesInstance\n   *\n   * @function create\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.friendlyName -\n   *          The string that you assigned to describe the resource\n   * @param {string} opts.email - The email address\n   * @param {string} opts.policySid - The unique string of a policy.\n   * @param {string} [opts.statusCallback] -\n   *          The URL we call to inform your application of status changes.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed CustomerProfilesInstance\n   */\n  /* jshint ignore:end */\n  CustomerProfilesListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.friendlyName)) {\n      throw new Error('Required parameter \"opts.friendlyName\" missing.');\n    }\n    if (_.isUndefined(opts.email)) {\n      throw new Error('Required parameter \"opts.email\" missing.');\n    }\n    if (_.isUndefined(opts.policySid)) {\n      throw new Error('Required parameter \"opts.policySid\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'Email': _.get(opts, 'email'),\n      'PolicySid': _.get(opts, 'policySid'),\n      'StatusCallback': _.get(opts, 'statusCallback')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new CustomerProfilesInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams CustomerProfilesInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {customer_profiles.status} [opts.status] -\n   *          The verification status of the Customer-Profile resource\n   * @param {string} [opts.friendlyName] -\n   *          The string that you assigned to describe the resource\n   * @param {string} [opts.policySid] - The unique string of a policy.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  CustomerProfilesListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists CustomerProfilesInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {customer_profiles.status} [opts.status] -\n   *          The verification status of the Customer-Profile resource\n   * @param {string} [opts.friendlyName] -\n   *          The string that you assigned to describe the resource\n   * @param {string} [opts.policySid] - The unique string of a policy.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  CustomerProfilesListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of CustomerProfilesInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {customer_profiles.status} [opts.status] -\n   *          The verification status of the Customer-Profile resource\n   * @param {string} [opts.friendlyName] -\n   *          The string that you assigned to describe the resource\n   * @param {string} [opts.policySid] - The unique string of a policy.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  CustomerProfilesListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Status': _.get(opts, 'status'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'PolicySid': _.get(opts, 'policySid'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new CustomerProfilesPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of CustomerProfilesInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  CustomerProfilesListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new CustomerProfilesPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a customer_profiles\n   *\n   * @function get\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {string} sid - The unique string that identifies the resource.\n   *\n   * @returns {Twilio.Trusthub.V1.CustomerProfilesContext}\n   */\n  /* jshint ignore:end */\n  CustomerProfilesListInstance.get = function get(sid) {\n    return new CustomerProfilesContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  CustomerProfilesListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  CustomerProfilesListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return CustomerProfilesListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the CustomerProfilesPage\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {CustomerProfilesSolution} solution - Path solution\n *\n * @returns CustomerProfilesPage\n */\n/* jshint ignore:end */\nCustomerProfilesPage = function CustomerProfilesPage(version, response,\n                                                      solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(CustomerProfilesPage.prototype, Page.prototype);\nCustomerProfilesPage.prototype.constructor = CustomerProfilesPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of CustomerProfilesInstance\n *\n * @function getInstance\n * @memberof Twilio.Trusthub.V1.CustomerProfilesPage#\n *\n * @param {CustomerProfilesPayload} payload - Payload response from the API\n *\n * @returns CustomerProfilesInstance\n */\n/* jshint ignore:end */\nCustomerProfilesPage.prototype.getInstance = function getInstance(payload) {\n  return new CustomerProfilesInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.CustomerProfilesPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nCustomerProfilesPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nCustomerProfilesPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the CustomerProfilesContext\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesInstance\n *\n * @property {string} sid - The unique string that identifies the resource.\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} policySid - The unique string of a policy.\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {customer_profiles.status} status -\n *          The verification status of the Customer-Profile resource\n * @property {Date} validUntil -\n *          The ISO 8601 date and time in GMT when the resource will be valid until.\n * @property {string} email - The email address\n * @property {string} statusCallback -\n *          The URL we call to inform your application of status changes.\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} url - The absolute URL of the Customer-Profile resource\n * @property {string} links -\n *          The URLs of the Assigned Items of the Customer-Profile resource\n *\n * @param {V1} version - Version of the resource\n * @param {CustomerProfilesPayload} payload - The instance payload\n * @param {sid} sid - The unique string that identifies the resource.\n */\n/* jshint ignore:end */\nCustomerProfilesInstance = function CustomerProfilesInstance(version, payload,\n    sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.policySid = payload.policy_sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.validUntil = deserialize.iso8601DateTime(payload.valid_until); // jshint ignore:line\n  this.email = payload.email; // jshint ignore:line\n  this.statusCallback = payload.status_callback; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(CustomerProfilesInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new CustomerProfilesContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a CustomerProfilesInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n/* jshint ignore:end */\nCustomerProfilesInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a CustomerProfilesInstance\n *\n * @function update\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {customer_profiles.status} [opts.status] -\n *          The verification status of the Customer-Profile resource\n * @param {string} [opts.statusCallback] -\n *          The URL we call to inform your application of status changes.\n * @param {string} [opts.friendlyName] -\n *          The string that you assigned to describe the resource\n * @param {string} [opts.email] - The email address\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n/* jshint ignore:end */\nCustomerProfilesInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a CustomerProfilesInstance\n *\n * @function remove\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n/* jshint ignore:end */\nCustomerProfilesInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the customerProfilesEntityAssignments\n *\n * @function customerProfilesEntityAssignments\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @returns {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList}\n */\n/* jshint ignore:end */\nCustomerProfilesInstance.prototype.customerProfilesEntityAssignments = function\n    customerProfilesEntityAssignments() {\n  return this._proxy.customerProfilesEntityAssignments;\n};\n\n/* jshint ignore:start */\n/**\n * Access the customerProfilesEvaluations\n *\n * @function customerProfilesEvaluations\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @returns {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEvaluationsList}\n */\n/* jshint ignore:end */\nCustomerProfilesInstance.prototype.customerProfilesEvaluations = function\n    customerProfilesEvaluations() {\n  return this._proxy.customerProfilesEvaluations;\n};\n\n/* jshint ignore:start */\n/**\n * Access the customerProfilesChannelEndpointAssignment\n *\n * @function customerProfilesChannelEndpointAssignment\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @returns {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesChannelEndpointAssignmentList}\n */\n/* jshint ignore:end */\nCustomerProfilesInstance.prototype.customerProfilesChannelEndpointAssignment =\n    function customerProfilesChannelEndpointAssignment() {\n  return this._proxy.customerProfilesChannelEndpointAssignment;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nCustomerProfilesInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nCustomerProfilesInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the CustomerProfilesContext\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesContext\n *\n * @property {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList} customerProfilesEntityAssignments -\n *          customerProfilesEntityAssignments resource\n * @property {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEvaluationsList} customerProfilesEvaluations -\n *          customerProfilesEvaluations resource\n * @property {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesChannelEndpointAssignmentList} customerProfilesChannelEndpointAssignment -\n *          customerProfilesChannelEndpointAssignment resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The unique string that identifies the resource.\n */\n/* jshint ignore:end */\nCustomerProfilesContext = function CustomerProfilesContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/CustomerProfiles/${sid}`;\n\n  // Dependents\n  this._customerProfilesEntityAssignments = undefined;\n  this._customerProfilesEvaluations = undefined;\n  this._customerProfilesChannelEndpointAssignment = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a CustomerProfilesInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n/* jshint ignore:end */\nCustomerProfilesContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new CustomerProfilesInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a CustomerProfilesInstance\n *\n * @function update\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext#\n *\n * @param {object} [opts] - Options for request\n * @param {customer_profiles.status} [opts.status] -\n *          The verification status of the Customer-Profile resource\n * @param {string} [opts.statusCallback] -\n *          The URL we call to inform your application of status changes.\n * @param {string} [opts.friendlyName] -\n *          The string that you assigned to describe the resource\n * @param {string} [opts.email] - The email address\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n/* jshint ignore:end */\nCustomerProfilesContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Status': _.get(opts, 'status'),\n    'StatusCallback': _.get(opts, 'statusCallback'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'Email': _.get(opts, 'email')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new CustomerProfilesInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a CustomerProfilesInstance\n *\n * @function remove\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n/* jshint ignore:end */\nCustomerProfilesContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(CustomerProfilesContext.prototype,\n  'customerProfilesEntityAssignments', {\n    get: function() {\n      if (!this._customerProfilesEntityAssignments) {\n        this._customerProfilesEntityAssignments = new CustomerProfilesEntityAssignmentsList(\n          this._version,\n          this._solution.sid\n        );\n      }\n      return this._customerProfilesEntityAssignments;\n    }\n});\n\nObject.defineProperty(CustomerProfilesContext.prototype,\n  'customerProfilesEvaluations', {\n    get: function() {\n      if (!this._customerProfilesEvaluations) {\n        this._customerProfilesEvaluations = new CustomerProfilesEvaluationsList(\n          this._version,\n          this._solution.sid\n        );\n      }\n      return this._customerProfilesEvaluations;\n    }\n});\n\nObject.defineProperty(CustomerProfilesContext.prototype,\n  'customerProfilesChannelEndpointAssignment', {\n    get: function() {\n      if (!this._customerProfilesChannelEndpointAssignment) {\n        this._customerProfilesChannelEndpointAssignment = new CustomerProfilesChannelEndpointAssignmentList(\n          this._version,\n          this._solution.sid\n        );\n      }\n      return this._customerProfilesChannelEndpointAssignment;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nCustomerProfilesContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nCustomerProfilesContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  CustomerProfilesList: CustomerProfilesList,\n  CustomerProfilesPage: CustomerProfilesPage,\n  CustomerProfilesInstance: CustomerProfilesInstance,\n  CustomerProfilesContext: CustomerProfilesContext\n};\n"]},"metadata":{},"sourceType":"module"}