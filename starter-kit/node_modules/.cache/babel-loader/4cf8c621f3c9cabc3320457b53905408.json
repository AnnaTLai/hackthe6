{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar MemberList;\nvar MemberPage;\nvar MemberInstance;\nvar MemberContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the MemberList\n *\n * @constructor Twilio.Api.V2010.AccountContext.QueueContext.MemberList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created this resource\n * @param {string} queueSid - The SID of the Queue the member is in\n */\n\n/* jshint ignore:end */\n\nMemberList = function MemberList(version, accountSid, queueSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function members\n   * @memberof Twilio.Api.V2010.AccountContext.QueueContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.QueueContext.MemberContext}\n   */\n\n  /* jshint ignore:end */\n  function MemberListInstance(sid) {\n    return MemberListInstance.get(sid);\n  }\n\n  MemberListInstance._version = version; // Path Solution\n\n  MemberListInstance._solution = {\n    accountSid: accountSid,\n    queueSid: queueSid\n  };\n  MemberListInstance._uri = `/Accounts/${accountSid}/Queues/${queueSid}/Members.json`;\n  /* jshint ignore:start */\n\n  /**\n   * Streams MemberInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n  MemberListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists MemberInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  MemberListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of MemberInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  MemberListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new MemberPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of MemberInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  MemberListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new MemberPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a member\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberList#\n   *\n   * @param {string} callSid - The Call SID of the resource(s) to fetch\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.QueueContext.MemberContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  MemberListInstance.get = function get(callSid) {\n    return new MemberContext(this._version, this._solution.accountSid, this._solution.queueSid, callSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  MemberListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  MemberListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return MemberListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the MemberPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.QueueContext.MemberPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {MemberSolution} solution - Path solution\n *\n * @returns MemberPage\n */\n\n/* jshint ignore:end */\n\n\nMemberPage = function MemberPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(MemberPage.prototype, Page.prototype);\n\nMemberPage.prototype.constructor = MemberPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of MemberInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberPage#\n *\n * @param {MemberPayload} payload - Payload response from the API\n *\n * @returns MemberInstance\n */\n\n/* jshint ignore:end */\n\nMemberPage.prototype.getInstance = function getInstance(payload) {\n  return new MemberInstance(this._version, payload, this._solution.accountSid, this._solution.queueSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nMemberPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nMemberPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the MemberContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.QueueContext.MemberInstance\n *\n * @property {string} callSid - The SID of the Call the resource is associated with\n * @property {Date} dateEnqueued - The date the member was enqueued\n * @property {number} position - This member's current position in the queue.\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n * @property {number} waitTime -\n *          The number of seconds the member has been in the queue.\n * @property {string} queueSid - The SID of the Queue the member is in\n *\n * @param {V2010} version - Version of the resource\n * @param {MemberPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created this resource\n * @param {sid} queueSid - The SID of the Queue the member is in\n * @param {sid_like} callSid - The Call SID of the resource(s) to fetch\n */\n\n/* jshint ignore:end */\n\n\nMemberInstance = function MemberInstance(version, payload, accountSid, queueSid, callSid) {\n  this._version = version; // Marshaled Properties\n\n  this.callSid = payload.call_sid; // jshint ignore:line\n\n  this.dateEnqueued = deserialize.rfc2822DateTime(payload.date_enqueued); // jshint ignore:line\n\n  this.position = deserialize.integer(payload.position); // jshint ignore:line\n\n  this.uri = payload.uri; // jshint ignore:line\n\n  this.waitTime = deserialize.integer(payload.wait_time); // jshint ignore:line\n\n  this.queueSid = payload.queue_sid; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    accountSid: accountSid,\n    queueSid: queueSid,\n    callSid: callSid || this.callSid\n  };\n};\n\nObject.defineProperty(MemberInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new MemberContext(this._version, this._solution.accountSid, this._solution.queueSid, this._solution.callSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a MemberInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed MemberInstance\n */\n\n/* jshint ignore:end */\n\nMemberInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a MemberInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberInstance#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.url - The absolute URL of the Queue resource\n * @param {string} [opts.method] - How to pass the update request data\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed MemberInstance\n */\n\n/* jshint ignore:end */\n\n\nMemberInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nMemberInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nMemberInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the MemberContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.QueueContext.MemberContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid -\n *          The SID of the Account that created the resource(s) to fetch\n * @param {sid} queueSid - The SID of the Queue in which to find the members\n * @param {sid_like} callSid - The Call SID of the resource(s) to fetch\n */\n\n/* jshint ignore:end */\n\n\nMemberContext = function MemberContext(version, accountSid, queueSid, callSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    accountSid: accountSid,\n    queueSid: queueSid,\n    callSid: callSid\n  };\n  this._uri = `/Accounts/${accountSid}/Queues/${queueSid}/Members/${callSid}.json`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a MemberInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed MemberInstance\n */\n\n/* jshint ignore:end */\n\n\nMemberContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new MemberInstance(this._version, payload, this._solution.accountSid, this._solution.queueSid, this._solution.callSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a MemberInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberContext#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.url - The absolute URL of the Queue resource\n * @param {string} [opts.method] - How to pass the update request data\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed MemberInstance\n */\n\n/* jshint ignore:end */\n\n\nMemberContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n\n  if (_.isUndefined(opts.url)) {\n    throw new Error('Required parameter \"opts.url\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Url': _.get(opts, 'url'),\n    'Method': _.get(opts, 'method')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new MemberInstance(this._version, payload, this._solution.accountSid, this._solution.queueSid, this._solution.callSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nMemberContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nMemberContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  MemberList: MemberList,\n  MemberPage: MemberPage,\n  MemberInstance: MemberInstance,\n  MemberContext: MemberContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/api/v2010/account/queue/member.js"],"names":["Q","require","_","util","Page","deserialize","values","MemberList","MemberPage","MemberInstance","MemberContext","version","accountSid","queueSid","MemberListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","callSid","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","call_sid","dateEnqueued","rfc2822DateTime","date_enqueued","position","integer","waitTime","wait_time","queue_sid","_context","undefined","Object","defineProperty","fetch","_proxy","update","url","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar MemberList;\nvar MemberPage;\nvar MemberInstance;\nvar MemberContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the MemberList\n *\n * @constructor Twilio.Api.V2010.AccountContext.QueueContext.MemberList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created this resource\n * @param {string} queueSid - The SID of the Queue the member is in\n */\n/* jshint ignore:end */\nMemberList = function MemberList(version, accountSid, queueSid) {\n  /* jshint ignore:start */\n  /**\n   * @function members\n   * @memberof Twilio.Api.V2010.AccountContext.QueueContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.QueueContext.MemberContext}\n   */\n  /* jshint ignore:end */\n  function MemberListInstance(sid) {\n    return MemberListInstance.get(sid);\n  }\n\n  MemberListInstance._version = version;\n  // Path Solution\n  MemberListInstance._solution = {accountSid: accountSid, queueSid: queueSid};\n  MemberListInstance._uri = `/Accounts/${accountSid}/Queues/${queueSid}/Members.json`;\n  /* jshint ignore:start */\n  /**\n   * Streams MemberInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  MemberListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists MemberInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  MemberListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of MemberInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  MemberListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new MemberPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of MemberInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  MemberListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new MemberPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a member\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberList#\n   *\n   * @param {string} callSid - The Call SID of the resource(s) to fetch\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.QueueContext.MemberContext}\n   */\n  /* jshint ignore:end */\n  MemberListInstance.get = function get(callSid) {\n    return new MemberContext(\n      this._version,\n      this._solution.accountSid,\n      this._solution.queueSid,\n      callSid\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  MemberListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  MemberListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return MemberListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the MemberPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.QueueContext.MemberPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {MemberSolution} solution - Path solution\n *\n * @returns MemberPage\n */\n/* jshint ignore:end */\nMemberPage = function MemberPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(MemberPage.prototype, Page.prototype);\nMemberPage.prototype.constructor = MemberPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of MemberInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberPage#\n *\n * @param {MemberPayload} payload - Payload response from the API\n *\n * @returns MemberInstance\n */\n/* jshint ignore:end */\nMemberPage.prototype.getInstance = function getInstance(payload) {\n  return new MemberInstance(\n    this._version,\n    payload,\n    this._solution.accountSid,\n    this._solution.queueSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nMemberPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nMemberPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the MemberContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.QueueContext.MemberInstance\n *\n * @property {string} callSid - The SID of the Call the resource is associated with\n * @property {Date} dateEnqueued - The date the member was enqueued\n * @property {number} position - This member's current position in the queue.\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n * @property {number} waitTime -\n *          The number of seconds the member has been in the queue.\n * @property {string} queueSid - The SID of the Queue the member is in\n *\n * @param {V2010} version - Version of the resource\n * @param {MemberPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created this resource\n * @param {sid} queueSid - The SID of the Queue the member is in\n * @param {sid_like} callSid - The Call SID of the resource(s) to fetch\n */\n/* jshint ignore:end */\nMemberInstance = function MemberInstance(version, payload, accountSid, queueSid,\n                                          callSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.callSid = payload.call_sid; // jshint ignore:line\n  this.dateEnqueued = deserialize.rfc2822DateTime(payload.date_enqueued); // jshint ignore:line\n  this.position = deserialize.integer(payload.position); // jshint ignore:line\n  this.uri = payload.uri; // jshint ignore:line\n  this.waitTime = deserialize.integer(payload.wait_time); // jshint ignore:line\n  this.queueSid = payload.queue_sid; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {accountSid: accountSid, queueSid: queueSid, callSid: callSid || this.callSid, };\n};\n\nObject.defineProperty(MemberInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new MemberContext(\n          this._version,\n          this._solution.accountSid,\n          this._solution.queueSid,\n          this._solution.callSid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a MemberInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed MemberInstance\n */\n/* jshint ignore:end */\nMemberInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a MemberInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberInstance#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.url - The absolute URL of the Queue resource\n * @param {string} [opts.method] - How to pass the update request data\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed MemberInstance\n */\n/* jshint ignore:end */\nMemberInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nMemberInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nMemberInstance.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the MemberContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.QueueContext.MemberContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid -\n *          The SID of the Account that created the resource(s) to fetch\n * @param {sid} queueSid - The SID of the Queue in which to find the members\n * @param {sid_like} callSid - The Call SID of the resource(s) to fetch\n */\n/* jshint ignore:end */\nMemberContext = function MemberContext(version, accountSid, queueSid, callSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {accountSid: accountSid, queueSid: queueSid, callSid: callSid, };\n  this._uri = `/Accounts/${accountSid}/Queues/${queueSid}/Members/${callSid}.json`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a MemberInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed MemberInstance\n */\n/* jshint ignore:end */\nMemberContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new MemberInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.queueSid,\n      this._solution.callSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a MemberInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberContext#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.url - The absolute URL of the Queue resource\n * @param {string} [opts.method] - How to pass the update request data\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed MemberInstance\n */\n/* jshint ignore:end */\nMemberContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n  if (_.isUndefined(opts.url)) {\n    throw new Error('Required parameter \"opts.url\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({'Url': _.get(opts, 'url'), 'Method': _.get(opts, 'method')});\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new MemberInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.queueSid,\n      this._solution.callSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.QueueContext.MemberContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nMemberContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nMemberContext.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  MemberList: MemberList,\n  MemberPage: MemberPage,\n  MemberInstance: MemberInstance,\n  MemberContext: MemberContext\n};\n"]},"metadata":{},"sourceType":"script"}