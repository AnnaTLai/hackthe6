{"ast":null,"code":"// Generated by CoffeeScript 2.4.1\n(function () {\n  var NodeType, XMLCData, XMLCharacterData;\n  NodeType = require('./NodeType');\n  XMLCharacterData = require('./XMLCharacterData'); // Represents a  CDATA node\n\n  module.exports = XMLCData = class XMLCData extends XMLCharacterData {\n    // Initializes a new instance of `XMLCData`\n    // `text` CDATA text\n    constructor(parent, text) {\n      super(parent);\n\n      if (text == null) {\n        throw new Error(\"Missing CDATA text. \" + this.debugInfo());\n      }\n\n      this.name = \"#cdata-section\";\n      this.type = NodeType.CData;\n      this.value = this.stringify.cdata(text);\n    } // Creates and returns a deep clone of `this`\n\n\n    clone() {\n      return Object.create(this);\n    } // Converts the XML fragment to string\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n\n\n    toString(options) {\n      return this.options.writer.cdata(this, this.options.writer.filterOptions(options));\n    }\n\n  };\n}).call(this);","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/xmlbuilder/lib/XMLCData.js"],"names":["NodeType","XMLCData","XMLCharacterData","require","module","exports","constructor","parent","text","Error","debugInfo","name","type","CData","value","stringify","cdata","clone","Object","create","toString","options","writer","filterOptions","call"],"mappings":"AAAA;AACA,CAAC,YAAW;AACV,MAAIA,QAAJ,EAAcC,QAAd,EAAwBC,gBAAxB;AAEAF,EAAAA,QAAQ,GAAGG,OAAO,CAAC,YAAD,CAAlB;AAEAD,EAAAA,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAA1B,CALU,CAOV;;AACAC,EAAAA,MAAM,CAACC,OAAP,GAAiBJ,QAAQ,GAAG,MAAMA,QAAN,SAAuBC,gBAAvB,CAAwC;AAClE;AAEA;AACAI,IAAAA,WAAW,CAACC,MAAD,EAASC,IAAT,EAAe;AACxB,YAAMD,MAAN;;AACA,UAAIC,IAAI,IAAI,IAAZ,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,yBAAyB,KAAKC,SAAL,EAAnC,CAAN;AACD;;AACD,WAAKC,IAAL,GAAY,gBAAZ;AACA,WAAKC,IAAL,GAAYZ,QAAQ,CAACa,KAArB;AACA,WAAKC,KAAL,GAAa,KAAKC,SAAL,CAAeC,KAAf,CAAqBR,IAArB,CAAb;AACD,KAZiE,CAclE;;;AACAS,IAAAA,KAAK,GAAG;AACN,aAAOC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAP;AACD,KAjBiE,CAmBlE;AAEA;AACA;AACA;AACA;;;AACAC,IAAAA,QAAQ,CAACC,OAAD,EAAU;AAChB,aAAO,KAAKA,OAAL,CAAaC,MAAb,CAAoBN,KAApB,CAA0B,IAA1B,EAAgC,KAAKK,OAAL,CAAaC,MAAb,CAAoBC,aAApB,CAAkCF,OAAlC,CAAhC,CAAP;AACD;;AA3BiE,GAApE;AA+BD,CAvCD,EAuCGG,IAvCH,CAuCQ,IAvCR","sourcesContent":["// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLCData, XMLCharacterData;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  // Represents a  CDATA node\n  module.exports = XMLCData = class XMLCData extends XMLCharacterData {\n    // Initializes a new instance of `XMLCData`\n\n    // `text` CDATA text\n    constructor(parent, text) {\n      super(parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text. \" + this.debugInfo());\n      }\n      this.name = \"#cdata-section\";\n      this.type = NodeType.CData;\n      this.value = this.stringify.cdata(text);\n    }\n\n    // Creates and returns a deep clone of `this`\n    clone() {\n      return Object.create(this);\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return this.options.writer.cdata(this, this.options.writer.filterOptions(options));\n    }\n\n  };\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}