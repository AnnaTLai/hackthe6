{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar HighriskSpecialPrefixList;\nvar HighriskSpecialPrefixPage;\nvar HighriskSpecialPrefixInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the HighriskSpecialPrefixList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList\n *\n * @param {Twilio.Voice.V1} version - Version of the resource\n * @param {string} isoCode - The ISO country code\n */\n\n/* jshint ignore:end */\n\nHighriskSpecialPrefixList = function HighriskSpecialPrefixList(version, isoCode) {\n  /* jshint ignore:start */\n\n  /**\n   * @function highriskSpecialPrefixes\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixContext}\n   */\n\n  /* jshint ignore:end */\n  function HighriskSpecialPrefixListInstance(sid) {\n    return HighriskSpecialPrefixListInstance.get(sid);\n  }\n\n  HighriskSpecialPrefixListInstance._version = version; // Path Solution\n\n  HighriskSpecialPrefixListInstance._solution = {\n    isoCode: isoCode\n  };\n  HighriskSpecialPrefixListInstance._uri = `/DialingPermissions/Countries/${isoCode}/HighRiskSpecialPrefixes`;\n  /* jshint ignore:start */\n\n  /**\n   * Streams HighriskSpecialPrefixInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n  HighriskSpecialPrefixListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists HighriskSpecialPrefixInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  HighriskSpecialPrefixListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of HighriskSpecialPrefixInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  HighriskSpecialPrefixListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new HighriskSpecialPrefixPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of HighriskSpecialPrefixInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  HighriskSpecialPrefixListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new HighriskSpecialPrefixPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  HighriskSpecialPrefixListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  HighriskSpecialPrefixListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return HighriskSpecialPrefixListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the HighriskSpecialPrefixPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {HighriskSpecialPrefixSolution} solution - Path solution\n *\n * @returns HighriskSpecialPrefixPage\n */\n\n/* jshint ignore:end */\n\n\nHighriskSpecialPrefixPage = function HighriskSpecialPrefixPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(HighriskSpecialPrefixPage.prototype, Page.prototype);\n\nHighriskSpecialPrefixPage.prototype.constructor = HighriskSpecialPrefixPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of HighriskSpecialPrefixInstance\n *\n * @function getInstance\n * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixPage#\n *\n * @param {HighriskSpecialPrefixPayload} payload - Payload response from the API\n *\n * @returns HighriskSpecialPrefixInstance\n */\n\n/* jshint ignore:end */\n\nHighriskSpecialPrefixPage.prototype.getInstance = function getInstance(payload) {\n  return new HighriskSpecialPrefixInstance(this._version, payload, this._solution.isoCode);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nHighriskSpecialPrefixPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nHighriskSpecialPrefixPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the HighriskSpecialPrefixContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixInstance\n *\n * @property {string} prefix -\n *          A prefix that includes the E.164 assigned country code\n *\n * @param {V1} version - Version of the resource\n * @param {HighriskSpecialPrefixPayload} payload - The instance payload\n * @param {iso_country_code} isoCode - The ISO country code\n */\n\n/* jshint ignore:end */\n\n\nHighriskSpecialPrefixInstance = function HighriskSpecialPrefixInstance(version, payload, isoCode) {\n  this._version = version; // Marshaled Properties\n\n  this.prefix = payload.prefix; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    isoCode: isoCode\n  };\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nHighriskSpecialPrefixInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nHighriskSpecialPrefixInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  HighriskSpecialPrefixList: HighriskSpecialPrefixList,\n  HighriskSpecialPrefixPage: HighriskSpecialPrefixPage,\n  HighriskSpecialPrefixInstance: HighriskSpecialPrefixInstance\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/voice/v1/dialingPermissions/country/highriskSpecialPrefix.js"],"names":["Q","require","_","util","Page","values","HighriskSpecialPrefixList","HighriskSpecialPrefixPage","HighriskSpecialPrefixInstance","version","isoCode","HighriskSpecialPrefixListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","prefix","_context","undefined","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar HighriskSpecialPrefixList;\nvar HighriskSpecialPrefixPage;\nvar HighriskSpecialPrefixInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the HighriskSpecialPrefixList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList\n *\n * @param {Twilio.Voice.V1} version - Version of the resource\n * @param {string} isoCode - The ISO country code\n */\n/* jshint ignore:end */\nHighriskSpecialPrefixList = function HighriskSpecialPrefixList(version, isoCode)\n    {\n  /* jshint ignore:start */\n  /**\n   * @function highriskSpecialPrefixes\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixContext}\n   */\n  /* jshint ignore:end */\n  function HighriskSpecialPrefixListInstance(sid) {\n    return HighriskSpecialPrefixListInstance.get(sid);\n  }\n\n  HighriskSpecialPrefixListInstance._version = version;\n  // Path Solution\n  HighriskSpecialPrefixListInstance._solution = {isoCode: isoCode};\n  HighriskSpecialPrefixListInstance._uri = `/DialingPermissions/Countries/${isoCode}/HighRiskSpecialPrefixes`;\n  /* jshint ignore:start */\n  /**\n   * Streams HighriskSpecialPrefixInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  HighriskSpecialPrefixListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists HighriskSpecialPrefixInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  HighriskSpecialPrefixListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of HighriskSpecialPrefixInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  HighriskSpecialPrefixListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new HighriskSpecialPrefixPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of HighriskSpecialPrefixInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  HighriskSpecialPrefixListInstance.getPage = function getPage(targetUrl,\n      callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new HighriskSpecialPrefixPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  HighriskSpecialPrefixListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  HighriskSpecialPrefixListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return HighriskSpecialPrefixListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the HighriskSpecialPrefixPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {HighriskSpecialPrefixSolution} solution - Path solution\n *\n * @returns HighriskSpecialPrefixPage\n */\n/* jshint ignore:end */\nHighriskSpecialPrefixPage = function HighriskSpecialPrefixPage(version,\n    response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(HighriskSpecialPrefixPage.prototype, Page.prototype);\nHighriskSpecialPrefixPage.prototype.constructor = HighriskSpecialPrefixPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of HighriskSpecialPrefixInstance\n *\n * @function getInstance\n * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixPage#\n *\n * @param {HighriskSpecialPrefixPayload} payload - Payload response from the API\n *\n * @returns HighriskSpecialPrefixInstance\n */\n/* jshint ignore:end */\nHighriskSpecialPrefixPage.prototype.getInstance = function getInstance(payload)\n    {\n  return new HighriskSpecialPrefixInstance(this._version, payload, this._solution.isoCode);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nHighriskSpecialPrefixPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nHighriskSpecialPrefixPage.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the HighriskSpecialPrefixContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixInstance\n *\n * @property {string} prefix -\n *          A prefix that includes the E.164 assigned country code\n *\n * @param {V1} version - Version of the resource\n * @param {HighriskSpecialPrefixPayload} payload - The instance payload\n * @param {iso_country_code} isoCode - The ISO country code\n */\n/* jshint ignore:end */\nHighriskSpecialPrefixInstance = function HighriskSpecialPrefixInstance(version,\n    payload, isoCode) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.prefix = payload.prefix; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {isoCode: isoCode, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nHighriskSpecialPrefixInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nHighriskSpecialPrefixInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  HighriskSpecialPrefixList: HighriskSpecialPrefixList,\n  HighriskSpecialPrefixPage: HighriskSpecialPrefixPage,\n  HighriskSpecialPrefixInstance: HighriskSpecialPrefixInstance\n};\n"]},"metadata":{},"sourceType":"script"}