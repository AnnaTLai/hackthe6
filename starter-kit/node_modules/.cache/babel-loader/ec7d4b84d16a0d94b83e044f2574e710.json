{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar WorkflowStatisticsList;\nvar WorkflowStatisticsPage;\nvar WorkflowStatisticsInstance;\nvar WorkflowStatisticsContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkflowStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid -\n *          The SID of the Workspace that contains the Workflow\n * @param {string} workflowSid -\n *          Returns the list of Tasks that are being controlled by the Workflow with the specified SID value\n */\n\n/* jshint ignore:end */\n\nWorkflowStatisticsList = function WorkflowStatisticsList(version, workspaceSid, workflowSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function statistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsContext}\n   */\n\n  /* jshint ignore:end */\n  function WorkflowStatisticsListInstance(sid) {\n    return WorkflowStatisticsListInstance.get(sid);\n  }\n\n  WorkflowStatisticsListInstance._version = version; // Path Solution\n\n  WorkflowStatisticsListInstance._solution = {\n    workspaceSid: workspaceSid,\n    workflowSid: workflowSid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a workflow_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsContext}\n   */\n\n  /* jshint ignore:end */\n\n  WorkflowStatisticsListInstance.get = function get() {\n    return new WorkflowStatisticsContext(this._version, this._solution.workspaceSid, this._solution.workflowSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  WorkflowStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WorkflowStatisticsListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WorkflowStatisticsListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkflowStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkflowStatisticsSolution} solution - Path solution\n *\n * @returns WorkflowStatisticsPage\n */\n\n/* jshint ignore:end */\n\n\nWorkflowStatisticsPage = function WorkflowStatisticsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WorkflowStatisticsPage.prototype, Page.prototype);\n\nWorkflowStatisticsPage.prototype.constructor = WorkflowStatisticsPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of WorkflowStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsPage#\n *\n * @param {WorkflowStatisticsPayload} payload - Payload response from the API\n *\n * @returns WorkflowStatisticsInstance\n */\n\n/* jshint ignore:end */\n\nWorkflowStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new WorkflowStatisticsInstance(this._version, payload, this._solution.workspaceSid, this._solution.workflowSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkflowStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nWorkflowStatisticsPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkflowStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {object} cumulative -\n *          An object that contains the cumulative statistics for the Workflow\n * @property {object} realtime -\n *          An object that contains the real-time statistics for the Workflow\n * @property {string} workflowSid -\n *          Returns the list of Tasks that are being controlled by the Workflow with the specified SID value\n * @property {string} workspaceSid -\n *          The SID of the Workspace that contains the Workflow\n * @property {string} url - The absolute URL of the Workflow statistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {WorkflowStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The SID of the Workspace that contains the Workflow\n * @param {sid} workflowSid -\n *          Returns the list of Tasks that are being controlled by the Workflow with the specified SID value\n */\n\n/* jshint ignore:end */\n\n\nWorkflowStatisticsInstance = function WorkflowStatisticsInstance(version, payload, workspaceSid, workflowSid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.cumulative = payload.cumulative; // jshint ignore:line\n\n  this.realtime = payload.realtime; // jshint ignore:line\n\n  this.workflowSid = payload.workflow_sid; // jshint ignore:line\n\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    workspaceSid: workspaceSid,\n    workflowSid: workflowSid\n  };\n};\n\nObject.defineProperty(WorkflowStatisticsInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new WorkflowStatisticsContext(this._version, this._solution.workspaceSid, this._solution.workflowSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a WorkflowStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {Date} [opts.endDate] -\n *          Only calculate statistics from this date and time and earlier\n * @param {string} [opts.taskChannel] -\n *          Only calculate real-time statistics on this TaskChannel.\n * @param {string} [opts.splitByWaitTime] -\n *          A comma separated list of values that describes the thresholds to calculate statistics on\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowStatisticsInstance\n */\n\n/* jshint ignore:end */\n\nWorkflowStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkflowStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nWorkflowStatisticsInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkflowStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The SID of the Workspace with the Workflow to fetch\n * @param {sid} workflowSid -\n *          Returns the list of Tasks that are being controlled by the Workflow with the specified SID value\n */\n\n/* jshint ignore:end */\n\n\nWorkflowStatisticsContext = function WorkflowStatisticsContext(version, workspaceSid, workflowSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    workspaceSid: workspaceSid,\n    workflowSid: workflowSid\n  };\n  this._uri = `/Workspaces/${workspaceSid}/Workflows/${workflowSid}/Statistics`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a WorkflowStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {Date} [opts.endDate] -\n *          Only calculate statistics from this date and time and earlier\n * @param {string} [opts.taskChannel] -\n *          Only calculate real-time statistics on this TaskChannel.\n * @param {string} [opts.splitByWaitTime] -\n *          A comma separated list of values that describes the thresholds to calculate statistics on\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowStatisticsInstance\n */\n\n/* jshint ignore:end */\n\n\nWorkflowStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Minutes': _.get(opts, 'minutes'),\n    'StartDate': serialize.iso8601DateTime(_.get(opts, 'startDate')),\n    'EndDate': serialize.iso8601DateTime(_.get(opts, 'endDate')),\n    'TaskChannel': _.get(opts, 'taskChannel'),\n    'SplitByWaitTime': _.get(opts, 'splitByWaitTime')\n  });\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new WorkflowStatisticsInstance(this._version, payload, this._solution.workspaceSid, this._solution.workflowSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkflowStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWorkflowStatisticsContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WorkflowStatisticsList: WorkflowStatisticsList,\n  WorkflowStatisticsPage: WorkflowStatisticsPage,\n  WorkflowStatisticsInstance: WorkflowStatisticsInstance,\n  WorkflowStatisticsContext: WorkflowStatisticsContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/taskrouter/v1/workspace/workflow/workflowStatistics.js"],"names":["Q","require","_","util","Page","serialize","values","WorkflowStatisticsList","WorkflowStatisticsPage","WorkflowStatisticsInstance","WorkflowStatisticsContext","version","workspaceSid","workflowSid","WorkflowStatisticsListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","cumulative","realtime","workflow_sid","workspace_sid","url","_context","undefined","Object","defineProperty","fetch","opts","callback","_proxy","_uri","deferred","defer","data","of","iso8601DateTime","promise","uri","method","params","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar WorkflowStatisticsList;\nvar WorkflowStatisticsPage;\nvar WorkflowStatisticsInstance;\nvar WorkflowStatisticsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkflowStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid -\n *          The SID of the Workspace that contains the Workflow\n * @param {string} workflowSid -\n *          Returns the list of Tasks that are being controlled by the Workflow with the specified SID value\n */\n/* jshint ignore:end */\nWorkflowStatisticsList = function WorkflowStatisticsList(version, workspaceSid,\n                                                          workflowSid) {\n  /* jshint ignore:start */\n  /**\n   * @function statistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsContext}\n   */\n  /* jshint ignore:end */\n  function WorkflowStatisticsListInstance(sid) {\n    return WorkflowStatisticsListInstance.get(sid);\n  }\n\n  WorkflowStatisticsListInstance._version = version;\n  // Path Solution\n  WorkflowStatisticsListInstance._solution = {workspaceSid: workspaceSid, workflowSid: workflowSid};\n  /* jshint ignore:start */\n  /**\n   * Constructs a workflow_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsContext}\n   */\n  /* jshint ignore:end */\n  WorkflowStatisticsListInstance.get = function get() {\n    return new WorkflowStatisticsContext(\n      this._version,\n      this._solution.workspaceSid,\n      this._solution.workflowSid\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  WorkflowStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WorkflowStatisticsListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WorkflowStatisticsListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkflowStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkflowStatisticsSolution} solution - Path solution\n *\n * @returns WorkflowStatisticsPage\n */\n/* jshint ignore:end */\nWorkflowStatisticsPage = function WorkflowStatisticsPage(version, response,\n                                                          solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WorkflowStatisticsPage.prototype, Page.prototype);\nWorkflowStatisticsPage.prototype.constructor = WorkflowStatisticsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of WorkflowStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsPage#\n *\n * @param {WorkflowStatisticsPayload} payload - Payload response from the API\n *\n * @returns WorkflowStatisticsInstance\n */\n/* jshint ignore:end */\nWorkflowStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new WorkflowStatisticsInstance(\n    this._version,\n    payload,\n    this._solution.workspaceSid,\n    this._solution.workflowSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkflowStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkflowStatisticsPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkflowStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {object} cumulative -\n *          An object that contains the cumulative statistics for the Workflow\n * @property {object} realtime -\n *          An object that contains the real-time statistics for the Workflow\n * @property {string} workflowSid -\n *          Returns the list of Tasks that are being controlled by the Workflow with the specified SID value\n * @property {string} workspaceSid -\n *          The SID of the Workspace that contains the Workflow\n * @property {string} url - The absolute URL of the Workflow statistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {WorkflowStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The SID of the Workspace that contains the Workflow\n * @param {sid} workflowSid -\n *          Returns the list of Tasks that are being controlled by the Workflow with the specified SID value\n */\n/* jshint ignore:end */\nWorkflowStatisticsInstance = function WorkflowStatisticsInstance(version,\n    payload, workspaceSid, workflowSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.cumulative = payload.cumulative; // jshint ignore:line\n  this.realtime = payload.realtime; // jshint ignore:line\n  this.workflowSid = payload.workflow_sid; // jshint ignore:line\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {workspaceSid: workspaceSid, workflowSid: workflowSid, };\n};\n\nObject.defineProperty(WorkflowStatisticsInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new WorkflowStatisticsContext(\n          this._version,\n          this._solution.workspaceSid,\n          this._solution.workflowSid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a WorkflowStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {Date} [opts.endDate] -\n *          Only calculate statistics from this date and time and earlier\n * @param {string} [opts.taskChannel] -\n *          Only calculate real-time statistics on this TaskChannel.\n * @param {string} [opts.splitByWaitTime] -\n *          A comma separated list of values that describes the thresholds to calculate statistics on\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowStatisticsInstance\n */\n/* jshint ignore:end */\nWorkflowStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkflowStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkflowStatisticsInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkflowStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The SID of the Workspace with the Workflow to fetch\n * @param {sid} workflowSid -\n *          Returns the list of Tasks that are being controlled by the Workflow with the specified SID value\n */\n/* jshint ignore:end */\nWorkflowStatisticsContext = function WorkflowStatisticsContext(version,\n    workspaceSid, workflowSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {workspaceSid: workspaceSid, workflowSid: workflowSid, };\n  this._uri = `/Workspaces/${workspaceSid}/Workflows/${workflowSid}/Statistics`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a WorkflowStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {Date} [opts.endDate] -\n *          Only calculate statistics from this date and time and earlier\n * @param {string} [opts.taskChannel] -\n *          Only calculate real-time statistics on this TaskChannel.\n * @param {string} [opts.splitByWaitTime] -\n *          A comma separated list of values that describes the thresholds to calculate statistics on\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowStatisticsInstance\n */\n/* jshint ignore:end */\nWorkflowStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Minutes': _.get(opts, 'minutes'),\n    'StartDate': serialize.iso8601DateTime(_.get(opts, 'startDate')),\n    'EndDate': serialize.iso8601DateTime(_.get(opts, 'endDate')),\n    'TaskChannel': _.get(opts, 'taskChannel'),\n    'SplitByWaitTime': _.get(opts, 'splitByWaitTime')\n  });\n\n  var promise = this._version.fetch({uri: this._uri, method: 'GET', params: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new WorkflowStatisticsInstance(\n      this._version,\n      payload,\n      this._solution.workspaceSid,\n      this._solution.workflowSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkflowStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWorkflowStatisticsContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WorkflowStatisticsList: WorkflowStatisticsList,\n  WorkflowStatisticsPage: WorkflowStatisticsPage,\n  WorkflowStatisticsInstance: WorkflowStatisticsInstance,\n  WorkflowStatisticsContext: WorkflowStatisticsContext\n};\n"]},"metadata":{},"sourceType":"script"}