{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar WebhookList;\nvar WebhookPage;\nvar WebhookInstance;\nvar WebhookContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the WebhookList\n *\n * @constructor Twilio.Conversations.V1.ConfigurationContext.WebhookList\n *\n * @param {Twilio.Conversations.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nWebhookList = function WebhookList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function webhooks\n   * @memberof Twilio.Conversations.V1.ConfigurationContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Conversations.V1.ConfigurationContext.WebhookContext}\n   */\n\n  /* jshint ignore:end */\n  function WebhookListInstance(sid) {\n    return WebhookListInstance.get(sid);\n  }\n\n  WebhookListInstance._version = version; // Path Solution\n\n  WebhookListInstance._solution = {};\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a webhook\n   *\n   * @function get\n   * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookList#\n   *\n   * @returns {Twilio.Conversations.V1.ConfigurationContext.WebhookContext}\n   */\n\n  /* jshint ignore:end */\n\n  WebhookListInstance.get = function get() {\n    return new WebhookContext(this._version);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  WebhookListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WebhookListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WebhookListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WebhookPage\n *\n * @constructor Twilio.Conversations.V1.ConfigurationContext.WebhookPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WebhookSolution} solution - Path solution\n *\n * @returns WebhookPage\n */\n\n/* jshint ignore:end */\n\n\nWebhookPage = function WebhookPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WebhookPage.prototype, Page.prototype);\n\nWebhookPage.prototype.constructor = WebhookPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of WebhookInstance\n *\n * @function getInstance\n * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookPage#\n *\n * @param {WebhookPayload} payload - Payload response from the API\n *\n * @returns WebhookInstance\n */\n\n/* jshint ignore:end */\n\nWebhookPage.prototype.getInstance = function getInstance(payload) {\n  return new WebhookInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWebhookPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nWebhookPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WebhookContext\n *\n * @constructor Twilio.Conversations.V1.ConfigurationContext.WebhookInstance\n *\n * @property {string} accountSid -\n *          The unique ID of the Account responsible for this conversation.\n * @property {webhook.method} method -\n *          The HTTP method to be used when sending a webhook request.\n * @property {string} filters -\n *          The list of webhook event triggers that are enabled for this Service.\n * @property {string} preWebhookUrl -\n *          The absolute url the pre-event webhook request should be sent to.\n * @property {string} postWebhookUrl -\n *          The absolute url the post-event webhook request should be sent to.\n * @property {webhook.target} target - The routing target of the webhook.\n * @property {string} url - An absolute URL for this webhook.\n *\n * @param {V1} version - Version of the resource\n * @param {WebhookPayload} payload - The instance payload\n */\n\n/* jshint ignore:end */\n\n\nWebhookInstance = function WebhookInstance(version, payload) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.method = payload.method; // jshint ignore:line\n\n  this.filters = payload.filters; // jshint ignore:line\n\n  this.preWebhookUrl = payload.pre_webhook_url; // jshint ignore:line\n\n  this.postWebhookUrl = payload.post_webhook_url; // jshint ignore:line\n\n  this.target = payload.target; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {};\n};\n\nObject.defineProperty(WebhookInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new WebhookContext(this._version);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a WebhookInstance\n *\n * @function fetch\n * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WebhookInstance\n */\n\n/* jshint ignore:end */\n\nWebhookInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a WebhookInstance\n *\n * @function update\n * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.method] -\n *          The HTTP method to be used when sending a webhook request.\n * @param {string|list} [opts.filters] -\n *          The list of webhook event triggers that are enabled for this Service.\n * @param {string} [opts.preWebhookUrl] -\n *          The absolute url the pre-event webhook request should be sent to.\n * @param {string} [opts.postWebhookUrl] -\n *          The absolute url the post-event webhook request should be sent to.\n * @param {webhook.target} [opts.target] - The routing target of the webhook.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WebhookInstance\n */\n\n/* jshint ignore:end */\n\n\nWebhookInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWebhookInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nWebhookInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WebhookContext\n *\n * @constructor Twilio.Conversations.V1.ConfigurationContext.WebhookContext\n *\n * @param {V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\n\nWebhookContext = function WebhookContext(version) {\n  this._version = version; // Path Solution\n\n  this._solution = {};\n  this._uri = `/Configuration/Webhooks`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a WebhookInstance\n *\n * @function fetch\n * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WebhookInstance\n */\n\n/* jshint ignore:end */\n\n\nWebhookContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new WebhookInstance(this._version, payload));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a WebhookInstance\n *\n * @function update\n * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.method] -\n *          The HTTP method to be used when sending a webhook request.\n * @param {string|list} [opts.filters] -\n *          The list of webhook event triggers that are enabled for this Service.\n * @param {string} [opts.preWebhookUrl] -\n *          The absolute url the pre-event webhook request should be sent to.\n * @param {string} [opts.postWebhookUrl] -\n *          The absolute url the post-event webhook request should be sent to.\n * @param {webhook.target} [opts.target] - The routing target of the webhook.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WebhookInstance\n */\n\n/* jshint ignore:end */\n\n\nWebhookContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Method': _.get(opts, 'method'),\n    'Filters': serialize.map(_.get(opts, 'filters'), function (e) {\n      return e;\n    }),\n    'PreWebhookUrl': _.get(opts, 'preWebhookUrl'),\n    'PostWebhookUrl': _.get(opts, 'postWebhookUrl'),\n    'Target': _.get(opts, 'target')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new WebhookInstance(this._version, payload));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWebhookContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWebhookContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WebhookList: WebhookList,\n  WebhookPage: WebhookPage,\n  WebhookInstance: WebhookInstance,\n  WebhookContext: WebhookContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/conversations/v1/configuration/webhook.js"],"names":["Q","require","_","util","Page","serialize","values","WebhookList","WebhookPage","WebhookInstance","WebhookContext","version","WebhookListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","method","filters","preWebhookUrl","pre_webhook_url","postWebhookUrl","post_webhook_url","target","url","_context","undefined","Object","defineProperty","fetch","callback","_proxy","update","opts","_uri","deferred","defer","promise","uri","then","resolve","bind","catch","error","reject","nodeify","data","of","map","e","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar WebhookList;\nvar WebhookPage;\nvar WebhookInstance;\nvar WebhookContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the WebhookList\n *\n * @constructor Twilio.Conversations.V1.ConfigurationContext.WebhookList\n *\n * @param {Twilio.Conversations.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nWebhookList = function WebhookList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function webhooks\n   * @memberof Twilio.Conversations.V1.ConfigurationContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Conversations.V1.ConfigurationContext.WebhookContext}\n   */\n  /* jshint ignore:end */\n  function WebhookListInstance(sid) {\n    return WebhookListInstance.get(sid);\n  }\n\n  WebhookListInstance._version = version;\n  // Path Solution\n  WebhookListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a webhook\n   *\n   * @function get\n   * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookList#\n   *\n   * @returns {Twilio.Conversations.V1.ConfigurationContext.WebhookContext}\n   */\n  /* jshint ignore:end */\n  WebhookListInstance.get = function get() {\n    return new WebhookContext(this._version);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  WebhookListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WebhookListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WebhookListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WebhookPage\n *\n * @constructor Twilio.Conversations.V1.ConfigurationContext.WebhookPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WebhookSolution} solution - Path solution\n *\n * @returns WebhookPage\n */\n/* jshint ignore:end */\nWebhookPage = function WebhookPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WebhookPage.prototype, Page.prototype);\nWebhookPage.prototype.constructor = WebhookPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of WebhookInstance\n *\n * @function getInstance\n * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookPage#\n *\n * @param {WebhookPayload} payload - Payload response from the API\n *\n * @returns WebhookInstance\n */\n/* jshint ignore:end */\nWebhookPage.prototype.getInstance = function getInstance(payload) {\n  return new WebhookInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWebhookPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWebhookPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WebhookContext\n *\n * @constructor Twilio.Conversations.V1.ConfigurationContext.WebhookInstance\n *\n * @property {string} accountSid -\n *          The unique ID of the Account responsible for this conversation.\n * @property {webhook.method} method -\n *          The HTTP method to be used when sending a webhook request.\n * @property {string} filters -\n *          The list of webhook event triggers that are enabled for this Service.\n * @property {string} preWebhookUrl -\n *          The absolute url the pre-event webhook request should be sent to.\n * @property {string} postWebhookUrl -\n *          The absolute url the post-event webhook request should be sent to.\n * @property {webhook.target} target - The routing target of the webhook.\n * @property {string} url - An absolute URL for this webhook.\n *\n * @param {V1} version - Version of the resource\n * @param {WebhookPayload} payload - The instance payload\n */\n/* jshint ignore:end */\nWebhookInstance = function WebhookInstance(version, payload) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.method = payload.method; // jshint ignore:line\n  this.filters = payload.filters; // jshint ignore:line\n  this.preWebhookUrl = payload.pre_webhook_url; // jshint ignore:line\n  this.postWebhookUrl = payload.post_webhook_url; // jshint ignore:line\n  this.target = payload.target; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {};\n};\n\nObject.defineProperty(WebhookInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new WebhookContext(this._version);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a WebhookInstance\n *\n * @function fetch\n * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WebhookInstance\n */\n/* jshint ignore:end */\nWebhookInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a WebhookInstance\n *\n * @function update\n * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.method] -\n *          The HTTP method to be used when sending a webhook request.\n * @param {string|list} [opts.filters] -\n *          The list of webhook event triggers that are enabled for this Service.\n * @param {string} [opts.preWebhookUrl] -\n *          The absolute url the pre-event webhook request should be sent to.\n * @param {string} [opts.postWebhookUrl] -\n *          The absolute url the post-event webhook request should be sent to.\n * @param {webhook.target} [opts.target] - The routing target of the webhook.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WebhookInstance\n */\n/* jshint ignore:end */\nWebhookInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWebhookInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWebhookInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WebhookContext\n *\n * @constructor Twilio.Conversations.V1.ConfigurationContext.WebhookContext\n *\n * @param {V1} version - Version of the resource\n */\n/* jshint ignore:end */\nWebhookContext = function WebhookContext(version) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {};\n  this._uri = `/Configuration/Webhooks`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a WebhookInstance\n *\n * @function fetch\n * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WebhookInstance\n */\n/* jshint ignore:end */\nWebhookContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new WebhookInstance(this._version, payload));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a WebhookInstance\n *\n * @function update\n * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.method] -\n *          The HTTP method to be used when sending a webhook request.\n * @param {string|list} [opts.filters] -\n *          The list of webhook event triggers that are enabled for this Service.\n * @param {string} [opts.preWebhookUrl] -\n *          The absolute url the pre-event webhook request should be sent to.\n * @param {string} [opts.postWebhookUrl] -\n *          The absolute url the post-event webhook request should be sent to.\n * @param {webhook.target} [opts.target] - The routing target of the webhook.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WebhookInstance\n */\n/* jshint ignore:end */\nWebhookContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Method': _.get(opts, 'method'),\n    'Filters': serialize.map(_.get(opts, 'filters'), function(e) { return e; }),\n    'PreWebhookUrl': _.get(opts, 'preWebhookUrl'),\n    'PostWebhookUrl': _.get(opts, 'postWebhookUrl'),\n    'Target': _.get(opts, 'target')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new WebhookInstance(this._version, payload));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Conversations.V1.ConfigurationContext.WebhookContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWebhookContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWebhookContext.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WebhookList: WebhookList,\n  WebhookPage: WebhookPage,\n  WebhookInstance: WebhookInstance,\n  WebhookContext: WebhookContext\n};\n"]},"metadata":{},"sourceType":"script"}