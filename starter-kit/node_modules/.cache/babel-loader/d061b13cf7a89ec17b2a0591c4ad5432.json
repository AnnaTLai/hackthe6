{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar DialogueList;\nvar DialoguePage;\nvar DialogueInstance;\nvar DialogueContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the DialogueList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.DialogueList\n *\n * @param {Twilio.Preview.Understand} version - Version of the resource\n * @param {string} assistantSid - The unique ID of the parent Assistant.\n */\n\n/* jshint ignore:end */\n\nDialogueList = function DialogueList(version, assistantSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function dialogues\n   * @memberof Twilio.Preview.Understand.AssistantContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext.DialogueContext}\n   */\n\n  /* jshint ignore:end */\n  function DialogueListInstance(sid) {\n    return DialogueListInstance.get(sid);\n  }\n\n  DialogueListInstance._version = version; // Path Solution\n\n  DialogueListInstance._solution = {\n    assistantSid: assistantSid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a dialogue\n   *\n   * @function get\n   * @memberof Twilio.Preview.Understand.AssistantContext.DialogueList#\n   *\n   * @param {string} sid - The sid\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext.DialogueContext}\n   */\n\n  /* jshint ignore:end */\n\n  DialogueListInstance.get = function get(sid) {\n    return new DialogueContext(this._version, this._solution.assistantSid, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Understand.AssistantContext.DialogueList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  DialogueListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  DialogueListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return DialogueListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the DialoguePage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.DialoguePage\n *\n * @param {Understand} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {DialogueSolution} solution - Path solution\n *\n * @returns DialoguePage\n */\n\n/* jshint ignore:end */\n\n\nDialoguePage = function DialoguePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(DialoguePage.prototype, Page.prototype);\n\nDialoguePage.prototype.constructor = DialoguePage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of DialogueInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Understand.AssistantContext.DialoguePage#\n *\n * @param {DialoguePayload} payload - Payload response from the API\n *\n * @returns DialogueInstance\n */\n\n/* jshint ignore:end */\n\nDialoguePage.prototype.getInstance = function getInstance(payload) {\n  return new DialogueInstance(this._version, payload, this._solution.assistantSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.DialoguePage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nDialoguePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nDialoguePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the DialogueContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.DialogueInstance\n *\n * @property {string} accountSid -\n *          The unique ID of the Account that created this Field.\n * @property {string} assistantSid - The unique ID of the parent Assistant.\n * @property {string} sid - The unique ID of the Dialogue\n * @property {object} data - The dialogue memory object as json\n * @property {string} url - The url\n *\n * @param {Understand} version - Version of the resource\n * @param {DialoguePayload} payload - The instance payload\n * @param {sid} assistantSid - The unique ID of the parent Assistant.\n * @param {sid_like} sid - The sid\n */\n\n/* jshint ignore:end */\n\n\nDialogueInstance = function DialogueInstance(version, payload, assistantSid, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.assistantSid = payload.assistant_sid; // jshint ignore:line\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.data = payload.data; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    assistantSid: assistantSid,\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(DialogueInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new DialogueContext(this._version, this._solution.assistantSid, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a DialogueInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantContext.DialogueInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed DialogueInstance\n */\n\n/* jshint ignore:end */\n\nDialogueInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.DialogueInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nDialogueInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nDialogueInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the DialogueContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.DialogueContext\n *\n * @param {Understand} version - Version of the resource\n * @param {sid_like} assistantSid - The assistant_sid\n * @param {sid_like} sid - The sid\n */\n\n/* jshint ignore:end */\n\n\nDialogueContext = function DialogueContext(version, assistantSid, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    assistantSid: assistantSid,\n    sid: sid\n  };\n  this._uri = `/Assistants/${assistantSid}/Dialogues/${sid}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a DialogueInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantContext.DialogueContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed DialogueInstance\n */\n\n/* jshint ignore:end */\n\n\nDialogueContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new DialogueInstance(this._version, payload, this._solution.assistantSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.DialogueContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nDialogueContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nDialogueContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  DialogueList: DialogueList,\n  DialoguePage: DialoguePage,\n  DialogueInstance: DialogueInstance,\n  DialogueContext: DialogueContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/preview/understand/assistant/dialogue.js"],"names":["Q","require","_","util","Page","values","DialogueList","DialoguePage","DialogueInstance","DialogueContext","version","assistantSid","DialogueListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","assistant_sid","data","url","_context","undefined","Object","defineProperty","fetch","callback","_proxy","_uri","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar DialogueList;\nvar DialoguePage;\nvar DialogueInstance;\nvar DialogueContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the DialogueList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.DialogueList\n *\n * @param {Twilio.Preview.Understand} version - Version of the resource\n * @param {string} assistantSid - The unique ID of the parent Assistant.\n */\n/* jshint ignore:end */\nDialogueList = function DialogueList(version, assistantSid) {\n  /* jshint ignore:start */\n  /**\n   * @function dialogues\n   * @memberof Twilio.Preview.Understand.AssistantContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext.DialogueContext}\n   */\n  /* jshint ignore:end */\n  function DialogueListInstance(sid) {\n    return DialogueListInstance.get(sid);\n  }\n\n  DialogueListInstance._version = version;\n  // Path Solution\n  DialogueListInstance._solution = {assistantSid: assistantSid};\n  /* jshint ignore:start */\n  /**\n   * Constructs a dialogue\n   *\n   * @function get\n   * @memberof Twilio.Preview.Understand.AssistantContext.DialogueList#\n   *\n   * @param {string} sid - The sid\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext.DialogueContext}\n   */\n  /* jshint ignore:end */\n  DialogueListInstance.get = function get(sid) {\n    return new DialogueContext(this._version, this._solution.assistantSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Understand.AssistantContext.DialogueList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  DialogueListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  DialogueListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return DialogueListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the DialoguePage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.DialoguePage\n *\n * @param {Understand} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {DialogueSolution} solution - Path solution\n *\n * @returns DialoguePage\n */\n/* jshint ignore:end */\nDialoguePage = function DialoguePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(DialoguePage.prototype, Page.prototype);\nDialoguePage.prototype.constructor = DialoguePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of DialogueInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Understand.AssistantContext.DialoguePage#\n *\n * @param {DialoguePayload} payload - Payload response from the API\n *\n * @returns DialogueInstance\n */\n/* jshint ignore:end */\nDialoguePage.prototype.getInstance = function getInstance(payload) {\n  return new DialogueInstance(this._version, payload, this._solution.assistantSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.DialoguePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nDialoguePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nDialoguePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the DialogueContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.DialogueInstance\n *\n * @property {string} accountSid -\n *          The unique ID of the Account that created this Field.\n * @property {string} assistantSid - The unique ID of the parent Assistant.\n * @property {string} sid - The unique ID of the Dialogue\n * @property {object} data - The dialogue memory object as json\n * @property {string} url - The url\n *\n * @param {Understand} version - Version of the resource\n * @param {DialoguePayload} payload - The instance payload\n * @param {sid} assistantSid - The unique ID of the parent Assistant.\n * @param {sid_like} sid - The sid\n */\n/* jshint ignore:end */\nDialogueInstance = function DialogueInstance(version, payload, assistantSid,\n                                              sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.assistantSid = payload.assistant_sid; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.data = payload.data; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {assistantSid: assistantSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(DialogueInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new DialogueContext(this._version, this._solution.assistantSid, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a DialogueInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantContext.DialogueInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed DialogueInstance\n */\n/* jshint ignore:end */\nDialogueInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.DialogueInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nDialogueInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nDialogueInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the DialogueContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.DialogueContext\n *\n * @param {Understand} version - Version of the resource\n * @param {sid_like} assistantSid - The assistant_sid\n * @param {sid_like} sid - The sid\n */\n/* jshint ignore:end */\nDialogueContext = function DialogueContext(version, assistantSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {assistantSid: assistantSid, sid: sid, };\n  this._uri = `/Assistants/${assistantSid}/Dialogues/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a DialogueInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantContext.DialogueContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed DialogueInstance\n */\n/* jshint ignore:end */\nDialogueContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new DialogueInstance(\n      this._version,\n      payload,\n      this._solution.assistantSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.DialogueContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nDialogueContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nDialogueContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  DialogueList: DialogueList,\n  DialoguePage: DialoguePage,\n  DialogueInstance: DialogueInstance,\n  DialogueContext: DialogueContext\n};\n"]},"metadata":{},"sourceType":"script"}