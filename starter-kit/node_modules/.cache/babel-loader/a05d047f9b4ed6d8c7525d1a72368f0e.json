{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar UsAppToPersonList;\nvar UsAppToPersonPage;\nvar UsAppToPersonInstance;\nvar UsAppToPersonContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the UsAppToPersonList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonList\n *\n * @param {Twilio.Messaging.V1} version - Version of the resource\n * @param {string} messagingServiceSid -\n *          The SID of the Messaging Service the resource is associated with\n */\n\n/* jshint ignore:end */\n\nUsAppToPersonList = function UsAppToPersonList(version, messagingServiceSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function usAppToPerson\n   * @memberof Twilio.Messaging.V1.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext}\n   */\n\n  /* jshint ignore:end */\n  function UsAppToPersonListInstance(sid) {\n    return UsAppToPersonListInstance.get(sid);\n  }\n\n  UsAppToPersonListInstance._version = version; // Path Solution\n\n  UsAppToPersonListInstance._solution = {\n    messagingServiceSid: messagingServiceSid\n  };\n  UsAppToPersonListInstance._uri = `/Services/${messagingServiceSid}/Compliance/Usa2p`;\n  /* jshint ignore:start */\n\n  /**\n   * create a UsAppToPersonInstance\n   *\n   * @function create\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.brandRegistrationSid - A2P Brand Registration SID\n   * @param {string} opts.description -\n   *          A short description of what this SMS campaign does\n   * @param {string|list} opts.messageSamples - Message samples\n   * @param {string} opts.usAppToPersonUsecase - A2P Campaign Use Case.\n   * @param {boolean} opts.hasEmbeddedLinks -\n   *          Indicates that this SMS campaign will send messages that contain links\n   * @param {boolean} opts.hasEmbeddedPhone -\n   *          Indicates that this SMS campaign will send messages that contain phone numbers\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed UsAppToPersonInstance\n   */\n\n  /* jshint ignore:end */\n\n  UsAppToPersonListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.brandRegistrationSid)) {\n      throw new Error('Required parameter \"opts.brandRegistrationSid\" missing.');\n    }\n\n    if (_.isUndefined(opts.description)) {\n      throw new Error('Required parameter \"opts.description\" missing.');\n    }\n\n    if (_.isUndefined(opts.messageSamples)) {\n      throw new Error('Required parameter \"opts.messageSamples\" missing.');\n    }\n\n    if (_.isUndefined(opts.usAppToPersonUsecase)) {\n      throw new Error('Required parameter \"opts.usAppToPersonUsecase\" missing.');\n    }\n\n    if (_.isUndefined(opts.hasEmbeddedLinks)) {\n      throw new Error('Required parameter \"opts.hasEmbeddedLinks\" missing.');\n    }\n\n    if (_.isUndefined(opts.hasEmbeddedPhone)) {\n      throw new Error('Required parameter \"opts.hasEmbeddedPhone\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'BrandRegistrationSid': _.get(opts, 'brandRegistrationSid'),\n      'Description': _.get(opts, 'description'),\n      'MessageSamples': serialize.map(_.get(opts, 'messageSamples'), function (e) {\n        return e;\n      }),\n      'UsAppToPersonUsecase': _.get(opts, 'usAppToPersonUsecase'),\n      'HasEmbeddedLinks': serialize.bool(_.get(opts, 'hasEmbeddedLinks')),\n      'HasEmbeddedPhone': serialize.bool(_.get(opts, 'hasEmbeddedPhone'))\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new UsAppToPersonInstance(this._version, payload, this._solution.messagingServiceSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams UsAppToPersonInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  UsAppToPersonListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists UsAppToPersonInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  UsAppToPersonListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of UsAppToPersonInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  UsAppToPersonListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new UsAppToPersonPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of UsAppToPersonInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  UsAppToPersonListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new UsAppToPersonPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a us_app_to_person\n   *\n   * @function get\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {string} sid -\n   *          The SID that identifies the US A2P Compliance resource to fetch\n   *\n   * @returns {Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  UsAppToPersonListInstance.get = function get(sid) {\n    return new UsAppToPersonContext(this._version, this._solution.messagingServiceSid, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  UsAppToPersonListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  UsAppToPersonListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return UsAppToPersonListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the UsAppToPersonPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {UsAppToPersonSolution} solution - Path solution\n *\n * @returns UsAppToPersonPage\n */\n\n/* jshint ignore:end */\n\n\nUsAppToPersonPage = function UsAppToPersonPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(UsAppToPersonPage.prototype, Page.prototype);\n\nUsAppToPersonPage.prototype.constructor = UsAppToPersonPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of UsAppToPersonInstance\n *\n * @function getInstance\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonPage#\n *\n * @param {UsAppToPersonPayload} payload - Payload response from the API\n *\n * @returns UsAppToPersonInstance\n */\n\n/* jshint ignore:end */\n\nUsAppToPersonPage.prototype.getInstance = function getInstance(payload) {\n  return new UsAppToPersonInstance(this._version, payload, this._solution.messagingServiceSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nUsAppToPersonPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nUsAppToPersonPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the UsAppToPersonContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance\n *\n * @property {string} sid -\n *          The unique string that identifies a US A2P Compliance resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} brandRegistrationSid - A2P Brand Registration SID\n * @property {string} messagingServiceSid -\n *          The SID of the Messaging Service the resource is associated with\n * @property {string} description -\n *          A short description of what this SMS campaign does\n * @property {string} messageSamples - Message samples\n * @property {string} usAppToPersonUsecase - A2P Campaign Use Case.\n * @property {boolean} hasEmbeddedLinks -\n *          Indicate that this SMS campaign will send messages that contain links\n * @property {boolean} hasEmbeddedPhone -\n *          Indicates that this SMS campaign will send messages that contain phone numbers\n * @property {string} campaignStatus - Campaign status\n * @property {string} campaignId - The Campaign Registry (TCR) Campaign ID.\n * @property {boolean} isExternallyRegistered -\n *          Indicates whether the campaign was registered externally or not\n * @property {object} rateLimits -\n *          Rate limit and/or classification set by each carrier\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} url - The absolute URL of the US App to Person resource\n *\n * @param {V1} version - Version of the resource\n * @param {UsAppToPersonPayload} payload - The instance payload\n * @param {sid} messagingServiceSid -\n *          The SID of the Messaging Service the resource is associated with\n * @param {sid} sid -\n *          The SID that identifies the US A2P Compliance resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nUsAppToPersonInstance = function UsAppToPersonInstance(version, payload, messagingServiceSid, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.brandRegistrationSid = payload.brand_registration_sid; // jshint ignore:line\n\n  this.messagingServiceSid = payload.messaging_service_sid; // jshint ignore:line\n\n  this.description = payload.description; // jshint ignore:line\n\n  this.messageSamples = payload.message_samples; // jshint ignore:line\n\n  this.usAppToPersonUsecase = payload.us_app_to_person_usecase; // jshint ignore:line\n\n  this.hasEmbeddedLinks = payload.has_embedded_links; // jshint ignore:line\n\n  this.hasEmbeddedPhone = payload.has_embedded_phone; // jshint ignore:line\n\n  this.campaignStatus = payload.campaign_status; // jshint ignore:line\n\n  this.campaignId = payload.campaign_id; // jshint ignore:line\n\n  this.isExternallyRegistered = payload.is_externally_registered; // jshint ignore:line\n\n  this.rateLimits = payload.rate_limits; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    messagingServiceSid: messagingServiceSid,\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(UsAppToPersonInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new UsAppToPersonContext(this._version, this._solution.messagingServiceSid, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * remove a UsAppToPersonInstance\n *\n * @function remove\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsAppToPersonInstance\n */\n\n/* jshint ignore:end */\n\nUsAppToPersonInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * fetch a UsAppToPersonInstance\n *\n * @function fetch\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsAppToPersonInstance\n */\n\n/* jshint ignore:end */\n\n\nUsAppToPersonInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nUsAppToPersonInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nUsAppToPersonInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the UsAppToPersonContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} messagingServiceSid -\n *          The SID of the Messaging Service to fetch the resource from\n * @param {sid} sid -\n *          The SID that identifies the US A2P Compliance resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nUsAppToPersonContext = function UsAppToPersonContext(version, messagingServiceSid, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    messagingServiceSid: messagingServiceSid,\n    sid: sid\n  };\n  this._uri = `/Services/${messagingServiceSid}/Compliance/Usa2p/${sid}`;\n};\n/* jshint ignore:start */\n\n/**\n * remove a UsAppToPersonInstance\n *\n * @function remove\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsAppToPersonInstance\n */\n\n/* jshint ignore:end */\n\n\nUsAppToPersonContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a UsAppToPersonInstance\n *\n * @function fetch\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsAppToPersonInstance\n */\n\n/* jshint ignore:end */\n\n\nUsAppToPersonContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new UsAppToPersonInstance(this._version, payload, this._solution.messagingServiceSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nUsAppToPersonContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nUsAppToPersonContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  UsAppToPersonList: UsAppToPersonList,\n  UsAppToPersonPage: UsAppToPersonPage,\n  UsAppToPersonInstance: UsAppToPersonInstance,\n  UsAppToPersonContext: UsAppToPersonContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/messaging/v1/service/usAppToPerson.js"],"names":["Q","require","_","util","Page","deserialize","serialize","values","UsAppToPersonList","UsAppToPersonPage","UsAppToPersonInstance","UsAppToPersonContext","version","messagingServiceSid","UsAppToPersonListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","brandRegistrationSid","description","messageSamples","usAppToPersonUsecase","hasEmbeddedLinks","hasEmbeddedPhone","deferred","defer","data","of","map","e","bool","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","brand_registration_sid","messaging_service_sid","message_samples","us_app_to_person_usecase","has_embedded_links","has_embedded_phone","campaignStatus","campaign_status","campaignId","campaign_id","isExternallyRegistered","is_externally_registered","rateLimits","rate_limits","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","_context","undefined","Object","defineProperty","remove","_proxy","fetch","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar UsAppToPersonList;\nvar UsAppToPersonPage;\nvar UsAppToPersonInstance;\nvar UsAppToPersonContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the UsAppToPersonList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonList\n *\n * @param {Twilio.Messaging.V1} version - Version of the resource\n * @param {string} messagingServiceSid -\n *          The SID of the Messaging Service the resource is associated with\n */\n/* jshint ignore:end */\nUsAppToPersonList = function UsAppToPersonList(version, messagingServiceSid) {\n  /* jshint ignore:start */\n  /**\n   * @function usAppToPerson\n   * @memberof Twilio.Messaging.V1.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext}\n   */\n  /* jshint ignore:end */\n  function UsAppToPersonListInstance(sid) {\n    return UsAppToPersonListInstance.get(sid);\n  }\n\n  UsAppToPersonListInstance._version = version;\n  // Path Solution\n  UsAppToPersonListInstance._solution = {messagingServiceSid: messagingServiceSid};\n  UsAppToPersonListInstance._uri = `/Services/${messagingServiceSid}/Compliance/Usa2p`;\n  /* jshint ignore:start */\n  /**\n   * create a UsAppToPersonInstance\n   *\n   * @function create\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.brandRegistrationSid - A2P Brand Registration SID\n   * @param {string} opts.description -\n   *          A short description of what this SMS campaign does\n   * @param {string|list} opts.messageSamples - Message samples\n   * @param {string} opts.usAppToPersonUsecase - A2P Campaign Use Case.\n   * @param {boolean} opts.hasEmbeddedLinks -\n   *          Indicates that this SMS campaign will send messages that contain links\n   * @param {boolean} opts.hasEmbeddedPhone -\n   *          Indicates that this SMS campaign will send messages that contain phone numbers\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed UsAppToPersonInstance\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.brandRegistrationSid)) {\n      throw new Error('Required parameter \"opts.brandRegistrationSid\" missing.');\n    }\n    if (_.isUndefined(opts.description)) {\n      throw new Error('Required parameter \"opts.description\" missing.');\n    }\n    if (_.isUndefined(opts.messageSamples)) {\n      throw new Error('Required parameter \"opts.messageSamples\" missing.');\n    }\n    if (_.isUndefined(opts.usAppToPersonUsecase)) {\n      throw new Error('Required parameter \"opts.usAppToPersonUsecase\" missing.');\n    }\n    if (_.isUndefined(opts.hasEmbeddedLinks)) {\n      throw new Error('Required parameter \"opts.hasEmbeddedLinks\" missing.');\n    }\n    if (_.isUndefined(opts.hasEmbeddedPhone)) {\n      throw new Error('Required parameter \"opts.hasEmbeddedPhone\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'BrandRegistrationSid': _.get(opts, 'brandRegistrationSid'),\n      'Description': _.get(opts, 'description'),\n      'MessageSamples': serialize.map(_.get(opts, 'messageSamples'), function(e) { return e; }),\n      'UsAppToPersonUsecase': _.get(opts, 'usAppToPersonUsecase'),\n      'HasEmbeddedLinks': serialize.bool(_.get(opts, 'hasEmbeddedLinks')),\n      'HasEmbeddedPhone': serialize.bool(_.get(opts, 'hasEmbeddedPhone'))\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new UsAppToPersonInstance(\n        this._version,\n        payload,\n        this._solution.messagingServiceSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams UsAppToPersonInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists UsAppToPersonInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of UsAppToPersonInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new UsAppToPersonPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of UsAppToPersonInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new UsAppToPersonPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a us_app_to_person\n   *\n   * @function get\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {string} sid -\n   *          The SID that identifies the US A2P Compliance resource to fetch\n   *\n   * @returns {Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext}\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.get = function get(sid) {\n    return new UsAppToPersonContext(this._version, this._solution.messagingServiceSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  UsAppToPersonListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return UsAppToPersonListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UsAppToPersonPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {UsAppToPersonSolution} solution - Path solution\n *\n * @returns UsAppToPersonPage\n */\n/* jshint ignore:end */\nUsAppToPersonPage = function UsAppToPersonPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(UsAppToPersonPage.prototype, Page.prototype);\nUsAppToPersonPage.prototype.constructor = UsAppToPersonPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of UsAppToPersonInstance\n *\n * @function getInstance\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonPage#\n *\n * @param {UsAppToPersonPayload} payload - Payload response from the API\n *\n * @returns UsAppToPersonInstance\n */\n/* jshint ignore:end */\nUsAppToPersonPage.prototype.getInstance = function getInstance(payload) {\n  return new UsAppToPersonInstance(this._version, payload, this._solution.messagingServiceSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsAppToPersonPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nUsAppToPersonPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UsAppToPersonContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance\n *\n * @property {string} sid -\n *          The unique string that identifies a US A2P Compliance resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} brandRegistrationSid - A2P Brand Registration SID\n * @property {string} messagingServiceSid -\n *          The SID of the Messaging Service the resource is associated with\n * @property {string} description -\n *          A short description of what this SMS campaign does\n * @property {string} messageSamples - Message samples\n * @property {string} usAppToPersonUsecase - A2P Campaign Use Case.\n * @property {boolean} hasEmbeddedLinks -\n *          Indicate that this SMS campaign will send messages that contain links\n * @property {boolean} hasEmbeddedPhone -\n *          Indicates that this SMS campaign will send messages that contain phone numbers\n * @property {string} campaignStatus - Campaign status\n * @property {string} campaignId - The Campaign Registry (TCR) Campaign ID.\n * @property {boolean} isExternallyRegistered -\n *          Indicates whether the campaign was registered externally or not\n * @property {object} rateLimits -\n *          Rate limit and/or classification set by each carrier\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} url - The absolute URL of the US App to Person resource\n *\n * @param {V1} version - Version of the resource\n * @param {UsAppToPersonPayload} payload - The instance payload\n * @param {sid} messagingServiceSid -\n *          The SID of the Messaging Service the resource is associated with\n * @param {sid} sid -\n *          The SID that identifies the US A2P Compliance resource to fetch\n */\n/* jshint ignore:end */\nUsAppToPersonInstance = function UsAppToPersonInstance(version, payload,\n                                                        messagingServiceSid,\n                                                        sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.brandRegistrationSid = payload.brand_registration_sid; // jshint ignore:line\n  this.messagingServiceSid = payload.messaging_service_sid; // jshint ignore:line\n  this.description = payload.description; // jshint ignore:line\n  this.messageSamples = payload.message_samples; // jshint ignore:line\n  this.usAppToPersonUsecase = payload.us_app_to_person_usecase; // jshint ignore:line\n  this.hasEmbeddedLinks = payload.has_embedded_links; // jshint ignore:line\n  this.hasEmbeddedPhone = payload.has_embedded_phone; // jshint ignore:line\n  this.campaignStatus = payload.campaign_status; // jshint ignore:line\n  this.campaignId = payload.campaign_id; // jshint ignore:line\n  this.isExternallyRegistered = payload.is_externally_registered; // jshint ignore:line\n  this.rateLimits = payload.rate_limits; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {messagingServiceSid: messagingServiceSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(UsAppToPersonInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new UsAppToPersonContext(\n          this._version,\n          this._solution.messagingServiceSid,\n          this._solution.sid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * remove a UsAppToPersonInstance\n *\n * @function remove\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsAppToPersonInstance\n */\n/* jshint ignore:end */\nUsAppToPersonInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a UsAppToPersonInstance\n *\n * @function fetch\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsAppToPersonInstance\n */\n/* jshint ignore:end */\nUsAppToPersonInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsAppToPersonInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nUsAppToPersonInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UsAppToPersonContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} messagingServiceSid -\n *          The SID of the Messaging Service to fetch the resource from\n * @param {sid} sid -\n *          The SID that identifies the US A2P Compliance resource to fetch\n */\n/* jshint ignore:end */\nUsAppToPersonContext = function UsAppToPersonContext(version,\n                                                      messagingServiceSid, sid)\n                                                      {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {messagingServiceSid: messagingServiceSid, sid: sid, };\n  this._uri = `/Services/${messagingServiceSid}/Compliance/Usa2p/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * remove a UsAppToPersonInstance\n *\n * @function remove\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsAppToPersonInstance\n */\n/* jshint ignore:end */\nUsAppToPersonContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a UsAppToPersonInstance\n *\n * @function fetch\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsAppToPersonInstance\n */\n/* jshint ignore:end */\nUsAppToPersonContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new UsAppToPersonInstance(\n      this._version,\n      payload,\n      this._solution.messagingServiceSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsAppToPersonContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nUsAppToPersonContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  UsAppToPersonList: UsAppToPersonList,\n  UsAppToPersonPage: UsAppToPersonPage,\n  UsAppToPersonInstance: UsAppToPersonInstance,\n  UsAppToPersonContext: UsAppToPersonContext\n};\n"]},"metadata":{},"sourceType":"script"}