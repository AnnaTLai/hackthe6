{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar AddressList = require('./account/address').AddressList;\n\nvar ApplicationList = require('./account/application').ApplicationList;\n\nvar AuthorizedConnectAppList = require('./account/authorizedConnectApp').AuthorizedConnectAppList;\n\nvar AvailablePhoneNumberCountryList = require('./account/availablePhoneNumber').AvailablePhoneNumberCountryList;\n\nvar BalanceList = require('./account/balance').BalanceList;\n\nvar CallList = require('./account/call').CallList;\n\nvar ConferenceList = require('./account/conference').ConferenceList;\n\nvar ConnectAppList = require('./account/connectApp').ConnectAppList;\n\nvar IncomingPhoneNumberList = require('./account/incomingPhoneNumber').IncomingPhoneNumberList;\n\nvar KeyList = require('./account/key').KeyList;\n\nvar MessageList = require('./account/message').MessageList;\n\nvar NewKeyList = require('./account/newKey').NewKeyList;\n\nvar NewSigningKeyList = require('./account/newSigningKey').NewSigningKeyList;\n\nvar NotificationList = require('./account/notification').NotificationList;\n\nvar OutgoingCallerIdList = require('./account/outgoingCallerId').OutgoingCallerIdList;\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar QueueList = require('./account/queue').QueueList;\n\nvar RecordingList = require('./account/recording').RecordingList;\n\nvar ShortCodeList = require('./account/shortCode').ShortCodeList;\n\nvar SigningKeyList = require('./account/signingKey').SigningKeyList;\n\nvar SipList = require('./account/sip').SipList;\n\nvar TokenList = require('./account/token').TokenList;\n\nvar TranscriptionList = require('./account/transcription').TranscriptionList;\n\nvar UsageList = require('./account/usage').UsageList;\n\nvar ValidationRequestList = require('./account/validationRequest').ValidationRequestList;\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar AccountList;\nvar AccountPage;\nvar AccountInstance;\nvar AccountContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the AccountList\n *\n * @constructor Twilio.Api.V2010.AccountList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nAccountList = function AccountList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function accounts\n   * @memberof Twilio.Api.V2010#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext}\n   */\n\n  /* jshint ignore:end */\n  function AccountListInstance(sid) {\n    return AccountListInstance.get(sid);\n  }\n\n  AccountListInstance._version = version; // Path Solution\n\n  AccountListInstance._solution = {};\n  AccountListInstance._uri = `/Accounts.json`;\n  /* jshint ignore:start */\n\n  /**\n   * create a AccountInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of the account\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed AccountInstance\n   */\n\n  /* jshint ignore:end */\n\n  AccountListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new AccountInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams AccountInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - FriendlyName to filter on\n   * @param {account.status} [opts.status] - Status to filter on\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  AccountListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists AccountInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - FriendlyName to filter on\n   * @param {account.status} [opts.status] - Status to filter on\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  AccountListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of AccountInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - FriendlyName to filter on\n   * @param {account.status} [opts.status] - Status to filter on\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  AccountListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'Status': _.get(opts, 'status'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new AccountPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of AccountInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  AccountListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new AccountPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a account\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {string} sid - Fetch by unique Account Sid\n   *\n   * @returns {Twilio.Api.V2010.AccountContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  AccountListInstance.get = function get(sid) {\n    return new AccountContext(this._version, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  AccountListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  AccountListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return AccountListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the AccountPage\n *\n * @constructor Twilio.Api.V2010.AccountPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {AccountSolution} solution - Path solution\n *\n * @returns AccountPage\n */\n\n/* jshint ignore:end */\n\n\nAccountPage = function AccountPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(AccountPage.prototype, Page.prototype);\n\nAccountPage.prototype.constructor = AccountPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of AccountInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountPage#\n *\n * @param {AccountPayload} payload - Payload response from the API\n *\n * @returns AccountInstance\n */\n\n/* jshint ignore:end */\n\nAccountPage.prototype.getInstance = function getInstance(payload) {\n  return new AccountInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nAccountPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nAccountPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the AccountContext\n *\n * @constructor Twilio.Api.V2010.AccountInstance\n *\n * @property {string} authToken - The authorization token for this account\n * @property {Date} dateCreated - The date this account was created\n * @property {Date} dateUpdated - The date this account was last updated\n * @property {string} friendlyName - A human readable description of this account\n * @property {string} ownerAccountSid -\n *          The unique 34 character id representing the parent of this account\n * @property {string} sid -\n *          A 34 character string that uniquely identifies this resource.\n * @property {account.status} status - The status of this account\n * @property {string} subresourceUris - Account Instance Subresources\n * @property {account.type} type - The type of this account\n * @property {string} uri -\n *          The URI for this resource, relative to `https://api.twilio.com`\n *\n * @param {V2010} version - Version of the resource\n * @param {AccountPayload} payload - The instance payload\n * @param {sid} sid - Fetch by unique Account Sid\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance = function AccountInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.authToken = payload.auth_token; // jshint ignore:line\n\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.ownerAccountSid = payload.owner_account_sid; // jshint ignore:line\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.status = payload.status; // jshint ignore:line\n\n  this.subresourceUris = payload.subresource_uris; // jshint ignore:line\n\n  this.type = payload.type; // jshint ignore:line\n\n  this.uri = payload.uri; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(AccountInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new AccountContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a AccountInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AccountInstance\n */\n\n/* jshint ignore:end */\n\nAccountInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a AccountInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - FriendlyName to update\n * @param {account.status} [opts.status] - Status to update the Account with\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AccountInstance\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Access the addresses\n *\n * @function addresses\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.AddressList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.addresses = function addresses() {\n  return this._proxy.addresses;\n};\n/* jshint ignore:start */\n\n/**\n * Access the applications\n *\n * @function applications\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ApplicationList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.applications = function applications() {\n  return this._proxy.applications;\n};\n/* jshint ignore:start */\n\n/**\n * Access the authorizedConnectApps\n *\n * @function authorizedConnectApps\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.authorizedConnectApps = function authorizedConnectApps() {\n  return this._proxy.authorizedConnectApps;\n};\n/* jshint ignore:start */\n\n/**\n * Access the availablePhoneNumbers\n *\n * @function availablePhoneNumbers\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.availablePhoneNumbers = function availablePhoneNumbers() {\n  return this._proxy.availablePhoneNumbers;\n};\n/* jshint ignore:start */\n\n/**\n * Access the balance\n *\n * @function balance\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.BalanceList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.balance = function balance() {\n  return this._proxy.balance;\n};\n/* jshint ignore:start */\n\n/**\n * Access the calls\n *\n * @function calls\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.CallList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.calls = function calls() {\n  return this._proxy.calls;\n};\n/* jshint ignore:start */\n\n/**\n * Access the conferences\n *\n * @function conferences\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ConferenceList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.conferences = function conferences() {\n  return this._proxy.conferences;\n};\n/* jshint ignore:start */\n\n/**\n * Access the connectApps\n *\n * @function connectApps\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ConnectAppList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.connectApps = function connectApps() {\n  return this._proxy.connectApps;\n};\n/* jshint ignore:start */\n\n/**\n * Access the incomingPhoneNumbers\n *\n * @function incomingPhoneNumbers\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.incomingPhoneNumbers = function incomingPhoneNumbers() {\n  return this._proxy.incomingPhoneNumbers;\n};\n/* jshint ignore:start */\n\n/**\n * Access the keys\n *\n * @function keys\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.KeyList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.keys = function keys() {\n  return this._proxy.keys;\n};\n/* jshint ignore:start */\n\n/**\n * Access the messages\n *\n * @function messages\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.MessageList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.messages = function messages() {\n  return this._proxy.messages;\n};\n/* jshint ignore:start */\n\n/**\n * Access the newKeys\n *\n * @function newKeys\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.NewKeyList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.newKeys = function newKeys() {\n  return this._proxy.newKeys;\n};\n/* jshint ignore:start */\n\n/**\n * Access the newSigningKeys\n *\n * @function newSigningKeys\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.NewSigningKeyList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.newSigningKeys = function newSigningKeys() {\n  return this._proxy.newSigningKeys;\n};\n/* jshint ignore:start */\n\n/**\n * Access the notifications\n *\n * @function notifications\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.NotificationList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.notifications = function notifications() {\n  return this._proxy.notifications;\n};\n/* jshint ignore:start */\n\n/**\n * Access the outgoingCallerIds\n *\n * @function outgoingCallerIds\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.OutgoingCallerIdList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.outgoingCallerIds = function outgoingCallerIds() {\n  return this._proxy.outgoingCallerIds;\n};\n/* jshint ignore:start */\n\n/**\n * Access the queues\n *\n * @function queues\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.QueueList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.queues = function queues() {\n  return this._proxy.queues;\n};\n/* jshint ignore:start */\n\n/**\n * Access the recordings\n *\n * @function recordings\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.RecordingList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.recordings = function recordings() {\n  return this._proxy.recordings;\n};\n/* jshint ignore:start */\n\n/**\n * Access the signingKeys\n *\n * @function signingKeys\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.SigningKeyList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.signingKeys = function signingKeys() {\n  return this._proxy.signingKeys;\n};\n/* jshint ignore:start */\n\n/**\n * Access the sip\n *\n * @function sip\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.SipList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.sip = function sip() {\n  return this._proxy.sip;\n};\n/* jshint ignore:start */\n\n/**\n * Access the shortCodes\n *\n * @function shortCodes\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ShortCodeList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.shortCodes = function shortCodes() {\n  return this._proxy.shortCodes;\n};\n/* jshint ignore:start */\n\n/**\n * Access the tokens\n *\n * @function tokens\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.TokenList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.tokens = function tokens() {\n  return this._proxy.tokens;\n};\n/* jshint ignore:start */\n\n/**\n * Access the transcriptions\n *\n * @function transcriptions\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.TranscriptionList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.transcriptions = function transcriptions() {\n  return this._proxy.transcriptions;\n};\n/* jshint ignore:start */\n\n/**\n * Access the usage\n *\n * @function usage\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.UsageList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.usage = function usage() {\n  return this._proxy.usage;\n};\n/* jshint ignore:start */\n\n/**\n * Access the validationRequests\n *\n * @function validationRequests\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ValidationRequestList}\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.validationRequests = function validationRequests() {\n  return this._proxy.validationRequests;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nAccountInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nAccountInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the AccountContext\n *\n * @constructor Twilio.Api.V2010.AccountContext\n *\n * @property {Twilio.Api.V2010.AccountContext.AddressList} addresses -\n *          addresses resource\n * @property {Twilio.Api.V2010.AccountContext.ApplicationList} applications -\n *          applications resource\n * @property {Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList} authorizedConnectApps -\n *          authorizedConnectApps resource\n * @property {Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryList} availablePhoneNumbers -\n *          availablePhoneNumbers resource\n * @property {Twilio.Api.V2010.AccountContext.BalanceList} balance -\n *          balance resource\n * @property {Twilio.Api.V2010.AccountContext.CallList} calls - calls resource\n * @property {Twilio.Api.V2010.AccountContext.ConferenceList} conferences -\n *          conferences resource\n * @property {Twilio.Api.V2010.AccountContext.ConnectAppList} connectApps -\n *          connectApps resource\n * @property {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList} incomingPhoneNumbers -\n *          incomingPhoneNumbers resource\n * @property {Twilio.Api.V2010.AccountContext.KeyList} keys - keys resource\n * @property {Twilio.Api.V2010.AccountContext.MessageList} messages -\n *          messages resource\n * @property {Twilio.Api.V2010.AccountContext.NewKeyList} newKeys -\n *          newKeys resource\n * @property {Twilio.Api.V2010.AccountContext.NewSigningKeyList} newSigningKeys -\n *          newSigningKeys resource\n * @property {Twilio.Api.V2010.AccountContext.NotificationList} notifications -\n *          notifications resource\n * @property {Twilio.Api.V2010.AccountContext.OutgoingCallerIdList} outgoingCallerIds -\n *          outgoingCallerIds resource\n * @property {Twilio.Api.V2010.AccountContext.QueueList} queues - queues resource\n * @property {Twilio.Api.V2010.AccountContext.RecordingList} recordings -\n *          recordings resource\n * @property {Twilio.Api.V2010.AccountContext.SigningKeyList} signingKeys -\n *          signingKeys resource\n * @property {Twilio.Api.V2010.AccountContext.SipList} sip - sip resource\n * @property {Twilio.Api.V2010.AccountContext.ShortCodeList} shortCodes -\n *          shortCodes resource\n * @property {Twilio.Api.V2010.AccountContext.TokenList} tokens - tokens resource\n * @property {Twilio.Api.V2010.AccountContext.TranscriptionList} transcriptions -\n *          transcriptions resource\n * @property {Twilio.Api.V2010.AccountContext.UsageList} usage - usage resource\n * @property {Twilio.Api.V2010.AccountContext.ValidationRequestList} validationRequests -\n *          validationRequests resource\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} sid - Fetch by unique Account Sid\n */\n\n/* jshint ignore:end */\n\n\nAccountContext = function AccountContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/Accounts/${sid}.json`; // Dependents\n\n  this._addresses = undefined;\n  this._applications = undefined;\n  this._authorizedConnectApps = undefined;\n  this._availablePhoneNumbers = undefined;\n  this._balance = undefined;\n  this._calls = undefined;\n  this._conferences = undefined;\n  this._connectApps = undefined;\n  this._incomingPhoneNumbers = undefined;\n  this._keys = undefined;\n  this._messages = undefined;\n  this._newKeys = undefined;\n  this._newSigningKeys = undefined;\n  this._notifications = undefined;\n  this._outgoingCallerIds = undefined;\n  this._queues = undefined;\n  this._recordings = undefined;\n  this._signingKeys = undefined;\n  this._sip = undefined;\n  this._shortCodes = undefined;\n  this._tokens = undefined;\n  this._transcriptions = undefined;\n  this._usage = undefined;\n  this._validationRequests = undefined;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a AccountInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AccountInstance\n */\n\n/* jshint ignore:end */\n\n\nAccountContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new AccountInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a AccountInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - FriendlyName to update\n * @param {account.status} [opts.status] - Status to update the Account with\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AccountInstance\n */\n\n/* jshint ignore:end */\n\n\nAccountContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'Status': _.get(opts, 'status')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new AccountInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(AccountContext.prototype, 'addresses', {\n  get: function () {\n    if (!this._addresses) {\n      this._addresses = new AddressList(this._version, this._solution.sid);\n    }\n\n    return this._addresses;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'applications', {\n  get: function () {\n    if (!this._applications) {\n      this._applications = new ApplicationList(this._version, this._solution.sid);\n    }\n\n    return this._applications;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'authorizedConnectApps', {\n  get: function () {\n    if (!this._authorizedConnectApps) {\n      this._authorizedConnectApps = new AuthorizedConnectAppList(this._version, this._solution.sid);\n    }\n\n    return this._authorizedConnectApps;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'availablePhoneNumbers', {\n  get: function () {\n    if (!this._availablePhoneNumbers) {\n      this._availablePhoneNumbers = new AvailablePhoneNumberCountryList(this._version, this._solution.sid);\n    }\n\n    return this._availablePhoneNumbers;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'balance', {\n  get: function () {\n    if (!this._balance) {\n      this._balance = new BalanceList(this._version, this._solution.sid);\n    }\n\n    return this._balance;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'calls', {\n  get: function () {\n    if (!this._calls) {\n      this._calls = new CallList(this._version, this._solution.sid);\n    }\n\n    return this._calls;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'conferences', {\n  get: function () {\n    if (!this._conferences) {\n      this._conferences = new ConferenceList(this._version, this._solution.sid);\n    }\n\n    return this._conferences;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'connectApps', {\n  get: function () {\n    if (!this._connectApps) {\n      this._connectApps = new ConnectAppList(this._version, this._solution.sid);\n    }\n\n    return this._connectApps;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'incomingPhoneNumbers', {\n  get: function () {\n    if (!this._incomingPhoneNumbers) {\n      this._incomingPhoneNumbers = new IncomingPhoneNumberList(this._version, this._solution.sid);\n    }\n\n    return this._incomingPhoneNumbers;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'keys', {\n  get: function () {\n    if (!this._keys) {\n      this._keys = new KeyList(this._version, this._solution.sid);\n    }\n\n    return this._keys;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'messages', {\n  get: function () {\n    if (!this._messages) {\n      this._messages = new MessageList(this._version, this._solution.sid);\n    }\n\n    return this._messages;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'newKeys', {\n  get: function () {\n    if (!this._newKeys) {\n      this._newKeys = new NewKeyList(this._version, this._solution.sid);\n    }\n\n    return this._newKeys;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'newSigningKeys', {\n  get: function () {\n    if (!this._newSigningKeys) {\n      this._newSigningKeys = new NewSigningKeyList(this._version, this._solution.sid);\n    }\n\n    return this._newSigningKeys;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'notifications', {\n  get: function () {\n    if (!this._notifications) {\n      this._notifications = new NotificationList(this._version, this._solution.sid);\n    }\n\n    return this._notifications;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'outgoingCallerIds', {\n  get: function () {\n    if (!this._outgoingCallerIds) {\n      this._outgoingCallerIds = new OutgoingCallerIdList(this._version, this._solution.sid);\n    }\n\n    return this._outgoingCallerIds;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'queues', {\n  get: function () {\n    if (!this._queues) {\n      this._queues = new QueueList(this._version, this._solution.sid);\n    }\n\n    return this._queues;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'recordings', {\n  get: function () {\n    if (!this._recordings) {\n      this._recordings = new RecordingList(this._version, this._solution.sid);\n    }\n\n    return this._recordings;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'signingKeys', {\n  get: function () {\n    if (!this._signingKeys) {\n      this._signingKeys = new SigningKeyList(this._version, this._solution.sid);\n    }\n\n    return this._signingKeys;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'sip', {\n  get: function () {\n    if (!this._sip) {\n      this._sip = new SipList(this._version, this._solution.sid);\n    }\n\n    return this._sip;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'shortCodes', {\n  get: function () {\n    if (!this._shortCodes) {\n      this._shortCodes = new ShortCodeList(this._version, this._solution.sid);\n    }\n\n    return this._shortCodes;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'tokens', {\n  get: function () {\n    if (!this._tokens) {\n      this._tokens = new TokenList(this._version, this._solution.sid);\n    }\n\n    return this._tokens;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'transcriptions', {\n  get: function () {\n    if (!this._transcriptions) {\n      this._transcriptions = new TranscriptionList(this._version, this._solution.sid);\n    }\n\n    return this._transcriptions;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'usage', {\n  get: function () {\n    if (!this._usage) {\n      this._usage = new UsageList(this._version, this._solution.sid);\n    }\n\n    return this._usage;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'validationRequests', {\n  get: function () {\n    if (!this._validationRequests) {\n      this._validationRequests = new ValidationRequestList(this._version, this._solution.sid);\n    }\n\n    return this._validationRequests;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\nAccountContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nAccountContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  AccountList: AccountList,\n  AccountPage: AccountPage,\n  AccountInstance: AccountInstance,\n  AccountContext: AccountContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/src/token-service/node_modules/twilio/lib/rest/api/v2010/account.js"],"names":["Q","require","_","util","AddressList","ApplicationList","AuthorizedConnectAppList","AvailablePhoneNumberCountryList","BalanceList","CallList","ConferenceList","ConnectAppList","IncomingPhoneNumberList","KeyList","MessageList","NewKeyList","NewSigningKeyList","NotificationList","OutgoingCallerIdList","Page","QueueList","RecordingList","ShortCodeList","SigningKeyList","SipList","TokenList","TranscriptionList","UsageList","ValidationRequestList","deserialize","values","AccountList","AccountPage","AccountInstance","AccountContext","version","AccountListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isFunction","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","nodeify","each","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","authToken","auth_token","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","friendlyName","friendly_name","ownerAccountSid","owner_account_sid","status","subresourceUris","subresource_uris","type","_context","undefined","Object","defineProperty","fetch","_proxy","update","addresses","applications","authorizedConnectApps","availablePhoneNumbers","balance","calls","conferences","connectApps","incomingPhoneNumbers","keys","messages","newKeys","newSigningKeys","notifications","outgoingCallerIds","queues","recordings","signingKeys","sip","shortCodes","tokens","transcriptions","usage","validationRequests","_addresses","_applications","_authorizedConnectApps","_availablePhoneNumbers","_balance","_calls","_conferences","_connectApps","_incomingPhoneNumbers","_keys","_messages","_newKeys","_newSigningKeys","_notifications","_outgoingCallerIds","_queues","_recordings","_signingKeys","_sip","_shortCodes","_tokens","_transcriptions","_usage","_validationRequests","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar AddressList = require('./account/address').AddressList;\nvar ApplicationList = require('./account/application').ApplicationList;\nvar AuthorizedConnectAppList = require(\n    './account/authorizedConnectApp').AuthorizedConnectAppList;\nvar AvailablePhoneNumberCountryList = require(\n    './account/availablePhoneNumber').AvailablePhoneNumberCountryList;\nvar BalanceList = require('./account/balance').BalanceList;\nvar CallList = require('./account/call').CallList;\nvar ConferenceList = require('./account/conference').ConferenceList;\nvar ConnectAppList = require('./account/connectApp').ConnectAppList;\nvar IncomingPhoneNumberList = require(\n    './account/incomingPhoneNumber').IncomingPhoneNumberList;\nvar KeyList = require('./account/key').KeyList;\nvar MessageList = require('./account/message').MessageList;\nvar NewKeyList = require('./account/newKey').NewKeyList;\nvar NewSigningKeyList = require('./account/newSigningKey').NewSigningKeyList;\nvar NotificationList = require('./account/notification').NotificationList;\nvar OutgoingCallerIdList = require(\n    './account/outgoingCallerId').OutgoingCallerIdList;\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar QueueList = require('./account/queue').QueueList;\nvar RecordingList = require('./account/recording').RecordingList;\nvar ShortCodeList = require('./account/shortCode').ShortCodeList;\nvar SigningKeyList = require('./account/signingKey').SigningKeyList;\nvar SipList = require('./account/sip').SipList;\nvar TokenList = require('./account/token').TokenList;\nvar TranscriptionList = require('./account/transcription').TranscriptionList;\nvar UsageList = require('./account/usage').UsageList;\nvar ValidationRequestList = require(\n    './account/validationRequest').ValidationRequestList;\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar AccountList;\nvar AccountPage;\nvar AccountInstance;\nvar AccountContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the AccountList\n *\n * @constructor Twilio.Api.V2010.AccountList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n */\n/* jshint ignore:end */\nAccountList = function AccountList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function accounts\n   * @memberof Twilio.Api.V2010#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext}\n   */\n  /* jshint ignore:end */\n  function AccountListInstance(sid) {\n    return AccountListInstance.get(sid);\n  }\n\n  AccountListInstance._version = version;\n  // Path Solution\n  AccountListInstance._solution = {};\n  AccountListInstance._uri = `/Accounts.json`;\n  /* jshint ignore:start */\n  /**\n   * create a AccountInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of the account\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed AccountInstance\n   */\n  /* jshint ignore:end */\n  AccountListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({'FriendlyName': _.get(opts, 'friendlyName')});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new AccountInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams AccountInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - FriendlyName to filter on\n   * @param {account.status} [opts.status] - Status to filter on\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  AccountListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists AccountInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - FriendlyName to filter on\n   * @param {account.status} [opts.status] - Status to filter on\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AccountListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of AccountInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - FriendlyName to filter on\n   * @param {account.status} [opts.status] - Status to filter on\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AccountListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'Status': _.get(opts, 'status'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new AccountPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of AccountInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AccountListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new AccountPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a account\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {string} sid - Fetch by unique Account Sid\n   *\n   * @returns {Twilio.Api.V2010.AccountContext}\n   */\n  /* jshint ignore:end */\n  AccountListInstance.get = function get(sid) {\n    return new AccountContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  AccountListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  AccountListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return AccountListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AccountPage\n *\n * @constructor Twilio.Api.V2010.AccountPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {AccountSolution} solution - Path solution\n *\n * @returns AccountPage\n */\n/* jshint ignore:end */\nAccountPage = function AccountPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(AccountPage.prototype, Page.prototype);\nAccountPage.prototype.constructor = AccountPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of AccountInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountPage#\n *\n * @param {AccountPayload} payload - Payload response from the API\n *\n * @returns AccountInstance\n */\n/* jshint ignore:end */\nAccountPage.prototype.getInstance = function getInstance(payload) {\n  return new AccountInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAccountPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nAccountPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AccountContext\n *\n * @constructor Twilio.Api.V2010.AccountInstance\n *\n * @property {string} authToken - The authorization token for this account\n * @property {Date} dateCreated - The date this account was created\n * @property {Date} dateUpdated - The date this account was last updated\n * @property {string} friendlyName - A human readable description of this account\n * @property {string} ownerAccountSid -\n *          The unique 34 character id representing the parent of this account\n * @property {string} sid -\n *          A 34 character string that uniquely identifies this resource.\n * @property {account.status} status - The status of this account\n * @property {string} subresourceUris - Account Instance Subresources\n * @property {account.type} type - The type of this account\n * @property {string} uri -\n *          The URI for this resource, relative to `https://api.twilio.com`\n *\n * @param {V2010} version - Version of the resource\n * @param {AccountPayload} payload - The instance payload\n * @param {sid} sid - Fetch by unique Account Sid\n */\n/* jshint ignore:end */\nAccountInstance = function AccountInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.authToken = payload.auth_token; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.ownerAccountSid = payload.owner_account_sid; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.subresourceUris = payload.subresource_uris; // jshint ignore:line\n  this.type = payload.type; // jshint ignore:line\n  this.uri = payload.uri; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(AccountInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new AccountContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a AccountInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AccountInstance\n */\n/* jshint ignore:end */\nAccountInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a AccountInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - FriendlyName to update\n * @param {account.status} [opts.status] - Status to update the Account with\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AccountInstance\n */\n/* jshint ignore:end */\nAccountInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the addresses\n *\n * @function addresses\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.AddressList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.addresses = function addresses() {\n  return this._proxy.addresses;\n};\n\n/* jshint ignore:start */\n/**\n * Access the applications\n *\n * @function applications\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ApplicationList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.applications = function applications() {\n  return this._proxy.applications;\n};\n\n/* jshint ignore:start */\n/**\n * Access the authorizedConnectApps\n *\n * @function authorizedConnectApps\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.authorizedConnectApps = function\n    authorizedConnectApps() {\n  return this._proxy.authorizedConnectApps;\n};\n\n/* jshint ignore:start */\n/**\n * Access the availablePhoneNumbers\n *\n * @function availablePhoneNumbers\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.availablePhoneNumbers = function\n    availablePhoneNumbers() {\n  return this._proxy.availablePhoneNumbers;\n};\n\n/* jshint ignore:start */\n/**\n * Access the balance\n *\n * @function balance\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.BalanceList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.balance = function balance() {\n  return this._proxy.balance;\n};\n\n/* jshint ignore:start */\n/**\n * Access the calls\n *\n * @function calls\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.CallList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.calls = function calls() {\n  return this._proxy.calls;\n};\n\n/* jshint ignore:start */\n/**\n * Access the conferences\n *\n * @function conferences\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ConferenceList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.conferences = function conferences() {\n  return this._proxy.conferences;\n};\n\n/* jshint ignore:start */\n/**\n * Access the connectApps\n *\n * @function connectApps\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ConnectAppList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.connectApps = function connectApps() {\n  return this._proxy.connectApps;\n};\n\n/* jshint ignore:start */\n/**\n * Access the incomingPhoneNumbers\n *\n * @function incomingPhoneNumbers\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.incomingPhoneNumbers = function incomingPhoneNumbers()\n    {\n  return this._proxy.incomingPhoneNumbers;\n};\n\n/* jshint ignore:start */\n/**\n * Access the keys\n *\n * @function keys\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.KeyList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.keys = function keys() {\n  return this._proxy.keys;\n};\n\n/* jshint ignore:start */\n/**\n * Access the messages\n *\n * @function messages\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.MessageList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.messages = function messages() {\n  return this._proxy.messages;\n};\n\n/* jshint ignore:start */\n/**\n * Access the newKeys\n *\n * @function newKeys\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.NewKeyList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.newKeys = function newKeys() {\n  return this._proxy.newKeys;\n};\n\n/* jshint ignore:start */\n/**\n * Access the newSigningKeys\n *\n * @function newSigningKeys\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.NewSigningKeyList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.newSigningKeys = function newSigningKeys() {\n  return this._proxy.newSigningKeys;\n};\n\n/* jshint ignore:start */\n/**\n * Access the notifications\n *\n * @function notifications\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.NotificationList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.notifications = function notifications() {\n  return this._proxy.notifications;\n};\n\n/* jshint ignore:start */\n/**\n * Access the outgoingCallerIds\n *\n * @function outgoingCallerIds\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.OutgoingCallerIdList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.outgoingCallerIds = function outgoingCallerIds() {\n  return this._proxy.outgoingCallerIds;\n};\n\n/* jshint ignore:start */\n/**\n * Access the queues\n *\n * @function queues\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.QueueList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.queues = function queues() {\n  return this._proxy.queues;\n};\n\n/* jshint ignore:start */\n/**\n * Access the recordings\n *\n * @function recordings\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.RecordingList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.recordings = function recordings() {\n  return this._proxy.recordings;\n};\n\n/* jshint ignore:start */\n/**\n * Access the signingKeys\n *\n * @function signingKeys\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.SigningKeyList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.signingKeys = function signingKeys() {\n  return this._proxy.signingKeys;\n};\n\n/* jshint ignore:start */\n/**\n * Access the sip\n *\n * @function sip\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.SipList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.sip = function sip() {\n  return this._proxy.sip;\n};\n\n/* jshint ignore:start */\n/**\n * Access the shortCodes\n *\n * @function shortCodes\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ShortCodeList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.shortCodes = function shortCodes() {\n  return this._proxy.shortCodes;\n};\n\n/* jshint ignore:start */\n/**\n * Access the tokens\n *\n * @function tokens\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.TokenList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.tokens = function tokens() {\n  return this._proxy.tokens;\n};\n\n/* jshint ignore:start */\n/**\n * Access the transcriptions\n *\n * @function transcriptions\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.TranscriptionList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.transcriptions = function transcriptions() {\n  return this._proxy.transcriptions;\n};\n\n/* jshint ignore:start */\n/**\n * Access the usage\n *\n * @function usage\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.UsageList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.usage = function usage() {\n  return this._proxy.usage;\n};\n\n/* jshint ignore:start */\n/**\n * Access the validationRequests\n *\n * @function validationRequests\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ValidationRequestList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.validationRequests = function validationRequests() {\n  return this._proxy.validationRequests;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAccountInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nAccountInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AccountContext\n *\n * @constructor Twilio.Api.V2010.AccountContext\n *\n * @property {Twilio.Api.V2010.AccountContext.AddressList} addresses -\n *          addresses resource\n * @property {Twilio.Api.V2010.AccountContext.ApplicationList} applications -\n *          applications resource\n * @property {Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList} authorizedConnectApps -\n *          authorizedConnectApps resource\n * @property {Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryList} availablePhoneNumbers -\n *          availablePhoneNumbers resource\n * @property {Twilio.Api.V2010.AccountContext.BalanceList} balance -\n *          balance resource\n * @property {Twilio.Api.V2010.AccountContext.CallList} calls - calls resource\n * @property {Twilio.Api.V2010.AccountContext.ConferenceList} conferences -\n *          conferences resource\n * @property {Twilio.Api.V2010.AccountContext.ConnectAppList} connectApps -\n *          connectApps resource\n * @property {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList} incomingPhoneNumbers -\n *          incomingPhoneNumbers resource\n * @property {Twilio.Api.V2010.AccountContext.KeyList} keys - keys resource\n * @property {Twilio.Api.V2010.AccountContext.MessageList} messages -\n *          messages resource\n * @property {Twilio.Api.V2010.AccountContext.NewKeyList} newKeys -\n *          newKeys resource\n * @property {Twilio.Api.V2010.AccountContext.NewSigningKeyList} newSigningKeys -\n *          newSigningKeys resource\n * @property {Twilio.Api.V2010.AccountContext.NotificationList} notifications -\n *          notifications resource\n * @property {Twilio.Api.V2010.AccountContext.OutgoingCallerIdList} outgoingCallerIds -\n *          outgoingCallerIds resource\n * @property {Twilio.Api.V2010.AccountContext.QueueList} queues - queues resource\n * @property {Twilio.Api.V2010.AccountContext.RecordingList} recordings -\n *          recordings resource\n * @property {Twilio.Api.V2010.AccountContext.SigningKeyList} signingKeys -\n *          signingKeys resource\n * @property {Twilio.Api.V2010.AccountContext.SipList} sip - sip resource\n * @property {Twilio.Api.V2010.AccountContext.ShortCodeList} shortCodes -\n *          shortCodes resource\n * @property {Twilio.Api.V2010.AccountContext.TokenList} tokens - tokens resource\n * @property {Twilio.Api.V2010.AccountContext.TranscriptionList} transcriptions -\n *          transcriptions resource\n * @property {Twilio.Api.V2010.AccountContext.UsageList} usage - usage resource\n * @property {Twilio.Api.V2010.AccountContext.ValidationRequestList} validationRequests -\n *          validationRequests resource\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} sid - Fetch by unique Account Sid\n */\n/* jshint ignore:end */\nAccountContext = function AccountContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/Accounts/${sid}.json`;\n\n  // Dependents\n  this._addresses = undefined;\n  this._applications = undefined;\n  this._authorizedConnectApps = undefined;\n  this._availablePhoneNumbers = undefined;\n  this._balance = undefined;\n  this._calls = undefined;\n  this._conferences = undefined;\n  this._connectApps = undefined;\n  this._incomingPhoneNumbers = undefined;\n  this._keys = undefined;\n  this._messages = undefined;\n  this._newKeys = undefined;\n  this._newSigningKeys = undefined;\n  this._notifications = undefined;\n  this._outgoingCallerIds = undefined;\n  this._queues = undefined;\n  this._recordings = undefined;\n  this._signingKeys = undefined;\n  this._sip = undefined;\n  this._shortCodes = undefined;\n  this._tokens = undefined;\n  this._transcriptions = undefined;\n  this._usage = undefined;\n  this._validationRequests = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a AccountInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AccountInstance\n */\n/* jshint ignore:end */\nAccountContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new AccountInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a AccountInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - FriendlyName to update\n * @param {account.status} [opts.status] - Status to update the Account with\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AccountInstance\n */\n/* jshint ignore:end */\nAccountContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'Status': _.get(opts, 'status')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new AccountInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(AccountContext.prototype,\n  'addresses', {\n    get: function() {\n      if (!this._addresses) {\n        this._addresses = new AddressList(this._version, this._solution.sid);\n      }\n      return this._addresses;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'applications', {\n    get: function() {\n      if (!this._applications) {\n        this._applications = new ApplicationList(this._version, this._solution.sid);\n      }\n      return this._applications;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'authorizedConnectApps', {\n    get: function() {\n      if (!this._authorizedConnectApps) {\n        this._authorizedConnectApps = new AuthorizedConnectAppList(this._version, this._solution.sid);\n      }\n      return this._authorizedConnectApps;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'availablePhoneNumbers', {\n    get: function() {\n      if (!this._availablePhoneNumbers) {\n        this._availablePhoneNumbers = new AvailablePhoneNumberCountryList(\n          this._version,\n          this._solution.sid\n        );\n      }\n      return this._availablePhoneNumbers;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'balance', {\n    get: function() {\n      if (!this._balance) {\n        this._balance = new BalanceList(this._version, this._solution.sid);\n      }\n      return this._balance;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'calls', {\n    get: function() {\n      if (!this._calls) {\n        this._calls = new CallList(this._version, this._solution.sid);\n      }\n      return this._calls;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'conferences', {\n    get: function() {\n      if (!this._conferences) {\n        this._conferences = new ConferenceList(this._version, this._solution.sid);\n      }\n      return this._conferences;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'connectApps', {\n    get: function() {\n      if (!this._connectApps) {\n        this._connectApps = new ConnectAppList(this._version, this._solution.sid);\n      }\n      return this._connectApps;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'incomingPhoneNumbers', {\n    get: function() {\n      if (!this._incomingPhoneNumbers) {\n        this._incomingPhoneNumbers = new IncomingPhoneNumberList(this._version, this._solution.sid);\n      }\n      return this._incomingPhoneNumbers;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'keys', {\n    get: function() {\n      if (!this._keys) {\n        this._keys = new KeyList(this._version, this._solution.sid);\n      }\n      return this._keys;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'messages', {\n    get: function() {\n      if (!this._messages) {\n        this._messages = new MessageList(this._version, this._solution.sid);\n      }\n      return this._messages;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'newKeys', {\n    get: function() {\n      if (!this._newKeys) {\n        this._newKeys = new NewKeyList(this._version, this._solution.sid);\n      }\n      return this._newKeys;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'newSigningKeys', {\n    get: function() {\n      if (!this._newSigningKeys) {\n        this._newSigningKeys = new NewSigningKeyList(this._version, this._solution.sid);\n      }\n      return this._newSigningKeys;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'notifications', {\n    get: function() {\n      if (!this._notifications) {\n        this._notifications = new NotificationList(this._version, this._solution.sid);\n      }\n      return this._notifications;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'outgoingCallerIds', {\n    get: function() {\n      if (!this._outgoingCallerIds) {\n        this._outgoingCallerIds = new OutgoingCallerIdList(this._version, this._solution.sid);\n      }\n      return this._outgoingCallerIds;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'queues', {\n    get: function() {\n      if (!this._queues) {\n        this._queues = new QueueList(this._version, this._solution.sid);\n      }\n      return this._queues;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'recordings', {\n    get: function() {\n      if (!this._recordings) {\n        this._recordings = new RecordingList(this._version, this._solution.sid);\n      }\n      return this._recordings;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'signingKeys', {\n    get: function() {\n      if (!this._signingKeys) {\n        this._signingKeys = new SigningKeyList(this._version, this._solution.sid);\n      }\n      return this._signingKeys;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'sip', {\n    get: function() {\n      if (!this._sip) {\n        this._sip = new SipList(this._version, this._solution.sid);\n      }\n      return this._sip;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'shortCodes', {\n    get: function() {\n      if (!this._shortCodes) {\n        this._shortCodes = new ShortCodeList(this._version, this._solution.sid);\n      }\n      return this._shortCodes;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'tokens', {\n    get: function() {\n      if (!this._tokens) {\n        this._tokens = new TokenList(this._version, this._solution.sid);\n      }\n      return this._tokens;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'transcriptions', {\n    get: function() {\n      if (!this._transcriptions) {\n        this._transcriptions = new TranscriptionList(this._version, this._solution.sid);\n      }\n      return this._transcriptions;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'usage', {\n    get: function() {\n      if (!this._usage) {\n        this._usage = new UsageList(this._version, this._solution.sid);\n      }\n      return this._usage;\n    }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'validationRequests', {\n    get: function() {\n      if (!this._validationRequests) {\n        this._validationRequests = new ValidationRequestList(this._version, this._solution.sid);\n      }\n      return this._validationRequests;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAccountContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nAccountContext.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  AccountList: AccountList,\n  AccountPage: AccountPage,\n  AccountInstance: AccountInstance,\n  AccountContext: AccountContext\n};\n"]},"metadata":{},"sourceType":"module"}