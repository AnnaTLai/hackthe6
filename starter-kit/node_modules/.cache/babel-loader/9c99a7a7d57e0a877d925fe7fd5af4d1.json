{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar TaskQueueRealTimeStatisticsList;\nvar TaskQueueRealTimeStatisticsPage;\nvar TaskQueueRealTimeStatisticsInstance;\nvar TaskQueueRealTimeStatisticsContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the TaskQueueRealTimeStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid -\n *          The SID of the Workspace that contains the TaskQueue\n * @param {string} taskQueueSid -\n *          The SID of the TaskQueue from which these statistics were calculated\n */\n\n/* jshint ignore:end */\n\nTaskQueueRealTimeStatisticsList = function TaskQueueRealTimeStatisticsList(version, workspaceSid, taskQueueSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function realTimeStatistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext}\n   */\n\n  /* jshint ignore:end */\n  function TaskQueueRealTimeStatisticsListInstance(sid) {\n    return TaskQueueRealTimeStatisticsListInstance.get(sid);\n  }\n\n  TaskQueueRealTimeStatisticsListInstance._version = version; // Path Solution\n\n  TaskQueueRealTimeStatisticsListInstance._solution = {\n    workspaceSid: workspaceSid,\n    taskQueueSid: taskQueueSid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a task_queue_real_time_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext}\n   */\n\n  /* jshint ignore:end */\n\n  TaskQueueRealTimeStatisticsListInstance.get = function get() {\n    return new TaskQueueRealTimeStatisticsContext(this._version, this._solution.workspaceSid, this._solution.taskQueueSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  TaskQueueRealTimeStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TaskQueueRealTimeStatisticsListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TaskQueueRealTimeStatisticsListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TaskQueueRealTimeStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TaskQueueRealTimeStatisticsSolution} solution - Path solution\n *\n * @returns TaskQueueRealTimeStatisticsPage\n */\n\n/* jshint ignore:end */\n\n\nTaskQueueRealTimeStatisticsPage = function TaskQueueRealTimeStatisticsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TaskQueueRealTimeStatisticsPage.prototype, Page.prototype);\n\nTaskQueueRealTimeStatisticsPage.prototype.constructor = TaskQueueRealTimeStatisticsPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of TaskQueueRealTimeStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsPage#\n *\n * @param {TaskQueueRealTimeStatisticsPayload} payload -\n *          Payload response from the API\n *\n * @returns TaskQueueRealTimeStatisticsInstance\n */\n\n/* jshint ignore:end */\n\nTaskQueueRealTimeStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new TaskQueueRealTimeStatisticsInstance(this._version, payload, this._solution.workspaceSid, this._solution.taskQueueSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTaskQueueRealTimeStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nTaskQueueRealTimeStatisticsPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TaskQueueRealTimeStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {object} activityStatistics -\n *          The number of current Workers by Activity\n * @property {number} longestTaskWaitingAge - The age of the longest waiting Task\n * @property {string} longestTaskWaitingSid - The SID of the longest waiting Task\n * @property {number} longestRelativeTaskAgeInQueue -\n *          The relative age in the TaskQueue for the longest waiting Task.\n * @property {string} longestRelativeTaskSidInQueue -\n *          The SID of the Task waiting in the TaskQueue the longest.\n * @property {string} taskQueueSid -\n *          The SID of the TaskQueue from which these statistics were calculated\n * @property {object} tasksByPriority - The number of Tasks by priority\n * @property {object} tasksByStatus - The number of Tasks by their current status\n * @property {number} totalAvailableWorkers -\n *          The total number of Workers available for Tasks in the TaskQueue\n * @property {number} totalEligibleWorkers -\n *          The total number of Workers eligible for Tasks in the TaskQueue, independent of their Activity state\n * @property {number} totalTasks - The total number of Tasks\n * @property {string} workspaceSid -\n *          The SID of the Workspace that contains the TaskQueue\n * @property {string} url - The absolute URL of the TaskQueue statistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {TaskQueueRealTimeStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The SID of the Workspace that contains the TaskQueue\n * @param {sid} taskQueueSid -\n *          The SID of the TaskQueue from which these statistics were calculated\n */\n\n/* jshint ignore:end */\n\n\nTaskQueueRealTimeStatisticsInstance = function TaskQueueRealTimeStatisticsInstance(version, payload, workspaceSid, taskQueueSid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.activityStatistics = payload.activity_statistics; // jshint ignore:line\n\n  this.longestTaskWaitingAge = deserialize.integer(payload.longest_task_waiting_age); // jshint ignore:line\n\n  this.longestTaskWaitingSid = payload.longest_task_waiting_sid; // jshint ignore:line\n\n  this.longestRelativeTaskAgeInQueue = deserialize.integer(payload.longest_relative_task_age_in_queue); // jshint ignore:line\n\n  this.longestRelativeTaskSidInQueue = payload.longest_relative_task_sid_in_queue; // jshint ignore:line\n\n  this.taskQueueSid = payload.task_queue_sid; // jshint ignore:line\n\n  this.tasksByPriority = payload.tasks_by_priority; // jshint ignore:line\n\n  this.tasksByStatus = payload.tasks_by_status; // jshint ignore:line\n\n  this.totalAvailableWorkers = deserialize.integer(payload.total_available_workers); // jshint ignore:line\n\n  this.totalEligibleWorkers = deserialize.integer(payload.total_eligible_workers); // jshint ignore:line\n\n  this.totalTasks = deserialize.integer(payload.total_tasks); // jshint ignore:line\n\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    workspaceSid: workspaceSid,\n    taskQueueSid: taskQueueSid\n  };\n};\n\nObject.defineProperty(TaskQueueRealTimeStatisticsInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new TaskQueueRealTimeStatisticsContext(this._version, this._solution.workspaceSid, this._solution.taskQueueSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a TaskQueueRealTimeStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.taskChannel] -\n *          The TaskChannel for which to fetch statistics\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskQueueRealTimeStatisticsInstance\n */\n\n/* jshint ignore:end */\n\nTaskQueueRealTimeStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTaskQueueRealTimeStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nTaskQueueRealTimeStatisticsInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TaskQueueRealTimeStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The SID of the Workspace with the TaskQueue to fetch\n * @param {sid} taskQueueSid -\n *          The SID of the TaskQueue for which to fetch statistics\n */\n\n/* jshint ignore:end */\n\n\nTaskQueueRealTimeStatisticsContext = function TaskQueueRealTimeStatisticsContext(version, workspaceSid, taskQueueSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    workspaceSid: workspaceSid,\n    taskQueueSid: taskQueueSid\n  };\n  this._uri = `/Workspaces/${workspaceSid}/TaskQueues/${taskQueueSid}/RealTimeStatistics`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a TaskQueueRealTimeStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.taskChannel] -\n *          The TaskChannel for which to fetch statistics\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskQueueRealTimeStatisticsInstance\n */\n\n/* jshint ignore:end */\n\n\nTaskQueueRealTimeStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'TaskChannel': _.get(opts, 'taskChannel')\n  });\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new TaskQueueRealTimeStatisticsInstance(this._version, payload, this._solution.workspaceSid, this._solution.taskQueueSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTaskQueueRealTimeStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nTaskQueueRealTimeStatisticsContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TaskQueueRealTimeStatisticsList: TaskQueueRealTimeStatisticsList,\n  TaskQueueRealTimeStatisticsPage: TaskQueueRealTimeStatisticsPage,\n  TaskQueueRealTimeStatisticsInstance: TaskQueueRealTimeStatisticsInstance,\n  TaskQueueRealTimeStatisticsContext: TaskQueueRealTimeStatisticsContext\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/taskrouter/v1/workspace/taskQueue/taskQueueRealTimeStatistics.js"],"names":["Q","require","_","util","Page","deserialize","values","TaskQueueRealTimeStatisticsList","TaskQueueRealTimeStatisticsPage","TaskQueueRealTimeStatisticsInstance","TaskQueueRealTimeStatisticsContext","version","workspaceSid","taskQueueSid","TaskQueueRealTimeStatisticsListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","activityStatistics","activity_statistics","longestTaskWaitingAge","integer","longest_task_waiting_age","longestTaskWaitingSid","longest_task_waiting_sid","longestRelativeTaskAgeInQueue","longest_relative_task_age_in_queue","longestRelativeTaskSidInQueue","longest_relative_task_sid_in_queue","task_queue_sid","tasksByPriority","tasks_by_priority","tasksByStatus","tasks_by_status","totalAvailableWorkers","total_available_workers","totalEligibleWorkers","total_eligible_workers","totalTasks","total_tasks","workspace_sid","url","_context","undefined","Object","defineProperty","fetch","opts","callback","_proxy","_uri","deferred","defer","data","of","promise","uri","method","params","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar TaskQueueRealTimeStatisticsList;\nvar TaskQueueRealTimeStatisticsPage;\nvar TaskQueueRealTimeStatisticsInstance;\nvar TaskQueueRealTimeStatisticsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueRealTimeStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid -\n *          The SID of the Workspace that contains the TaskQueue\n * @param {string} taskQueueSid -\n *          The SID of the TaskQueue from which these statistics were calculated\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsList = function\n    TaskQueueRealTimeStatisticsList(version, workspaceSid, taskQueueSid) {\n  /* jshint ignore:start */\n  /**\n   * @function realTimeStatistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext}\n   */\n  /* jshint ignore:end */\n  function TaskQueueRealTimeStatisticsListInstance(sid) {\n    return TaskQueueRealTimeStatisticsListInstance.get(sid);\n  }\n\n  TaskQueueRealTimeStatisticsListInstance._version = version;\n  // Path Solution\n  TaskQueueRealTimeStatisticsListInstance._solution = {\n    workspaceSid: workspaceSid,\n    taskQueueSid: taskQueueSid\n  };\n  /* jshint ignore:start */\n  /**\n   * Constructs a task_queue_real_time_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext}\n   */\n  /* jshint ignore:end */\n  TaskQueueRealTimeStatisticsListInstance.get = function get() {\n    return new TaskQueueRealTimeStatisticsContext(\n      this._version,\n      this._solution.workspaceSid,\n      this._solution.taskQueueSid\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  TaskQueueRealTimeStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TaskQueueRealTimeStatisticsListInstance[util.inspect.custom] = function\n      inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TaskQueueRealTimeStatisticsListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueRealTimeStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TaskQueueRealTimeStatisticsSolution} solution - Path solution\n *\n * @returns TaskQueueRealTimeStatisticsPage\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsPage = function\n    TaskQueueRealTimeStatisticsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TaskQueueRealTimeStatisticsPage.prototype, Page.prototype);\nTaskQueueRealTimeStatisticsPage.prototype.constructor = TaskQueueRealTimeStatisticsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of TaskQueueRealTimeStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsPage#\n *\n * @param {TaskQueueRealTimeStatisticsPayload} payload -\n *          Payload response from the API\n *\n * @returns TaskQueueRealTimeStatisticsInstance\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsPage.prototype.getInstance = function\n    getInstance(payload) {\n  return new TaskQueueRealTimeStatisticsInstance(\n    this._version,\n    payload,\n    this._solution.workspaceSid,\n    this._solution.taskQueueSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTaskQueueRealTimeStatisticsPage.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueRealTimeStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {object} activityStatistics -\n *          The number of current Workers by Activity\n * @property {number} longestTaskWaitingAge - The age of the longest waiting Task\n * @property {string} longestTaskWaitingSid - The SID of the longest waiting Task\n * @property {number} longestRelativeTaskAgeInQueue -\n *          The relative age in the TaskQueue for the longest waiting Task.\n * @property {string} longestRelativeTaskSidInQueue -\n *          The SID of the Task waiting in the TaskQueue the longest.\n * @property {string} taskQueueSid -\n *          The SID of the TaskQueue from which these statistics were calculated\n * @property {object} tasksByPriority - The number of Tasks by priority\n * @property {object} tasksByStatus - The number of Tasks by their current status\n * @property {number} totalAvailableWorkers -\n *          The total number of Workers available for Tasks in the TaskQueue\n * @property {number} totalEligibleWorkers -\n *          The total number of Workers eligible for Tasks in the TaskQueue, independent of their Activity state\n * @property {number} totalTasks - The total number of Tasks\n * @property {string} workspaceSid -\n *          The SID of the Workspace that contains the TaskQueue\n * @property {string} url - The absolute URL of the TaskQueue statistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {TaskQueueRealTimeStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The SID of the Workspace that contains the TaskQueue\n * @param {sid} taskQueueSid -\n *          The SID of the TaskQueue from which these statistics were calculated\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsInstance = function\n    TaskQueueRealTimeStatisticsInstance(version, payload, workspaceSid,\n    taskQueueSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.activityStatistics = payload.activity_statistics; // jshint ignore:line\n  this.longestTaskWaitingAge = deserialize.integer(payload.longest_task_waiting_age); // jshint ignore:line\n  this.longestTaskWaitingSid = payload.longest_task_waiting_sid; // jshint ignore:line\n  this.longestRelativeTaskAgeInQueue = deserialize.integer(payload.longest_relative_task_age_in_queue); // jshint ignore:line\n  this.longestRelativeTaskSidInQueue = payload.longest_relative_task_sid_in_queue; // jshint ignore:line\n  this.taskQueueSid = payload.task_queue_sid; // jshint ignore:line\n  this.tasksByPriority = payload.tasks_by_priority; // jshint ignore:line\n  this.tasksByStatus = payload.tasks_by_status; // jshint ignore:line\n  this.totalAvailableWorkers = deserialize.integer(payload.total_available_workers); // jshint ignore:line\n  this.totalEligibleWorkers = deserialize.integer(payload.total_eligible_workers); // jshint ignore:line\n  this.totalTasks = deserialize.integer(payload.total_tasks); // jshint ignore:line\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {workspaceSid: workspaceSid, taskQueueSid: taskQueueSid, };\n};\n\nObject.defineProperty(TaskQueueRealTimeStatisticsInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new TaskQueueRealTimeStatisticsContext(\n          this._version,\n          this._solution.workspaceSid,\n          this._solution.taskQueueSid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a TaskQueueRealTimeStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.taskChannel] -\n *          The TaskChannel for which to fetch statistics\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskQueueRealTimeStatisticsInstance\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsInstance.prototype.fetch = function fetch(opts,\n    callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTaskQueueRealTimeStatisticsInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueRealTimeStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The SID of the Workspace with the TaskQueue to fetch\n * @param {sid} taskQueueSid -\n *          The SID of the TaskQueue for which to fetch statistics\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsContext = function\n    TaskQueueRealTimeStatisticsContext(version, workspaceSid, taskQueueSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {workspaceSid: workspaceSid, taskQueueSid: taskQueueSid, };\n  this._uri = `/Workspaces/${workspaceSid}/TaskQueues/${taskQueueSid}/RealTimeStatistics`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a TaskQueueRealTimeStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.taskChannel] -\n *          The TaskChannel for which to fetch statistics\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskQueueRealTimeStatisticsInstance\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsContext.prototype.fetch = function fetch(opts,\n    callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({'TaskChannel': _.get(opts, 'taskChannel')});\n\n  var promise = this._version.fetch({uri: this._uri, method: 'GET', params: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new TaskQueueRealTimeStatisticsInstance(\n      this._version,\n      payload,\n      this._solution.workspaceSid,\n      this._solution.taskQueueSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nTaskQueueRealTimeStatisticsContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TaskQueueRealTimeStatisticsList: TaskQueueRealTimeStatisticsList,\n  TaskQueueRealTimeStatisticsPage: TaskQueueRealTimeStatisticsPage,\n  TaskQueueRealTimeStatisticsInstance: TaskQueueRealTimeStatisticsInstance,\n  TaskQueueRealTimeStatisticsContext: TaskQueueRealTimeStatisticsContext\n};\n"]},"metadata":{},"sourceType":"script"}