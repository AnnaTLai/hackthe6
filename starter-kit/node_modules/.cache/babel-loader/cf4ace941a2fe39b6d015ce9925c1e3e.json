{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar UsecaseList;\nvar UsecasePage;\nvar UsecaseInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the UsecaseList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.UsecaseList\n *\n * @param {Twilio.Messaging.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nUsecaseList = function UsecaseList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function usecases\n   * @memberof Twilio.Messaging.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Messaging.V1.UsecaseContext}\n   */\n\n  /* jshint ignore:end */\n  function UsecaseListInstance(sid) {\n    return UsecaseListInstance.get(sid);\n  }\n\n  UsecaseListInstance._version = version; // Path Solution\n\n  UsecaseListInstance._solution = {};\n  UsecaseListInstance._uri = `/Services/Usecases`;\n  /* jshint ignore:start */\n\n  /**\n   * fetch a UsecaseInstance\n   *\n   * @function fetch\n   * @memberof Twilio.Messaging.V1.UsecaseList#\n   *\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed UsecaseInstance\n   */\n\n  /* jshint ignore:end */\n\n  UsecaseListInstance.fetch = function fetch(callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version.fetch({\n      uri: this._uri,\n      method: 'GET'\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new UsecaseInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Messaging.V1.UsecaseList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  UsecaseListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  UsecaseListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return UsecaseListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the UsecasePage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.UsecasePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {UsecaseSolution} solution - Path solution\n *\n * @returns UsecasePage\n */\n\n/* jshint ignore:end */\n\n\nUsecasePage = function UsecasePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(UsecasePage.prototype, Page.prototype);\n\nUsecasePage.prototype.constructor = UsecasePage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of UsecaseInstance\n *\n * @function getInstance\n * @memberof Twilio.Messaging.V1.UsecasePage#\n *\n * @param {UsecasePayload} payload - Payload response from the API\n *\n * @returns UsecaseInstance\n */\n\n/* jshint ignore:end */\n\nUsecasePage.prototype.getInstance = function getInstance(payload) {\n  return new UsecaseInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.UsecasePage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nUsecasePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nUsecasePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the UsecaseContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.UsecaseInstance\n *\n * @property {object} usecases - Human readable Messaging Service Use Case details\n *\n * @param {V1} version - Version of the resource\n * @param {UsecasePayload} payload - The instance payload\n */\n\n/* jshint ignore:end */\n\n\nUsecaseInstance = function UsecaseInstance(version, payload) {\n  this._version = version; // Marshaled Properties\n\n  this.usecases = payload.usecases; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {};\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.UsecaseInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nUsecaseInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nUsecaseInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  UsecaseList: UsecaseList,\n  UsecasePage: UsecasePage,\n  UsecaseInstance: UsecaseInstance\n};","map":{"version":3,"sources":["/Users/tony_niu/Visual Studio/Twilio/twilio-video-starter-kit/node_modules/twilio/lib/rest/messaging/v1/usecase.js"],"names":["Q","require","_","util","Page","values","UsecaseList","UsecasePage","UsecaseInstance","version","UsecaseListInstance","sid","get","_version","_solution","_uri","fetch","callback","deferred","defer","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","usecases","_context","undefined","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar UsecaseList;\nvar UsecasePage;\nvar UsecaseInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the UsecaseList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.UsecaseList\n *\n * @param {Twilio.Messaging.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nUsecaseList = function UsecaseList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function usecases\n   * @memberof Twilio.Messaging.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Messaging.V1.UsecaseContext}\n   */\n  /* jshint ignore:end */\n  function UsecaseListInstance(sid) {\n    return UsecaseListInstance.get(sid);\n  }\n\n  UsecaseListInstance._version = version;\n  // Path Solution\n  UsecaseListInstance._solution = {};\n  UsecaseListInstance._uri = `/Services/Usecases`;\n  /* jshint ignore:start */\n  /**\n   * fetch a UsecaseInstance\n   *\n   * @function fetch\n   * @memberof Twilio.Messaging.V1.UsecaseList#\n   *\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed UsecaseInstance\n   */\n  /* jshint ignore:end */\n  UsecaseListInstance.fetch = function fetch(callback) {\n    var deferred = Q.defer();\n    var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new UsecaseInstance(this._version, payload));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Messaging.V1.UsecaseList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  UsecaseListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  UsecaseListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return UsecaseListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UsecasePage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.UsecasePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {UsecaseSolution} solution - Path solution\n *\n * @returns UsecasePage\n */\n/* jshint ignore:end */\nUsecasePage = function UsecasePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(UsecasePage.prototype, Page.prototype);\nUsecasePage.prototype.constructor = UsecasePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of UsecaseInstance\n *\n * @function getInstance\n * @memberof Twilio.Messaging.V1.UsecasePage#\n *\n * @param {UsecasePayload} payload - Payload response from the API\n *\n * @returns UsecaseInstance\n */\n/* jshint ignore:end */\nUsecasePage.prototype.getInstance = function getInstance(payload) {\n  return new UsecaseInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.UsecasePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsecasePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nUsecasePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UsecaseContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.UsecaseInstance\n *\n * @property {object} usecases - Human readable Messaging Service Use Case details\n *\n * @param {V1} version - Version of the resource\n * @param {UsecasePayload} payload - The instance payload\n */\n/* jshint ignore:end */\nUsecaseInstance = function UsecaseInstance(version, payload) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.usecases = payload.usecases; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {};\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.UsecaseInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsecaseInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nUsecaseInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  UsecaseList: UsecaseList,\n  UsecasePage: UsecasePage,\n  UsecaseInstance: UsecaseInstance\n};\n"]},"metadata":{},"sourceType":"script"}